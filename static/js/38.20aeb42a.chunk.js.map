{"version":3,"file":"static/js/38.20aeb42a.chunk.js","mappings":"iKACA,SAASA,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GACvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GAC3CC,IAAmBI,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,UACtD,KAAKP,EAAKQ,KAAKC,MAAMT,EAAMG,EAC7B,CACA,OAAOH,CACT,CACe,SAASU,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAS,MAAQF,UAAUD,GAAKC,UAAUD,GAAK,CAAC,EACpDA,EAAI,EAAIf,EAAQI,OAAOc,IAAS,GAAIC,SAAQ,SAAUC,IACpD,EAAAC,EAAA,GAAeP,EAAQM,EAAKF,EAAOE,GACrC,IAAKhB,OAAOkB,0BAA4BlB,OAAOmB,iBAAiBT,EAAQV,OAAOkB,0BAA0BJ,IAAWlB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GAC5JhB,OAAOiB,eAAeP,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,GAC7E,GACF,CACA,OAAON,CACT,C,cChBMU,GAAsBC,EAAAA,EAAAA,eAAc,CACtCC,mBAAoB,SAACC,GAAC,OAAKA,CAAC,EAC5BC,UAAU,EACVC,cAAe,UCNbC,GAAgBL,EAAAA,EAAAA,eAAc,CAAC,GCG/BM,GAAkBN,EAAAA,EAAAA,eAAc,MCLhCO,EAAgC,qBAAbC,SCGnBC,EAA4BF,EAAYG,EAAAA,gBAAkBC,EAAAA,UCD1DC,GAAcZ,EAAAA,EAAAA,eAAc,CAAEa,QAAQ,ICF5C,SAASC,EAAYC,GACjB,MAAuB,kBAARA,GACXpC,OAAOqC,UAAUC,eAAeC,KAAKH,EAAK,UAClD,CCAA,SAASI,EAAeC,GACpB,MAAoB,kBAANA,GAAkBC,MAAMC,QAAQF,EAClD,CCLA,SAASG,EAAoBH,GACzB,MAAoB,kBAANA,GAAqC,oBAAZA,EAAEI,KAC7C,CCFA,IAAMC,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,WAASC,OAAKF,GCLpC,SAASG,EAAsBC,GAC3B,OAAQN,EAAoBM,EAAMC,UAC9BJ,EAAaK,MAAK,SAACC,GAAI,OAAKb,EAAeU,EAAMG,GAAM,GAC/D,CACA,SAASC,EAAcJ,GACnB,OAAOK,QAAQN,EAAsBC,IAAUA,EAAMM,SACzD,CCNA,SAASC,EAAuBP,GAC5B,IAAAQ,ECFJ,SAAgCR,EAAOS,GACnC,GAAIV,EAAsBC,GAAQ,CAC9B,IAAQU,EAAqBV,EAArBU,QAAST,EAAYD,EAAZC,QACjB,MAAO,CACHS,SAAqB,IAAZA,GAAqBpB,EAAeoB,GACvCA,OACAC,EACNV,QAASX,EAAeW,GAAWA,OAAUU,EAErD,CACA,OAAyB,IAAlBX,EAAMY,QAAoBH,EAAU,CAAC,CAChD,CDTiCI,CAAuBb,GAAOc,EAAAA,EAAAA,YAAWtC,IAA9DkC,EAAOF,EAAPE,QAAST,EAAOO,EAAPP,QACjB,OAAOc,EAAAA,EAAAA,UAAQ,iBAAO,CAAEL,QAAAA,EAAST,QAAAA,EAAS,GAAG,CAACe,EAA0BN,GAAUM,EAA0Bf,IAChH,CACA,SAASe,EAA0BC,GAC/B,OAAOzB,MAAMC,QAAQwB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,IAAME,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,EAAEC,EAAA,SAAAhE,GAE1B+D,EAAmB/D,GAAO,CACtBiE,UAAW,SAAC/B,GAAK,OAAKmB,EAAarD,GAAKoC,MAAK,SAACC,GAAI,QAAOH,EAAMG,EAAK,GAAC,EAE7E,EAJA,IAAK,IAAMrC,KAAOqD,EAAYW,EAAAhE,GCZ9B,SAASkE,EAAYC,GACjB,IAAM/C,GAAMgD,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhBhD,EAAIiD,UACJjD,EAAIiD,QAAUF,KAEX/C,EAAIiD,OACf,CCVA,IAAMC,EAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCZhBC,EAAK,ECDT,IAAMC,GAAqBrE,EAAAA,EAAAA,eAAc,CAAC,GCGpCsE,GAA2BtE,EAAAA,EAAAA,eAAc,CAAC,GCL1CuE,EAAwBC,OAAOC,IAAI,yBCwBzC,SAASC,EAAqBC,GAAoF,IAAjFC,EAAiBD,EAAjBC,kBAAmBC,EAAmBF,EAAnBE,oBAAqBC,EAASH,EAATG,UAAWC,EAAcJ,EAAdI,eAAgBC,EAASL,EAATK,UAChGJ,GCvBJ,SAAsBK,GAClB,IAAK,IAAMtF,KAAOsF,EACdvB,EAAmB/D,GAAIuF,EAAAA,EAAA,GAChBxB,EAAmB/D,IACnBsF,EAAStF,GAGxB,CDgByBwF,CAAaP,GAuDlC,IAAMQ,GAAsBC,EAAAA,EAAAA,aAtD5B,SAAyBxD,EAAOyD,GAK5B,IAAIC,EACEC,EAAcN,EAAAA,EAAAA,EAAA,IACbvC,EAAAA,EAAAA,YAAW5C,IACX8B,GAAK,IACR4D,SAAUC,EAAY7D,KAElB1B,EAAaqF,EAAbrF,SACFmC,EAAUF,EAAuBP,GAYjC8D,EAAexF,OAAWqC,EJ7C7BqB,GAAY,WACf,GAAII,EAAsBE,eACtB,OAAOC,GAEf,II0CUwB,EAAcb,EAAelD,EAAO1B,GAC1C,IAAKA,GAAYI,EAAW,CAOxB+B,EAAQuD,cEpDpB,SAA0Bb,EAAWY,EAAa/D,EAAOgD,GACrD,IAAuBiB,GAAWnD,EAAAA,EAAAA,YAAWtC,GAArCwF,cACFE,GAAcpD,EAAAA,EAAAA,YAAW/B,GACzBoF,GAAkBrD,EAAAA,EAAAA,YAAWrC,GAC7B2F,GAAsBtD,EAAAA,EAAAA,YAAW5C,GAAqBK,cACtD8F,GAAmBnC,EAAAA,EAAAA,UAIzBc,EAAsBA,GAAuBkB,EAAYI,UACpDD,EAAiBlC,SAAWa,IAC7BqB,EAAiBlC,QAAUa,EAAoBG,EAAW,CACtDY,YAAAA,EACAE,OAAAA,EACAjE,MAAAA,EACAmE,gBAAAA,EACAI,wBAAuBJ,IACW,IAA5BA,EAAgBzD,QAEtB0D,oBAAAA,KAGR,IAAMJ,EAAgBK,EAAiBlC,QA4BvC,OA3BAqC,EAAAA,EAAAA,qBAAmB,WACfR,GAAiBA,EAAcS,OAAOzE,EAAOmE,EACjD,IACAvF,GAA0B,WACtBoF,GAAiBA,EAAcU,QACnC,KACA5F,EAAAA,EAAAA,YAAU,WACNkF,GAAiBA,EAAcW,gBACnC,KAWgCC,OAAOC,wBACjCjG,EACAE,EAAAA,YACkB,WAChBkF,GAAiBA,EAAcc,gBAC/Bd,EAAcc,eAAeC,gBAErC,IACOf,CACX,CFCoCgB,CAAiB7B,EAAWY,EAAaJ,EAAgBX,GAKjF,IAAMiC,GAA2BnE,EAAAA,EAAAA,YAAW2B,GACtCyC,GAAWpE,EAAAA,EAAAA,YAAW/B,GAAaC,OACrCyB,EAAQuD,gBACRN,EAAgBjD,EAAQuD,cAAcV,aAEtCK,EAAgBuB,EAAUnC,EAAmBe,EAAcmB,GAEnE,CAKA,OAAQE,EAAAA,cAAoB3G,EAAc4G,SAAU,CAAEC,MAAO5E,GACzDiD,GAAiBjD,EAAQuD,cAAiBmB,EAAAA,cAAoBzB,EAAaL,EAAA,CAAIW,cAAevD,EAAQuD,eAAkBL,IAAqB,KAC7IV,EAAUE,EAAWnD,EAAO8D,EGvExC,SAAsBC,EAAaC,EAAeP,GAC9C,OAAO6B,EAAAA,EAAAA,cAAY,SAACC,GAChBA,GAAYxB,EAAYyB,OAASzB,EAAYyB,MAAMD,GAC/CvB,IACAuB,EACMvB,EAAcwB,MAAMD,GACpBvB,EAAcyB,WAEpBhC,IAC2B,oBAAhBA,EACPA,EAAY8B,GAEPtG,EAAYwE,KACjBA,EAAYtB,QAAUoD,GAGlC,GAMA,CAACvB,GACL,CHgDsD0B,CAAa3B,EAAatD,EAAQuD,cAAeP,GAAcM,EAAazF,EAAUmC,EAAQuD,eAChJ,IAGA,OADAT,EAAoBb,GAAyBS,EACtCI,CACX,CACA,SAASM,EAAW8B,GAAe,IAAZ/B,EAAQ+B,EAAR/B,SACbgC,GAAgB9E,EAAAA,EAAAA,YAAW0B,GAAoBD,GACrD,OAAOqD,QAA8BjF,IAAbiD,EAClBgC,EAAgB,IAAMhC,EACtBA,CACV,CIzEA,SAASiC,EAAkBC,GACvB,SAASC,EAAO5C,GACZ,OAAON,EAAsBiD,EAAa3C,EADQzF,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,CAAC,GAE1D,CACA,GAAqB,qBAAVsI,MACP,OAAOD,EAMX,IAAME,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMD,EAAQ,CAMrBI,IAAK,SAACC,EAAStI,GAOX,OAHKmI,EAAeI,IAAIvI,IACpBmI,EAAeK,IAAIxI,EAAKiI,EAAOjI,IAE5BmI,EAAeE,IAAIrI,EAC9B,GAER,CCxCA,IAAMyI,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAerD,GACpB,MAKqB,kBAAdA,IAIHA,EAAUsD,SAAS,SAOvBF,EAAqBG,QAAQvD,IAAc,GAIvC,QAAQwD,KAAKxD,GAIrB,CC3BA,IAAMyD,EAAkB,CAAC,ECGzB,IAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoBlJ,EAAGgF,GAAwB,IAApBlB,EAAMkB,EAANlB,OAAQgC,EAAQd,EAARc,SACxC,OAAQkD,EAAeT,IAAIvI,IACvBA,EAAImJ,WAAW,YACbrF,QAAuBjB,IAAbiD,OACLgD,EAAgB9I,IAAgB,YAARA,EACvC,CCRA,IAAMoJ,EAAgB,SAAC7B,GAAK,OAAKhF,QAAQgF,GAASA,EAAM8B,YAAY,ECE9DC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBZ,EAAmBlJ,OCRzC,IAAM+J,EAAwB,SAACC,GAAK,OAAK,SAAC7J,GAAG,MAAoB,kBAARA,GAAoBA,EAAImJ,WAAWU,EAAM,GAC5FC,EAAoBF,EAAsB,MAC1CG,EAAqBH,EAAsB,UCC3CI,EAAiB,SAACzC,EAAO0C,GAC3B,OAAOA,GAAyB,kBAAV1C,EAChB0C,EAAKC,UAAU3C,GACfA,CACV,ECPM4C,EAAQ,SAACC,EAAKC,EAAK5I,GAAC,OAAK6I,KAAKF,IAAIE,KAAKD,IAAI5I,EAAG2I,GAAMC,EAAI,ECExDE,EAAS,CACX1B,KAAM,SAACpH,GAAC,MAAkB,kBAANA,CAAc,EAClC+I,MAAOC,WACPP,UAAW,SAACzI,GAAC,OAAKA,CAAC,GAEjBiJ,EAAKnF,EAAAA,EAAA,GACJgF,GAAM,IACTL,UAAW,SAACzI,GAAC,OAAK0I,EAAM,EAAG,EAAG1I,EAAE,IAE9BkJ,EAAKpF,EAAAA,EAAA,GACJgF,GAAM,IACTK,QAAS,ICPPC,EAAW,SAACpJ,GAAC,OAAK6I,KAAKQ,MAAU,IAAJrJ,GAAc,GAAM,EACjDsJ,EAAa,uBACbC,GAAa,8FACbC,GAAmB,+FACzB,SAASC,GAASzJ,GACd,MAAoB,kBAANA,CAClB,CCVA,IAAM0J,GAAiB,SAACC,GAAI,MAAM,CAC9BvC,KAAM,SAACpH,GAAC,OAAKyJ,GAASzJ,IAAMA,EAAE4J,SAASD,IAAiC,IAAxB3J,EAAE6J,MAAM,KAAKzL,MAAY,EACzE2K,MAAOC,WACPP,UAAW,SAACzI,GAAC,SAAAO,OAAQP,GAACO,OAAGoJ,EAAI,EAChC,EACKG,GAAUJ,GAAe,OACzBK,GAAUL,GAAe,KACzBM,GAAKN,GAAe,MACpBO,GAAKP,GAAe,MACpBQ,GAAKR,GAAe,MACpBS,GAAkBrG,EAAAA,EAAA,GACjBiG,IAAO,IACVhB,MAAO,SAAC/I,GAAC,OAAK+J,GAAQhB,MAAM/I,GAAK,GAAG,EACpCyI,UAAW,SAACzI,GAAC,OAAK+J,GAAQtB,UAAc,IAAJzI,EAAQ,ICb1CoK,GAAGtG,EAAAA,EAAA,GACFgF,GAAM,IACTL,UAAWI,KAAKQ,QCAdgB,GAAmB,CAErBC,YAAaN,GACbO,eAAgBP,GAChBQ,iBAAkBR,GAClBS,kBAAmBT,GACnBU,gBAAiBV,GACjBW,aAAcX,GACdY,OAAQZ,GACRa,oBAAqBb,GACrBc,qBAAsBd,GACtBe,wBAAyBf,GACzBgB,uBAAwBhB,GAExBiB,MAAOjB,GACPkB,SAAUlB,GACVmB,OAAQnB,GACRoB,UAAWpB,GACXqB,KAAMrB,GACNsB,IAAKtB,GACLuB,MAAOvB,GACPwB,OAAQxB,GACRyB,KAAMzB,GAEN0B,QAAS1B,GACT2B,WAAY3B,GACZ4B,aAAc5B,GACd6B,cAAe7B,GACf8B,YAAa9B,GACb+B,OAAQ/B,GACRgC,UAAWhC,GACXiC,YAAajC,GACbkC,aAAclC,GACdmC,WAAYnC,GAEZoC,OAAQtC,GACRuC,QAASvC,GACTwC,QAASxC,GACTyC,QAASzC,GACTZ,MAAAA,EACAsD,OAAQtD,EACRuD,OAAQvD,EACRwD,OAAQxD,EACRyD,KAAM7C,GACN8C,MAAO9C,GACP+C,MAAO/C,GACPgD,SAAU9C,GACV+C,WAAY/C,GACZgD,WAAYhD,GACZiD,WAAYjD,GACZlC,EAAGkC,GACHjC,EAAGiC,GACHhC,EAAGgC,GACHkD,YAAalD,GACb/B,qBAAsB+B,GACtBmD,QAASlE,EACTmE,QAASjD,GACTkD,QAASlD,GACTmD,QAAStD,GAETuD,OAAQnD,GAERoD,YAAavE,EACbwE,cAAexE,EACfyE,WAAYtD,IC9DhB,SAASuD,GAAgBC,EAAOC,EAAcC,EAASC,GACnD,IAAQC,EAA4CJ,EAA5CI,MAAOC,EAAqCL,EAArCK,KAAMxF,EAA+BmF,EAA/BnF,UAAWyF,EAAoBN,EAApBM,gBAE5BC,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,IAAM9P,KAAOsP,EAAc,CAC5B,IAAM/H,EAAQ+H,EAAatP,GAI3B,GAAI8J,EAAkB9J,GAClB0P,EAAK1P,GAAOuH,MADhB,CAKA,IAAMwI,EAAYjE,GAAiB9L,GAC7BgQ,EAAchG,EAAezC,EAAOwI,GAC1C,GAAI/G,EAAeT,IAAIvI,GAAM,CAKzB,GAHA4P,GAAe,EACf1F,EAAUlK,GAAOgQ,GAEZF,EACD,SAEAvI,KAAWwI,EAAUnF,SAAW,KAChCkF,GAAkB,EAC1B,MACS9P,EAAImJ,WAAW,WAEpB0G,GAAqB,EACrBF,EAAgB3P,GAAOgQ,GAGvBP,EAAMzP,GAAOgQ,CArBjB,CAuBJ,CAiBA,GAhBKV,EAAapF,YACV0F,GAAgBJ,EAChBC,EAAMvF,UTtClB,SAAwBA,EAASlF,EAAqEiL,EAAoBT,GAOtH,IAPyI,IAAAU,EAAAlL,EAAxGmL,2BAAAA,OAA0B,IAAAD,GAAOA,EAAAE,EAAApL,EAAEqL,mBAAAA,OAAkB,IAAAD,GAAOA,EAEzFE,EAAkB,GAKb3Q,EAAI,EAAGA,EAAIgK,EAAehK,IAAK,CACpC,IAAMK,EAAM+I,EAAmBpJ,GAC/B,QAAuBkD,IAAnBqH,EAAUlK,GAAoB,CAC9B,IAAMuQ,EAAgBjH,EAAetJ,IAAQA,EAC7CsQ,GAAmB,GAAJtO,OAAOuO,EAAa,KAAAvO,OAAIkI,EAAUlK,GAAI,KACzD,CACJ,CAaA,OAZImQ,IAA+BjG,EAAUT,IACzC6G,GAAmB,iBAEvBA,EAAkBA,EAAgBE,OAG9BhB,EACAc,EAAkBd,EAAkBtF,EAAW+F,EAAqB,GAAKK,GAEpED,GAAsBJ,IAC3BK,EAAkB,QAEfA,CACX,CSW8BG,CAAepB,EAAMnF,UAAWqF,EAASO,EAAiBN,GAEvEC,EAAMvF,YAKXuF,EAAMvF,UAAY,SAOtB2F,EAAoB,CACpB,IAAAa,EAA2Df,EAAnDd,QAAAA,OAAO,IAAA6B,EAAG,MAAKA,EAAAC,EAAoChB,EAAlCb,QAAAA,OAAO,IAAA6B,EAAG,MAAKA,EAAAC,EAAmBjB,EAAjBZ,QAAAA,OAAO,IAAA6B,EAAG,EAACA,EACrDnB,EAAME,gBAAkB,GAAH3N,OAAM6M,EAAO,KAAA7M,OAAI8M,EAAO,KAAA9M,OAAI+M,EACrD,CACJ,CCvEA,IAAM8B,GAAwB,WAAH,MAAU,CACjCpB,MAAO,CAAC,EACRvF,UAAW,CAAC,EACZyF,gBAAiB,CAAC,EAClBD,KAAM,CAAC,EACV,ECCD,SAASoB,GAAkBpR,EAAQI,EAAQoC,GACvC,IAAK,IAAMlC,KAAOF,EACTsJ,EAActJ,EAAOE,KAAUkJ,EAAoBlJ,EAAKkC,KACzDxC,EAAOM,GAAOF,EAAOE,GAGjC,CAQA,SAAS+Q,GAAS7O,EAAO+D,EAAazF,GAClC,IACMiP,EAAQ,CAAC,EAMf,OAFAqB,GAAkBrB,EALAvN,EAAMuN,OAAS,CAAC,EAKEvN,GACpClD,OAAOgS,OAAOvB,EAdlB,SAA+BzK,EAAwBiB,EAAazF,GAAU,IAA5CgP,EAAiBxK,EAAjBwK,kBAC9B,OAAOvM,EAAAA,EAAAA,UAAQ,WACX,IAAMoM,EAAQwB,KAEd,OADAzB,GAAgBC,EAAOpJ,EAAa,CAAEkK,4BAA6B3P,GAAYgP,GACxExQ,OAAOgS,OAAO,CAAC,EAAG3B,EAAMK,KAAML,EAAMI,MAC/C,GAAG,CAACxJ,GACR,CAQyBgL,CAAuB/O,EAAO+D,EAAazF,IACzD0B,EAAMgP,gBAAkBhP,EAAMgP,gBAAgBzB,GAASA,CAClE,CACA,SAAS0B,GAAajP,EAAO+D,EAAazF,GAEtC,IAAM4Q,EAAY,CAAC,EACb3B,EAAQsB,GAAS7O,EAAO+D,EAAazF,GAoB3C,OAnBI0B,EAAMsB,OAA+B,IAAvBtB,EAAMmP,eAEpBD,EAAUE,WAAY,EAEtB7B,EAAM8B,WACF9B,EAAM+B,iBACF/B,EAAMgC,mBACF,OAEZhC,EAAMiC,aACa,IAAfxP,EAAMsB,KACA,OAAM,OAAAxB,OACgB,MAAfE,EAAMsB,KAAe,IAAM,WAEzBX,IAAnBX,EAAMyP,WACLzP,EAAM0P,OAAS1P,EAAM2P,YAAc3P,EAAM4P,YAC1CV,EAAUO,SAAW,GAEzBP,EAAU3B,MAAQA,EACX2B,CACX,CChDA,IAAMW,GAAmB,IAAI9I,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,eACA,aAUJ,SAAS+I,GAAkBhS,GACvB,OAAQA,EAAImJ,WAAW,UAClBnJ,EAAImJ,WAAW,SAAmB,cAARnJ,GAC3BA,EAAImJ,WAAW,WACfnJ,EAAImJ,WAAW,UACfnJ,EAAImJ,WAAW,UACf4I,GAAiBxJ,IAAIvI,EAC7B,CCtDA,IACiCiS,GAD7BC,GAAgB,SAAClS,GAAG,OAAMgS,GAAkBhS,EAAI,EAoBpD,KAnBiCiS,GAyBLE,QAAQ,0BAA0BvH,WArB1DsH,GAAgB,SAAClS,GAAG,OAAKA,EAAImJ,WAAW,OAAS6I,GAAkBhS,GAAOiS,GAAYjS,EAAI,EAsB9F,CACA,MAAOoS,IACH,CC9BW,SAASC,GAAyBvS,EAAQwS,GACvD,GAAc,MAAVxS,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKL,EADLD,ECHS,SAAuCI,EAAQwS,GAC5D,GAAc,MAAVxS,EAAgB,MAAO,CAAC,EAC5B,IAEIE,EAAKL,EAFLD,EAAS,CAAC,EACV6S,EAAavT,OAAOD,KAAKe,GAE7B,IAAKH,EAAI,EAAGA,EAAI4S,EAAW1S,OAAQF,IACjCK,EAAMuS,EAAW5S,GACb2S,EAAS1J,QAAQ5I,IAAQ,IAC7BN,EAAOM,GAAOF,EAAOE,IAEvB,OAAON,CACT,CDRe,CAA6BI,EAAQwS,GAElD,GAAItT,OAAOC,sBAAuB,CAChC,IAAIuT,EAAmBxT,OAAOC,sBAAsBa,GACpD,IAAKH,EAAI,EAAGA,EAAI6S,EAAiB3S,OAAQF,IACvCK,EAAMwS,EAAiB7S,GACnB2S,EAAS1J,QAAQ5I,IAAQ,GACxBhB,OAAOqC,UAAUoR,qBAAqBlR,KAAKzB,EAAQE,KACxDN,EAAOM,GAAOF,EAAOE,GAEzB,CACA,OAAON,CACT,CEbA,SAASgT,GAAWC,EAAQC,EAAQ9F,GAChC,MAAyB,kBAAX6F,EACRA,EACAlH,GAAGvB,UAAU0I,EAAS9F,EAAO6F,EACvC,CCJA,IAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mB,qFCDX,SAASE,GAAc3D,EAAKrK,EAEfuK,EAAS0D,EAAUzD,GAAmB,IAFnB0D,EAAKlO,EAALkO,MAAOC,EAAKnO,EAALmO,MAAOtE,EAAO7J,EAAP6J,QAASC,EAAO9J,EAAP8J,QAASsE,EAAUpO,EAAVoO,WAAUC,EAAArO,EAAEsO,YAAAA,OAAW,IAAAD,EAAG,EAACA,EAAAE,EAAAvO,EAAEwO,WAAAA,OAAU,IAAAD,EAAG,EAACA,EAQvG,GALAnE,GAAgBC,EADXgD,GAAArN,EAAAyO,IAC0BlE,EAASC,GAKpCyD,EACI5D,EAAMI,MAAMiE,UACZrE,EAAMsE,MAAMD,QAAUrE,EAAMI,MAAMiE,aAF1C,CAMArE,EAAMsE,MAAQtE,EAAMI,MACpBJ,EAAMI,MAAQ,CAAC,EACf,IAAQkE,EAA6BtE,EAA7BsE,MAAOlE,EAAsBJ,EAAtBI,MAAOmE,EAAevE,EAAfuE,WAKlBD,EAAMzJ,YACF0J,IACAnE,EAAMvF,UAAYyJ,EAAMzJ,kBACrByJ,EAAMzJ,WAGb0J,SACa/Q,IAAZgM,QAAqChM,IAAZiM,GAAyBW,EAAMvF,aACzDuF,EAAME,gBFzBd,SAAgCiE,EAAY/E,EAASC,GACjD,IAAM+E,EAAYnB,GAAW7D,EAAS+E,EAAWrK,EAAGqK,EAAWlH,OACzDoH,EAAYpB,GAAW5D,EAAS8E,EAAWpK,EAAGoK,EAAWhH,QAC/D,MAAO,GAAP5K,OAAU6R,EAAS,KAAA7R,OAAI8R,EAC3B,CEqBgCC,CAAuBH,OAAwB/Q,IAAZgM,EAAwBA,EAAU,QAAiBhM,IAAZiM,EAAwBA,EAAU,UAG1HjM,IAAVqQ,IACAS,EAAMpK,EAAI2J,QACArQ,IAAVsQ,IACAQ,EAAMnK,EAAI2J,QAEKtQ,IAAfuQ,GD3BR,SAAsBO,EAAO9T,GAAqD,IAA7CmU,EAAOpU,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,EAAGgT,EAAMhT,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,EAAGqU,IAAWrU,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,KAAAA,UAAA,GAErE+T,EAAMP,WAAa,EAGnB,IAAMrU,EAAOkV,EAAcpB,GAAWE,GAEtCY,EAAM5U,EAAK6T,QAAUnH,GAAGvB,WAAW0I,GAEnC,IAAMQ,EAAa3H,GAAGvB,UAAUrK,GAC1ByT,EAAc7H,GAAGvB,UAAU8J,GACjCL,EAAM5U,EAAK+T,OAAS,GAAH9Q,OAAMoR,EAAU,KAAApR,OAAIsR,EACzC,CCgBQY,CAAaP,EAAOP,EAAYE,EAAaE,GAAY,EAzB7D,CA2BJ,CC7CA,IAAMW,GAAuB,WAAH,OAAA5O,EAAAA,EAAA,GACnBsL,MAAuB,IAC1B8C,MAAO,CAAC,GAAC,ECJPV,GAAW,SAACmB,GAAG,MAAoB,kBAARA,GAA0C,QAAtBA,EAAIC,aAAuB,ECMhF,SAASC,GAAYpS,EAAO+D,EAAasO,EAAWlP,GAChD,IAAMmP,GAAcvR,EAAAA,EAAAA,UAAQ,WACxB,IAAMoM,EAAQ8E,KAEd,OADAnB,GAAc3D,EAAOpJ,EAAa,CAAEkK,4BAA4B,GAAS8C,GAAS5N,GAAYnD,EAAMsN,mBACpGjK,EAAAA,EAAA,GACO8J,EAAMsE,OAAK,IACdlE,MAAKlK,EAAA,GAAO8J,EAAMI,QAE1B,GAAG,CAACxJ,IACJ,GAAI/D,EAAMuN,MAAO,CACb,IAAMgF,EAAY,CAAC,EACnB3D,GAAkB2D,EAAWvS,EAAMuN,MAAOvN,GAC1CsS,EAAY/E,MAAKlK,EAAAA,EAAA,GAAQkP,GAAcD,EAAY/E,MACvD,CACA,OAAO+E,CACX,CCdA,SAASE,KAA4C,IAA5BC,EAAkB/U,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,IAAAA,UAAA,GA2BvC,OA1BkB,SAACyF,EAAWnD,EAAO8D,EAAc5E,EAAG4D,EAAoBxE,GAAa,IAA7B8O,EAAYtK,EAAZsK,aAIhDkF,GAHiB9L,EAAerD,GAChCiP,GACAnD,IAC6BjP,EAAOoN,EAAc9O,EAAU6E,GAC5DuP,EToBd,SAAqB1S,EAAO2S,EAAOF,GAC/B,IAAMC,EAAgB,CAAC,EACvB,IAAK,IAAM5U,KAAOkC,EAQF,WAARlC,GAA4C,kBAAjBkC,EAAM4S,SAEjC5C,GAAclS,KACU,IAAvB2U,GAA+B3C,GAAkBhS,KAChD6U,IAAU7C,GAAkBhS,IAE7BkC,EAAiB,WAAKlC,EAAImJ,WAAW,aACtCyL,EAAc5U,GAAOkC,EAAMlC,IAGnC,OAAO4U,CACX,CSzC8BG,CAAY7S,EAA4B,kBAAdmD,EAAwBsP,GAClEK,EAAYzP,EAAAA,EAAAA,EAAA,GACXqP,GACAJ,GAAW,IACdpT,IAAAA,IAOI6T,EAAa/S,EAAb+S,SACFC,GAAmBjS,EAAAA,EAAAA,UAAQ,kBAAOmG,EAAc6L,GAAYA,EAAS5M,MAAQ4M,CAAQ,GAAG,CAACA,IAI/F,OAHIjP,IACAgP,EAAa,sBAAwBhP,IAElCmP,EAAAA,EAAAA,eAAc9P,EAASE,EAAAA,EAAA,GACvByP,GAAY,IACfC,SAAUC,IAElB,CAEJ,CChCA,IAAME,GAAc,SAACC,GAAG,OAAKA,EAAIC,QAAQ,kBAAmB,SAASjB,aAAa,ECHlF,SAASkB,GAAWC,EAAOxQ,EAAmByQ,EAAWC,GAAY,IAAtCjG,EAAKzK,EAALyK,MAAOC,EAAI1K,EAAJ0K,KAGlC,IAAK,IAAM1P,KAFXhB,OAAOgS,OAAOwE,EAAQ/F,MAAOA,EAAOiG,GAAcA,EAAWC,oBAAoBF,IAE/D/F,EACd8F,EAAQ/F,MAAMmG,YAAY5V,EAAK0P,EAAK1P,GAE5C,CCHA,IAAM6V,GAAsB,IAAI5M,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS6M,GAAUN,EAASO,EAAaC,EAAYN,GAEjD,IAAK,IAAM1V,KADXuV,GAAWC,EAASO,OAAalT,EAAW6S,GAC1BK,EAAYpC,MAC1B6B,EAAQS,aAAcJ,GAAoBtN,IAAIvI,GAA0BA,EAAnBoV,GAAYpV,GAAY+V,EAAYpC,MAAM3T,GAEvG,CCNA,SAASkW,GAA4BhU,EAAOiU,GACxC,IAAQ1G,EAAUvN,EAAVuN,MACF2G,EAAY,CAAC,EACnB,IAAK,IAAMpW,KAAOyP,GACVrG,EAAcqG,EAAMzP,KACnBmW,EAAU1G,OAASrG,EAAc+M,EAAU1G,MAAMzP,KAClDkJ,EAAoBlJ,EAAKkC,MACzBkU,EAAUpW,GAAOyP,EAAMzP,IAG/B,OAAOoW,CACX,CCXA,SAASF,GAA4BhU,EAAOiU,GACxC,IAAMC,EAAYC,GAA8BnU,EAAOiU,GACvD,IAAK,IAAMnW,KAAOkC,EAAO,CACrB,GAAIkH,EAAclH,EAAMlC,KAASoJ,EAAc+M,EAAUnW,IAErDoW,EAD0B,MAARpW,GAAuB,MAARA,EAAc,OAASA,EAAIsW,cAAgBtW,GACrDkC,EAAMlC,EAErC,CACA,OAAOoW,CACX,CCZA,SAASG,GAAwBrU,EAAOsU,EAAYvO,GAAkD,IAA1CwO,EAAa7W,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG8W,EAAe9W,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAsB/F,MAlB0B,oBAAf4W,IACPA,EAAaA,OAAsB3T,IAAXoF,EAAuBA,EAAS/F,EAAM+F,OAAQwO,EAAeC,IAM/D,kBAAfF,IACPA,EAAatU,EAAMM,UAAYN,EAAMM,SAASgU,IAOxB,oBAAfA,IACPA,EAAaA,OAAsB3T,IAAXoF,EAAuBA,EAAS/F,EAAM+F,OAAQwO,EAAeC,IAElFF,CACX,CCvBA,IAAMG,GAAoB,SAAClV,GACvB,OAAOC,MAAMC,QAAQF,EACzB,ECAMmV,GAAgB,SAACnV,GACnB,OAAOc,QAAQd,GAAkB,kBAANA,GAAkBA,EAAEoV,KAAOpV,EAAEqV,QAC5D,EACMC,GAA+B,SAACtV,GAElC,OAAOkV,GAAkBlV,GAAKA,EAAEA,EAAE5B,OAAS,IAAM,EAAI4B,CACzD,ECAA,SAASuV,GAAmBzP,GACxB,IAAM0P,EAAiB7N,EAAc7B,GAASA,EAAMc,MAAQd,EAC5D,OAAOqP,GAAcK,GACfA,EAAeH,UACfG,CACV,C,sCCMA,IAAMC,GAAqB,SAACC,GAAM,OAAK,SAACjV,EAAO1B,GAC3C,IAAMmC,GAAUK,EAAAA,EAAAA,YAAWtC,GACrB2F,GAAkBrD,EAAAA,EAAAA,YAAWrC,GAC7ByW,EAAO,WAAH,OAbd,SAAkBpS,EAA+D9C,EAAOS,EAAS0D,GAAiB,IAA7F6P,EAA2BlR,EAA3BkR,4BAA6BmB,EAAiBrS,EAAjBqS,kBAAmBC,EAAOtS,EAAPsS,QAC3DjI,EAAQ,CACVC,aAAciI,GAAiBrV,EAAOS,EAAS0D,EAAiB6P,GAChEH,YAAasB,KAKjB,OAHIC,IACAjI,EAAM3H,MAAQ,SAACD,GAAQ,OAAK6P,EAAQpV,EAAOuF,EAAU4H,EAAM,GAExDA,CACX,CAIuBmI,CAAUL,EAAQjV,EAAOS,EAAS0D,EAAgB,EACrE,OAAO7F,EAAW4W,IAASlT,EAAYkT,EAC3C,CAAC,EACD,SAASG,GAAiBrV,EAAOS,EAAS0D,EAAiBoR,GACvD,IAAM3C,EAAS,CAAC,EACV4C,EAAeD,EAAmBvV,EAAO,CAAC,GAChD,IAAK,IAAMlC,KAAO0X,EACd5C,EAAO9U,GAAOgX,GAAmBU,EAAa1X,IAElD,IAAM4C,EAAqBV,EAArBU,QAAST,EAAYD,EAAZC,QACTwV,EAA0B1V,EAAsBC,GAChD0V,EAAkBtV,EAAcJ,GAClCS,GACAiV,IACCD,IACiB,IAAlBzV,EAAMY,eACUD,IAAZD,IACAA,EAAUD,EAAQC,cACNC,IAAZV,IACAA,EAAUQ,EAAQR,UAE1B,IAAI0V,IAA4BxR,IACE,IAA5BA,EAAgBzD,QAGhBkV,GADND,EAA4BA,IAAyC,IAAZjV,GACRT,EAAUS,EACvDkV,GACwB,mBAAjBA,IACNlW,EAAoBkW,KACRpW,MAAMC,QAAQmW,GAAgBA,EAAe,CAACA,IACtD/X,SAAQ,SAACyW,GACV,IAAMuB,EAAWxB,GAAwBrU,EAAOsU,GAChD,GAAKuB,EAAL,CAEA,IAAQC,EAAyCD,EAAzCC,cAA8BtY,GAAWqY,EAA1BE,WAAqB5F,GAAK0F,EAAQtE,KACzD,IAAK,IAAMzT,KAAON,EAAQ,CACtB,IAAIwY,EAAcxY,EAAOM,GACzB,GAAI0B,MAAMC,QAAQuW,GAQdA,EAAcA,EAHAL,EACRK,EAAYrY,OAAS,EACrB,GAGU,OAAhBqY,IACApD,EAAO9U,GAAOkY,EAEtB,CACA,IAAK,IAAMlY,KAAOgY,EACdlD,EAAO9U,GAAOgY,EAAchY,EAnBtB,CAoBd,IAEJ,OAAO8U,CACX,CCvEA,IAAMqD,GAAkB,CACpB/S,eAAgB8R,GAAmB,CAC/BhB,4BAA6BA,GAC7BmB,kBAAmBlD,GACnBmD,QAAS,SAACpV,EAAOuF,EAAQzC,GAAoC,IAAhC+Q,EAAW/Q,EAAX+Q,YAAazG,EAAYtK,EAAZsK,aACtC,IACIyG,EAAYnC,WAEJ,oBADGnM,EAAS2Q,QAEV3Q,EAAS2Q,UACT3Q,EAAS4Q,uBACvB,CACA,MAAOC,GAEHvC,EAAYnC,WAAa,CACrBrK,EAAG,EACHC,EAAG,EACHkD,MAAO,EACPE,OAAQ,EAEhB,CACAoG,GAAc+C,EAAazG,EAAc,CAAEa,4BAA4B,GAAS8C,GAASxL,EAAS8Q,SAAUrW,EAAMsN,mBAClHsG,GAAUrO,EAAUsO,EACxB,KC1BFyC,GAAmB,CACrBpT,eAAgB8R,GAAmB,CAC/BhB,4BAAAA,GACAmB,kBAAmBxG,M,8CCP3B,SAAS4H,GAAY/Y,EAAQgZ,EAAWC,GAAsC,IAA7BpJ,EAAO3P,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,CAAEgZ,SAAS,GAElE,OADAlZ,EAAOmZ,iBAAiBH,EAAWC,EAASpJ,GACrC,kBAAM7P,EAAOoZ,oBAAoBJ,EAAWC,EAAQ,CAC/D,CCHA,IAAMI,GAAmB,SAACC,GACtB,MAA0B,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,SAErB,ECbA,SAASC,GAAiBJ,GAA2B,IAApBK,EAASzZ,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,OACzC,MAAO,CACH0Z,MAAO,CACH/P,EAAGyP,EAAMK,EAAY,KACrB7P,EAAGwP,EAAMK,EAAY,MAGjC,CACA,IAAME,GAAiB,SAACZ,GACpB,OAAO,SAACK,GAAK,OAAKD,GAAiBC,IAAUL,EAAQK,EAAOI,GAAiBJ,GAAO,CACxF,ECTA,SAASQ,GAAgB9Z,EAAQgZ,EAAWC,EAASpJ,GACjD,OAAOkJ,GAAY/Y,EAAQgZ,EAAWa,GAAeZ,GAAUpJ,EACnE,CCEA,IAAMkK,GAAmB,SAACC,EAAGC,GAAC,OAAK,SAAClY,GAAC,OAAKkY,EAAED,EAAEjY,GAAG,GAC3CmY,GAAO,WAAH,QAAAC,EAAAja,UAAAC,OAAOia,EAAY,IAAApY,MAAAmY,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,GAAAna,UAAAma,GAAA,OAAKD,EAAaE,OAAOP,GAAiB,ECRvE,SAASQ,GAAW5X,GAChB,IAAI6X,EAAO,KACX,OAAO,WAIH,OAAa,OAATA,IACAA,EAAO7X,EAJM,WACb6X,EAAO,IACX,EAMJ,CACJ,CACA,IAAMC,GAAuBF,GAAW,kBAClCG,GAAqBH,GAAW,gBACtC,SAASI,GAAc7W,GACnB,IAAI0W,GAAO,EACX,GAAa,MAAT1W,EACA0W,EAAOE,UAEN,GAAa,MAAT5W,EACL0W,EAAOC,SAEN,CACD,IAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBL,EAAO,WACHI,IACAC,GACJ,GAIID,GACAA,IACAC,GACAA,IAEZ,CACA,OAAOL,CACX,CACA,SAASM,KAGL,IAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,C,IClDMC,GAAO,WACT,SAAAA,EAAYC,IAAMC,EAAAA,GAAAA,GAAA,KAAAF,GACdG,KAAKC,WAAY,EACjBD,KAAKF,KAAOA,CAChB,CACY,OADXI,EAAAA,GAAAA,GAAAL,EAAA,EAAA1a,IAAA,SAAAuH,MACD,WAAW,KAACmT,CAAA,CALH,GCAb,IAAMM,GAAY,CACdC,MAAO,EACPC,UAAW,EACXC,cAAc,GCCdC,IAAoB,EACpBC,IAAe,EACbC,GAAa,CACf,OACA,SACA,YACA,SACA,cAEEC,GAAQD,GAAWtB,QAAO,SAACwB,EAAKxb,GAElC,OADAwb,EAAIxb,GCdR,SAA0Bqb,GAKtB,IAAII,EAAQ,GACRC,EAAiB,GAIjBC,EAAW,EAKXR,GAAe,EACfS,GAAiB,EAIfC,EAAc,IAAIC,QAClBC,EAAO,CAITC,SAAU,SAACC,GAAmD,IACpDC,EADuCtc,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,IAAAA,UAAA,IACNub,EACjCgB,EAASD,EAAoBT,EAAQC,EAU3C,OAZ0B9b,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,IAAAA,UAAA,IAItBic,EAAYO,IAAIH,IAEc,IAA9BE,EAAOvT,QAAQqT,KACfE,EAAO5c,KAAK0c,GAERC,GAAqBf,IACrBQ,EAAWF,EAAM5b,SAElBoc,CACX,EAIAI,OAAQ,SAACJ,GACL,IAAMK,EAAQZ,EAAe9S,QAAQqT,IACtB,IAAXK,GACAZ,EAAea,OAAOD,EAAO,GACjCT,EAAYW,OAAOP,EACvB,EAIAQ,QAAS,SAACzB,GAMN,GAAIG,EACAS,GAAiB,MADrB,CAIAT,GAAe,EAAK,IAAAnW,EACM,CAAC0W,EAAgBD,GAK3C,GALCA,EAAKzW,EAAA,IAAE0W,EAAc1W,EAAA,IAEPnF,OAAS,EAExB8b,EAAWF,EAAM5b,OAEb,IAAK,IAAIF,EAAI,EAAGA,EAAIgc,EAAUhc,IAAK,CAC/B,IAAMsc,EAAWR,EAAM9b,GACvBsc,EAASjB,GACLa,EAAYtT,IAAI0T,KAChBF,EAAKC,SAASC,GACdZ,IAER,CAEJF,GAAe,EACXS,IACAA,GAAiB,EACjBG,EAAKU,QAAQzB,GApBjB,CAsBJ,GAEJ,OAAOe,CACX,CDvEeW,EAAiB,kBAAOrB,IAAe,CAAI,IAC/CG,CACX,GAAG,CAAC,GACEmB,GAAOrB,GAAWtB,QAAO,SAACwB,EAAKxb,GACjC,IAAM+b,EAAOR,GAAMvb,GAMnB,OALAwb,EAAIxb,GAAO,SAACyc,GAAkD,IAAzCG,EAAShd,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,IAAAA,UAAA,GAAUid,EAASjd,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,IAAAA,UAAA,GAG7C,OAFKyb,IACDyB,KACGf,EAAKC,SAASS,EAASG,EAAWC,EAC7C,EACOrB,CACX,GAAG,CAAC,GACEuB,GAAazB,GAAWtB,QAAO,SAACwB,EAAKxb,GAEvC,OADAwb,EAAIxb,GAAOub,GAAMvb,GAAKqc,OACfb,CACX,GAAG,CAAC,GACEwB,GAAY1B,GAAWtB,QAAO,SAACwB,EAAKxb,GAEtC,OADAwb,EAAIxb,GAAO,kBAAMub,GAAMvb,GAAKyc,QAAQzB,GAAU,EACvCQ,CACX,GAAG,CAAC,GACEyB,GAAc,SAACC,GAAM,OAAK3B,GAAM2B,GAAQT,QAAQzB,GAAU,EAC1DmC,GAAe,SAAfA,EAAgBjC,GAClBG,IAAe,EACfL,GAAUC,MAAQG,GACZ,IAAO,GACP9Q,KAAKD,IAAIC,KAAKF,IAAI8Q,EAAYF,GAAUE,UApC/B,IAoCuD,GACtEF,GAAUE,UAAYA,EACtBF,GAAUG,cAAe,EACzBG,GAAWvb,QAAQkd,IACnBjC,GAAUG,cAAe,EACrBE,KACAD,IAAoB,EACpBgC,sBAAsBD,GAE9B,EACML,GAAY,WACdzB,IAAe,EACfD,IAAoB,EACfJ,GAAUG,cACXiC,sBAAsBD,GAC9B,EEhDA,SAASE,GAAc1C,EAAM2C,GACzB,IAAM5E,EAAY,WAAa4E,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAO9D,GAAgBmB,EAAKtW,QAASqU,GAXjB,SAACM,EAAOwE,GACxB,GAAmB,UAAfxE,EAAM/O,OAAoBuQ,KAA9B,CAEA,IAAMtY,EAAQyY,EAAK8C,WACf9C,EAAK3T,gBAAkB9E,EAAMwb,YAC7B/C,EAAK3T,eAAe2W,UAAU,aAAcL,GAE5Cpb,EAAMqb,IACNZ,GAAKhW,QAAO,kBAAMzE,EAAMqb,GAAcvE,EAAOwE,EAAK,GAN5C,CAQd,GAC6D,CACzD5E,SAAU+B,EAAK8C,WAAWF,IAElC,CAAC,IACKK,GAAY,SAAAC,IAAAC,EAAAA,GAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAhD,EAAAA,GAAAA,GAAA,KAAAgD,GAAAG,EAAAve,MAAA,KAAAI,UAAA,CAID,OAJCmb,EAAAA,GAAAA,GAAA6C,EAAA,EAAA5d,IAAA,QAAAuH,MACd,WACIsT,KAAKlT,QAAUiS,GAAKyD,GAAcxC,KAAKF,MAAM,GAAO0C,GAAcxC,KAAKF,MAAM,GACjF,GAAC,CAAA3a,IAAA,UAAAuH,MACD,WAAY,KAACqW,CAAA,CAJC,CAASlD,ICpBrBuD,GAAY,SAAAJ,IAAAC,EAAAA,GAAAA,GAAAG,EAAAJ,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAC,GACd,SAAAA,IAAc,IAAAC,EAEY,OAFZtD,EAAAA,GAAAA,GAAA,KAAAqD,IACVC,EAAAH,EAAAve,MAAA,KAASI,YACJ0d,UAAW,EAAMY,CAC1B,CA6Ba,OA7BZnD,EAAAA,GAAAA,GAAAkD,EAAA,EAAAje,IAAA,UAAAuH,MACD,WACI,IAAI4W,GAAiB,EAOrB,IACIA,EAAiBtD,KAAKF,KAAKtW,QAAQ+Z,QAAQ,iBAC/C,CACA,MAAO9F,GACH6F,GAAiB,CACrB,CACKA,GAAmBtD,KAAKF,KAAK3T,iBAElC6T,KAAKF,KAAK3T,eAAe2W,UAAU,cAAc,GACjD9C,KAAKyC,UAAW,EACpB,GAAC,CAAAtd,IAAA,SAAAuH,MACD,WACSsT,KAAKyC,UAAazC,KAAKF,KAAK3T,iBAEjC6T,KAAKF,KAAK3T,eAAe2W,UAAU,cAAc,GACjD9C,KAAKyC,UAAW,EACpB,GAAC,CAAAtd,IAAA,QAAAuH,MACD,WAAQ,IAAA8W,EAAA,KACJxD,KAAKlT,QAAUiS,GAAKnB,GAAYoC,KAAKF,KAAKtW,QAAS,SAAS,kBAAMga,EAAKC,SAAS,IAAG7F,GAAYoC,KAAKF,KAAKtW,QAAS,QAAQ,kBAAMga,EAAKE,QAAQ,IACjJ,GAAC,CAAAve,IAAA,UAAAuH,MACD,WAAY,KAAC0W,CAAA,CAjCC,CAASvD,ICGrB8D,GAAgB,SAAhBA,EAAiBrY,EAAQsY,GAC3B,QAAKA,IAGItY,IAAWsY,GAITD,EAAcrY,EAAQsY,EAAMC,eAE3C,ECjBMC,GAAO,SAACC,GAAG,OAAKA,CAAG,ECUzB,SAASC,GAA0Bxc,EAAMsW,GACrC,GAAKA,EAAL,CAEA,IAAMmG,EAAwB,IAAIC,aAAa,UAAY1c,GAC3DsW,EAAQmG,EAAuB1F,GAAiB0F,GAFtC,CAGd,CAAC,IACKE,GAAY,SAAAnB,IAAAC,EAAAA,GAAAA,GAAAkB,EAAAnB,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAgB,GACd,SAAAA,IAAc,IAAAd,EAyDR,OAzDQtD,EAAAA,GAAAA,GAAA,KAAAoE,IACVd,EAAAH,EAAAve,MAAA,KAASI,YACJqf,qBAAuBN,GAC5BT,EAAKgB,mBAAqBP,GAC1BT,EAAKiB,0BAA4BR,GACjCT,EAAKkB,kBAAoB,SAACC,EAAYC,GAElC,GADApB,EAAKgB,sBACDhB,EAAKqB,WAAT,CAEA,IAAMrd,EAAQgc,EAAKvD,KAAK8C,WAelB+B,EAA0BhG,GAAgB1S,OAAQ,aAdhC,SAAC2Y,EAAUC,GAC/B,GAAKxB,EAAKyB,gBAAV,CAEA,IAAAC,EAA+B1B,EAAKvD,KAAK8C,WAAjC7L,EAAKgO,EAALhO,MAAOiO,EAAWD,EAAXC,YACflD,GAAKhW,QAAO,WAKP6X,GAAcN,EAAKvD,KAAKtW,QAASob,EAAS/f,QAErCkS,GAASA,EAAM6N,EAAUC,GADzBG,GAAeA,EAAYJ,EAAUC,EAE/C,GAVU,CAWd,GACsF,CAAE9G,UAAW1W,EAAM0P,OAAS1P,EAAmB,eAC/H4d,EAA8BtG,GAAgB1S,OAAQ,iBAAiB,SAACiZ,EAAaC,GAAU,OAAK9B,EAAK+B,YAAYF,EAAaC,EAAW,GAAE,CAAEpH,UAAW1W,EAAM2d,aAAe3d,EAAuB,mBAC9Mgc,EAAKgB,mBAAqBtF,GAAK4F,EAAyBM,GACxD5B,EAAKgC,WAAWb,EAAYC,EAnBlB,CAoBd,EACApB,EAAKiC,qBAAuB,WACxB,IAmBMC,EAAwB3H,GAAYyF,EAAKvD,KAAKtW,QAAS,WAnBvC,SAACgc,GACnB,GAAyB,UAArBA,EAAargB,MAAmBke,EAAKqB,WAAzC,CAYArB,EAAKgB,qBACLhB,EAAKgB,mBAAqBzG,GAAYyF,EAAKvD,KAAKtW,QAAS,SAXrC,SAACic,GACM,UAAnBA,EAAWtgB,KAAoBke,EAAKyB,iBAExCd,GAA0B,MAAM,SAAC7F,EAAOwE,GACpC,IAAQ5L,EAAUsM,EAAKvD,KAAK8C,WAApB7L,MACJA,GACA+K,GAAKhW,QAAO,kBAAMiL,EAAMoH,EAAOwE,EAAK,GAE5C,GACJ,IAGAqB,GAA0B,QAAQ,SAAC7F,EAAOwE,GACtCU,EAAKgC,WAAWlH,EAAOwE,EAC3B,GAfU,CAgBd,IAOM+C,EAAqB9H,GAAYyF,EAAKvD,KAAKtW,QAAS,QALvC,WACV6Z,EAAKqB,YAEVV,GAA0B,UAAU,SAACkB,EAAaC,GAAU,OAAK9B,EAAK+B,YAAYF,EAAaC,EAAW,GAC9G,IAEA9B,EAAKiB,0BAA4BvF,GAAKwG,EAAuBG,EACjE,EAAErC,CACN,CAyCC,OAzCAnD,EAAAA,GAAAA,GAAAiE,EAAA,EAAAhf,IAAA,aAAAuH,MACD,SAAWyR,EAAOwE,GACd3C,KAAK0E,YAAa,EAClB,IAAAiB,EAAiC3F,KAAKF,KAAK8C,WAAnC5L,EAAU2O,EAAV3O,WAAoB2O,EAAR1O,UAIJ+I,KAAKF,KAAK3T,gBACtB6T,KAAKF,KAAK3T,eAAe2W,UAAU,YAAY,GAE/C9L,GACA8K,GAAKhW,QAAO,kBAAMkL,EAAWmH,EAAOwE,EAAK,GAEjD,GAAC,CAAAxd,IAAA,gBAAAuH,MACD,WAOI,OANAsT,KAAKqE,qBACLrE,KAAK0E,YAAa,EACJ1E,KAAKF,KAAK8C,WACd3L,UAAY+I,KAAKF,KAAK3T,gBAC5B6T,KAAKF,KAAK3T,eAAe2W,UAAU,YAAY,IAE3CnD,IACZ,GAAC,CAAAxa,IAAA,cAAAuH,MACD,SAAYyR,EAAOwE,GACf,GAAK3C,KAAK8E,gBAAV,CAEA,IAAQE,EAAgBhF,KAAKF,KAAK8C,WAA1BoC,YACJA,GACAlD,GAAKhW,QAAO,kBAAMkZ,EAAY7G,EAAOwE,EAAK,GAHpC,CAKd,GAAC,CAAAxd,IAAA,QAAAuH,MACD,WACI,IAAMrF,EAAQ2Y,KAAKF,KAAK8C,WAClBgD,EAAwBjH,GAAgBqB,KAAKF,KAAKtW,QAAS,cAAewW,KAAKuE,kBAAmB,CAAExG,UAAW1W,EAAM2P,YAAc3P,EAAsB,kBACzJwe,EAAsBjI,GAAYoC,KAAKF,KAAKtW,QAAS,QAASwW,KAAKsF,sBACzEtF,KAAKoE,qBAAuBrF,GAAK6G,EAAuBC,EAC5D,GAAC,CAAA1gB,IAAA,UAAAuH,MACD,WACIsT,KAAKoE,uBACLpE,KAAKqE,qBACLrE,KAAKsE,2BACT,KAACH,CAAA,CApGa,CAAStE,I,YCXrBiG,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAuB,SAACC,GAC1B,IAAM9E,EAAW0E,GAAkBtY,IAAI0Y,EAAMrhB,QAC7Cuc,GAAYA,EAAS8E,EACzB,EACMC,GAA2B,SAACC,GAC9BA,EAAQlhB,QAAQ+gB,GACpB,EAoBA,SAASI,GAAoB1L,EAASjG,EAAS0M,GAC3C,IAAMkF,EApBV,SAAiCnc,GAAuB,IAApBoc,EAAIpc,EAAJoc,KAAS7R,EAAO8C,GAAArN,EAAAyO,IAC1C4N,EAAaD,GAAQvgB,SAItBggB,GAAUtY,IAAI8Y,IACfR,GAAUrY,IAAI6Y,EAAY,CAAC,GAE/B,IAAMC,EAAgBT,GAAUxY,IAAIgZ,GAC9BrhB,EAAMuhB,KAAKC,UAAUjS,GAQ3B,OAHK+R,EAActhB,KACfshB,EAActhB,GAAO,IAAIyhB,qBAAqBT,GAAwBzb,EAAA,CAAI6b,KAAAA,GAAS7R,KAEhF+R,EAActhB,EACzB,CAEsC0hB,CAAyBnS,GAG3D,OAFAoR,GAAkBnY,IAAIgN,EAASyG,GAC/BkF,EAA0BQ,QAAQnM,GAC3B,WACHmL,GAAkBnE,OAAOhH,GACzB2L,EAA0BS,UAAUpM,EACxC,CACJ,CC3CA,IAAMqM,GAAiB,CACnBzf,KAAM,EACN0f,IAAK,GAEHC,GAAa,SAAAlE,IAAAC,EAAAA,GAAAA,GAAAiE,EAAAlE,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAA+D,GACf,SAAAA,IAAc,IAAA7D,EAGY,OAHZtD,EAAAA,GAAAA,GAAA,KAAAmH,IACV7D,EAAAH,EAAAve,MAAA,KAASI,YACJoiB,gBAAiB,EACtB9D,EAAK+D,UAAW,EAAM/D,CAC1B,CAqDa,OArDZnD,EAAAA,GAAAA,GAAAgH,EAAA,EAAA/hB,IAAA,gBAAAuH,MACD,WAAgB,IAAA8W,EAAA,KACZxD,KAAKlT,UACL,IAA8Cua,EAApBrH,KAAKF,KAAK8C,WAA5B0E,SAAAA,OAAQ,IAAAD,EAAG,CAAC,EAACA,EACbd,EAAoDe,EAApDf,KAAcgB,EAAsCD,EAA9C3U,OAAM6U,EAAwCF,EAA1BG,OAAAA,OAAM,IAAAD,EAAG,OAAMA,EAAEE,EAASJ,EAATI,KAC7ChT,EAAU,CACZ6R,KAAMA,EAAOA,EAAK/c,aAAUxB,EAC5Buf,WAAAA,EACAI,UAA6B,kBAAXF,EAAsBA,EAAST,GAAeS,IA+BpE,OAAOpB,GAAoBrG,KAAKF,KAAKtW,QAASkL,GA7BjB,SAACwR,GAC1B,IAAQ0B,EAAmB1B,EAAnB0B,eAIR,GAAIpE,EAAK4D,WAAaQ,IAEtBpE,EAAK4D,SAAWQ,GAKZF,GAASE,IAAkBpE,EAAK2D,gBAApC,CAGSS,IACLpE,EAAK2D,gBAAiB,GAEtB3D,EAAK1D,KAAK3T,gBACVqX,EAAK1D,KAAK3T,eAAe2W,UAAU,cAAe8E,GAMtD,IAAAC,EAA6CrE,EAAK1D,KAAK8C,WAA/CkF,EAAeD,EAAfC,gBAAiBC,EAAeF,EAAfE,gBACnB3G,EAAWwG,EAAiBE,EAAkBC,EACpD3G,GAAYA,EAAS8E,EAVrB,CAWJ,GAEJ,GAAC,CAAA/gB,IAAA,QAAAuH,MACD,WACIsT,KAAKgI,eACT,GAAC,CAAA7iB,IAAA,SAAAuH,MACD,WACI,GAAoC,qBAAzBka,qBAAX,CAEA,IAAAqB,EAA6BjI,KAAKF,KAA1BzY,EAAK4gB,EAAL5gB,MAAOiU,EAAS2M,EAAT3M,UACT4M,EAAoB,CAAC,SAAU,SAAU,QAAQ3gB,KAO/D,SAAiC4C,GAA0D,IAAAge,EAAAhe,EAAvDmd,SAAAA,OAAQ,IAAAa,EAAG,CAAC,EAACA,EAAAnb,EAAAjI,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAsC,CAAC,EAACqjB,EAAApb,EAAlCsa,SAAUe,OAAY,IAAAD,EAAG,CAAC,EAACA,EAC9E,OAAO,SAAC5gB,GAAI,OAAK8f,EAAS9f,KAAU6gB,EAAa7gB,EAAK,CAC1D,CAToE8gB,CAAyBjhB,EAAOiU,IACxF4M,GACAlI,KAAKgI,eAJC,CAMd,GAAC,CAAA7iB,IAAA,UAAAuH,MACD,WAAY,KAACwa,CAAA,CA1DE,CAASrH,ICF5B,IAAM0I,GAAoB,CACtBvf,OAAQ,CACJ6W,QAASqH,IAEbpe,IAAK,CACD+W,QAASsE,IAEbvb,MAAO,CACHiX,QAASuD,IAEbva,MAAO,CACHgX,QAASkD,K,WChBjB,SAASyF,GAAeC,EAAMC,GAC1B,IAAK7hB,MAAMC,QAAQ4hB,GACf,OAAO,EACX,IAAMC,EAAaD,EAAK1jB,OACxB,GAAI2jB,IAAeF,EAAKzjB,OACpB,OAAO,EACX,IAAK,IAAIF,EAAI,EAAGA,EAAI6jB,EAAY7jB,IAC5B,GAAI4jB,EAAK5jB,KAAO2jB,EAAK3jB,GACjB,OAAO,EAEf,OAAO,CACX,CCOA,SAAS8jB,GAAevd,EAAesQ,EAAYvO,GAC/C,IAAM/F,EAAQgE,EAAcuX,WAC5B,OAAOlH,GAAwBrU,EAAOsU,OAAuB3T,IAAXoF,EAAuBA,EAAS/F,EAAM+F,OAf5F,SAAoB/B,GAChB,IAAM7B,EAAU,CAAC,EAEjB,OADA6B,EAAc4O,OAAO/U,SAAQ,SAACwH,EAAOvH,GAAG,OAAMqE,EAAQrE,GAAOuH,EAAMc,KAAK,IACjEhE,CACX,CAWoGqf,CAAWxd,GAP/G,SAAqBA,GACjB,IAAMyd,EAAW,CAAC,EAElB,OADAzd,EAAc4O,OAAO/U,SAAQ,SAACwH,EAAOvH,GAAG,OAAM2jB,EAAS3jB,GAAOuH,EAAM8B,aAAa,IAC1Esa,CACX,CAG+Hta,CAAYnD,GAC3I,CCnBA,IACM0d,GAA+B,QAAUxO,GADjB,kBCA1ByO,GAAUlF,GACVmF,GAAYnF,GCGhB,IAAMoF,GAAwB,SAACC,GAAO,OAAe,IAAVA,CAAc,EACnDC,GAAwB,SAACC,GAAY,OAAKA,EAAe,GAAI,ECP7DC,IACO,E,WCDPC,GAAqB,SAACC,GAAM,OAAK3iB,MAAMC,QAAQ0iB,IAAgC,kBAAdA,EAAO,EAAe,ECE7F,SAASC,GAAuBD,GAC5B,OAAO9hB,SAAS8hB,GACO,kBAAXA,GAAuBE,GAAqBF,IACpDD,GAAmBC,IAClB3iB,MAAMC,QAAQ0iB,IAAWA,EAAOG,MAAMF,IAC/C,CACA,IAAMG,GAAsB,SAAHzf,GAAA,IAAA6C,GAAA6c,EAAAA,GAAAA,GAAA1f,EAAA,GAAK0U,EAAC7R,EAAA,GAAE8R,EAAC9R,EAAA,GAAE8c,EAAC9c,EAAA,GAAE+c,EAAC/c,EAAA,yBAAA7F,OAAsB0X,EAAC,MAAA1X,OAAK2X,EAAC,MAAA3X,OAAK2iB,EAAC,MAAA3iB,OAAK4iB,EAAC,MAC3EL,GAAuB,CACzBM,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAQT,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CU,QAASV,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CW,OAAQX,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDY,QAASZ,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASa,GAAwBjB,GAC7B,GAAKA,EAEL,OAAOD,GAAmBC,GACpBI,GAAoBJ,GACpB3iB,MAAMC,QAAQ0iB,GACVA,EAAOkB,IAAID,IACXf,GAAqBF,EACnC,CC5BA,IAAMmB,GAAe,CACjBC,MAAO,kBAAMzmB,OAAOsC,eAAeC,KAAKmkB,QAAQrkB,UAAW,UAAU,GAEnEskB,GAAU,CAAC,EACXC,GAAW,CAAC,EAClB5hB,GAAA,SAAAhE,GAII4lB,GAAS5lB,GAAO,WAGZ,YAFqB6C,IAAjB8iB,GAAQ3lB,KACR2lB,GAAQ3lB,GAAOwlB,GAAaxlB,MACzB2lB,GAAQ3lB,EACnB,CACJ,EANA,IAAK,IAAMA,MAAOwlB,GAAYxhB,GAAAhE,ICY9B,IAAM6lB,GAAa,SAACC,EAAGC,EAAIC,GAAE,SAAQ,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,CAAC,EACCG,GAAuB,KACvBC,GAA2B,GAkBjC,SAASC,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAO5H,GACX,IAAM6H,EAAW,SAACC,GAAE,OArBxB,SAAyBld,EAAGmd,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACAlnB,EAAI,EACR,IAEIinB,EAAWf,GADXgB,EAAWH,GAAcC,EAAaD,GAAc,EACpBN,EAAKE,GAAO/c,GAC7B,EACXod,EAAaE,EAGbH,EAAaG,QAEZvc,KAAKwc,IAAIF,GAAYX,MACxBtmB,EAAIumB,IACV,OAAOW,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,EAAI,EAE5D,OAAO,SAACR,GAAC,OAAW,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWW,EAASV,GAAIO,EAAKE,EAAI,CAC5E,CC9CA,IAAMxB,GAASoB,GAAY,IAAM,EAAG,EAAG,GACjCnB,GAAUmB,GAAY,EAAG,EAAG,IAAM,GAClClB,GAAYkB,GAAY,IAAM,EAAG,IAAM,GCJvCa,GAAgB,SAAClC,GACnB,OAAOpjB,MAAMC,QAAQmjB,IAA4B,kBAAZA,EAAK,EAC9C,ECAMmC,GAAe,SAAC5C,GAAM,OAAK,SAAC9jB,GAAC,OAAKA,GAAK,GAAM8jB,EAAO,EAAI9jB,GAAK,GAAK,EAAI8jB,EAAO,GAAK,EAAI9jB,KAAO,CAAC,GCA9F2mB,GAAgB,SAAC7C,GAAM,OAAK,SAAC9jB,GAAC,OAAK,EAAI8jB,EAAO,EAAI9jB,EAAE,GCCpD2kB,GAAS,SAAC3kB,GAAC,OAAK,EAAI+J,KAAK6c,IAAI7c,KAAK8c,KAAK7mB,GAAG,EAC1C4kB,GAAU+B,GAAchC,IACxBmC,GAAYJ,GAAa9B,ICDzBE,GAAUc,GAAY,IAAM,KAAM,IAAM,KACxCf,GAAS8B,GAAc7B,IACvBiC,GAAYL,GAAa7B,ICEzBmC,GAAe,CACjB1C,OAAQlG,GACRoG,OAAAA,GACAE,UAAAA,GACAD,QAAAA,GACAE,OAAAA,GACAmC,UAAAA,GACAlC,QAAAA,GACAC,OAAAA,GACAkC,UAAAA,GACAjC,QAAAA,GACAmC,WCjBe,SAACjnB,GAAC,OAAMA,GAAK,GAAK,EAAI,GAAM6kB,GAAO7kB,GAAK,IAAO,EAAI+J,KAAKmd,IAAI,GAAI,IAAMlnB,EAAI,IAAI,GDmB3FmnB,GAA6B,SAAClR,GAChC,GAAI9U,MAAMC,QAAQ6U,GAAa,CAE3BsN,GAAgC,IAAtBtN,EAAW3W,OAAc,2DACnC,IAAA8nB,GAAAjD,EAAAA,GAAAA,GAAyBlO,EAAU,GACnC,OAAO2P,GADEwB,EAAA,GAAIA,EAAA,GAAIA,EAAA,GAAIA,EAAA,GAEzB,CACK,MAA0B,kBAAfnR,GAEZsN,QAAuCjhB,IAA7B0kB,GAAa/Q,GAA2B,wBAAFxU,OAA0BwU,EAAU,MAC7E+Q,GAAa/Q,IAEjBA,CACX,EE5BMoR,GAAgB,SAAC3d,EAAM4d,GAAQ,OAAK,SAACpmB,GACvC,OAAOc,QAAS2I,GAASzJ,IAAMwJ,GAAiBpC,KAAKpH,IAAMA,EAAE0H,WAAWc,IACnE4d,GAAY7oB,OAAOqC,UAAUC,eAAeC,KAAKE,EAAGomB,GAC7D,CAAC,EACKC,GAAa,SAACC,EAAOC,EAAOC,GAAK,OAAK,SAACxmB,GAAM,IAAAuD,EAC/C,IAAKkG,GAASzJ,GACV,OAAOA,EACX,IAAAymB,EAAyBzmB,EAAE0mB,MAAMpd,GAAWqd,GAAA1D,EAAAA,GAAAA,GAAAwD,EAAA,GAArCxO,EAAC0O,EAAA,GAAEzO,EAACyO,EAAA,GAAEzD,EAACyD,EAAA,GAAE1d,EAAK0d,EAAA,GACrB,OAAApjB,EAAA,IAAAqjB,EAAAA,EAAAA,GAAArjB,EACK+iB,EAAQtd,WAAWiP,KAAE2O,EAAAA,EAAAA,GAAArjB,EACrBgjB,EAAQvd,WAAWkP,KAAE0O,EAAAA,EAAAA,GAAArjB,EACrBijB,EAAQxd,WAAWka,KAAE0D,EAAAA,EAAAA,GAAArjB,EAAA,aACLnC,IAAV6H,EAAsBD,WAAWC,GAAS,GAAC1F,CAE1D,CAAC,ECdKsjB,GAAO/iB,EAAAA,EAAA,GACNgF,GAAM,IACTL,UAAW,SAACzI,GAAC,OAAK6I,KAAKQ,MAHN,SAACrJ,GAAC,OAAK0I,EAAM,EAAG,IAAK1I,EAAE,CAGX8mB,CAAa9mB,GAAG,IAE3C+mB,GAAO,CACT3f,KAAM+e,GAAc,MAAO,OAC3Bpd,MAAOsd,GAAW,MAAO,QAAS,QAClC5d,UAAW,SAAAlF,GAAA,IAAGyjB,EAAGzjB,EAAHyjB,IAAKC,EAAK1jB,EAAL0jB,MAAOC,EAAI3jB,EAAJ2jB,KAAIC,EAAA5jB,EAAE0F,MAAOme,OAAO,IAAAD,EAAG,EAACA,EAAA,MAAO,QACrDN,GAAQpe,UAAUue,GAClB,KACAH,GAAQpe,UAAUwe,GAClB,KACAJ,GAAQpe,UAAUye,GAClB,KACA9d,EAASH,EAAMR,UAAU2e,IACzB,GAAG,GCYX,IAAMC,GAAM,CACRjgB,KAAM+e,GAAc,KACpBpd,MAhCJ,SAAkB/I,GACd,IAAIsnB,EAAI,GACJC,EAAI,GACJrP,EAAI,GACJD,EAAI,GAmBR,OAjBIjY,EAAE5B,OAAS,GACXkpB,EAAItnB,EAAEwnB,UAAU,EAAG,GACnBD,EAAIvnB,EAAEwnB,UAAU,EAAG,GACnBtP,EAAIlY,EAAEwnB,UAAU,EAAG,GACnBvP,EAAIjY,EAAEwnB,UAAU,EAAG,KAInBF,EAAItnB,EAAEwnB,UAAU,EAAG,GACnBD,EAAIvnB,EAAEwnB,UAAU,EAAG,GACnBtP,EAAIlY,EAAEwnB,UAAU,EAAG,GACnBvP,EAAIjY,EAAEwnB,UAAU,EAAG,GACnBF,GAAKA,EACLC,GAAKA,EACLrP,GAAKA,EACLD,GAAKA,GAEF,CACH+O,IAAKS,SAASH,EAAG,IACjBL,MAAOQ,SAASF,EAAG,IACnBL,KAAMO,SAASvP,EAAG,IAClBjP,MAAOgP,EAAIwP,SAASxP,EAAG,IAAM,IAAM,EAE3C,EAIIxP,UAAWse,GAAKte,WC/Bdif,GAAO,CACTtgB,KAAM+e,GAAc,MAAO,OAC3Bpd,MAAOsd,GAAW,MAAO,aAAc,aACvC5d,UAAW,SAAAlF,GAAwD,IAArDokB,EAAGpkB,EAAHokB,IAAKC,EAAUrkB,EAAVqkB,WAAYC,EAAStkB,EAATskB,UAASV,EAAA5jB,EAAE0F,MAAOme,OAAO,IAAAD,EAAG,EAACA,EACxD,MAAQ,QACJte,KAAKQ,MAAMse,GACX,KACA5d,GAAQtB,UAAUW,EAASwe,IAC3B,KACA7d,GAAQtB,UAAUW,EAASye,IAC3B,KACAze,EAASH,EAAMR,UAAU2e,IACzB,GACR,GCbEU,GAAQ,CACV1gB,KAAM,SAACpH,GAAC,OAAK+mB,GAAK3f,KAAKpH,IAAMqnB,GAAIjgB,KAAKpH,IAAM0nB,GAAKtgB,KAAKpH,EAAE,EACxD+I,MAAO,SAAC/I,GACJ,OAAI+mB,GAAK3f,KAAKpH,GACH+mB,GAAKhe,MAAM/I,GAEb0nB,GAAKtgB,KAAKpH,GACR0nB,GAAK3e,MAAM/I,GAGXqnB,GAAIte,MAAM/I,EAEzB,EACAyI,UAAW,SAACzI,GACR,OAAOyJ,GAASzJ,GACVA,EACAA,EAAEH,eAAe,OACbknB,GAAKte,UAAUzI,GACf0nB,GAAKjf,UAAUzI,EAC7B,GCHEoV,GAAM,SAAC2S,EAAMC,EAAIC,GAAQ,OAAMA,EAAWF,EAAOE,EAAWD,EAAKD,CAAI,ECpB3E,SAASG,GAASppB,EAAGqpB,EAAG9D,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDvlB,EAAc,GAATqpB,EAAIrpB,GAASulB,EACzBA,EAAI,GACG8D,EACP9D,EAAI,EAAI,EACDvlB,GAAKqpB,EAAIrpB,IAAM,EAAI,EAAIulB,GAAK,EAChCvlB,CACX,CCHA,IAAMspB,GAAiB,SAACL,EAAMC,EAAIhoB,GAC9B,IAAMqoB,EAAWN,EAAOA,EACxB,OAAOlf,KAAKyf,KAAKzf,KAAKD,IAAI,EAAG5I,GAAKgoB,EAAKA,EAAKK,GAAYA,GAC5D,EACME,GAAa,CAAClB,GAAKN,GAAMW,IAE/B,SAASc,GAAOV,GACZ,IAFkB9nB,EAEZwI,GAFYxI,EAEQ8nB,EAFFS,GAAWE,MAAK,SAACjgB,GAAI,OAAKA,EAAKpB,KAAKpH,EAAE,KAG9DqiB,GAAUvhB,QAAQ0H,GAAO,IAAFjI,OAAMunB,EAAK,yEAClC,IAAIY,EAAQlgB,EAAKO,MAAM+e,GAKvB,OAJItf,IAASkf,KAETgB,EDRR,SAAmBnlB,GAAwC,IAArCokB,EAAGpkB,EAAHokB,IAAKC,EAAUrkB,EAAVqkB,WAAYC,EAAStkB,EAATskB,UAAW5e,EAAK1F,EAAL0F,MAC9C0e,GAAO,IAEPE,GAAa,IACb,IAAIb,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAU,GAAc,IAQT,CACD,IAAMO,EAAIN,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC9oB,EAAI,EAAI+oB,EAAYM,EAC1BnB,EAAMkB,GAASppB,EAAGqpB,EAAGR,EAAM,EAAI,GAC/BV,EAAQiB,GAASppB,EAAGqpB,EAAGR,GACvBT,EAAOgB,GAASppB,EAAGqpB,EAAGR,EAAM,EAAI,EACpC,MAVIX,EAAMC,EAAQC,EAAOW,EAWzB,MAAO,CACHb,IAAKne,KAAKQ,MAAY,IAAN2d,GAChBC,MAAOpe,KAAKQ,MAAc,IAAR4d,GAClBC,KAAMre,KAAKQ,MAAa,IAAP6d,GACjBje,MAAAA,EAER,CCjBgB0f,CAAWD,IAEhBA,CACX,CACA,IAAME,GAAW,SAACb,EAAMC,GACpB,IAAMa,EAAWL,GAAOT,GAClBe,EAASN,GAAOR,GAChBe,EAAOjlB,EAAA,GAAQ+kB,GACrB,OAAO,SAAC7oB,GAKJ,OAJA+oB,EAAQ/B,IAAMoB,GAAeS,EAAS7B,IAAK8B,EAAO9B,IAAKhnB,GACvD+oB,EAAQ9B,MAAQmB,GAAeS,EAAS5B,MAAO6B,EAAO7B,MAAOjnB,GAC7D+oB,EAAQ7B,KAAOkB,GAAeS,EAAS3B,KAAM4B,EAAO5B,KAAMlnB,GAC1D+oB,EAAQ9f,MAAQmM,GAAIyT,EAAS5f,MAAO6f,EAAO7f,MAAOjJ,GAC3C+mB,GAAKte,UAAUsgB,EAC1B,CACJ,ECjCMC,GAAa,OACbC,GAAc,OASpB,SAASC,GAAoBlpB,GACR,kBAANA,IACPA,EAAI,GAAHO,OAAMP,IACX,IAAMqT,EAAS,GACX8V,EAAY,EACZC,EAAa,EACXC,EAASrpB,EAAE0mB,MAAMnd,IACnB8f,IACAF,EAAYE,EAAOjrB,OAGnB4B,EAAIA,EAAE6T,QAAQtK,GAAYyf,IAC1B3V,EAAOvV,KAAIC,MAAXsV,GAAMiW,EAAAA,GAAAA,GAASD,EAAOvF,IAAIgE,GAAM/e,UAEpC,IAAMwgB,EAAUvpB,EAAE0mB,MAAMpd,GAMxB,OALIigB,IACAH,EAAaG,EAAQnrB,OACrB4B,EAAIA,EAAE6T,QAAQvK,EAAY2f,IAC1B5V,EAAOvV,KAAIC,MAAXsV,GAAMiW,EAAAA,GAAAA,GAASC,EAAQzF,IAAIhb,EAAOC,UAE/B,CAAEsK,OAAAA,EAAQ8V,UAAAA,EAAWC,WAAAA,EAAYI,UAAWxpB,EACvD,CACA,SAAS+I,GAAM/I,GACX,OAAOkpB,GAAoBlpB,GAAGqT,MAClC,CACA,SAASoW,GAAkBprB,GACvB,IAAAqrB,EAAyCR,GAAoB7qB,GAArDgV,EAAMqW,EAANrW,OAAQ8V,EAASO,EAATP,UAAWK,EAASE,EAATF,UACrBG,EAAYtW,EAAOjV,OACzB,OAAO,SAAC4B,GAEJ,IADA,IAAI4pB,EAASJ,EACJtrB,EAAI,EAAGA,EAAIyrB,EAAWzrB,IAC3B0rB,EAASA,EAAO/V,QAAQ3V,EAAIirB,EAAYH,GAAaC,GAAa/qB,EAAIirB,EAChErB,GAAMrf,UAAUzI,EAAE9B,IAClBkL,EAASpJ,EAAE9B,KAErB,OAAO0rB,CACX,CACJ,CACA,IAAMC,GAAuB,SAAC7pB,GAAC,MAAkB,kBAANA,EAAiB,EAAIA,CAAC,EAMjE,IAAM8pB,GAAU,CAAE1iB,KApDlB,SAAcpH,GACV,IAAI2Q,EAAIoZ,EACR,OAAQC,MAAMhqB,IACVyJ,GAASzJ,MACwB,QAA9B2Q,EAAK3Q,EAAE0mB,MAAMpd,UAAgC,IAAPqH,OAAgB,EAASA,EAAGvS,SAAW,KAC3C,QAA9B2rB,EAAK/pB,EAAE0mB,MAAMnd,WAAgC,IAAPwgB,OAAgB,EAASA,EAAG3rB,SAAW,GAChF,CACZ,EA6CwB2K,MAAAA,GAAO0gB,kBAAAA,GAAmBQ,kBALlD,SAA2BjqB,GACvB,IAAMkqB,EAASnhB,GAAM/I,GAErB,OADoBypB,GAAkBzpB,EAC/BmqB,CAAYD,EAAOpG,IAAI+F,IAClC,GClDA,SAASO,GAASlZ,EAAQjT,GACtB,MAAsB,kBAAXiT,EACA,SAAClR,GAAC,OAAKoV,GAAIlE,EAAQjT,EAAQ+B,EAAE,EAE/B8nB,GAAM1gB,KAAK8J,GACT0X,GAAS1X,EAAQjT,GAGjBosB,GAAWnZ,EAAQjT,EAElC,CACA,IAAMqsB,GAAW,SAACvC,EAAMC,GACpB,IAAM4B,GAAMN,EAAAA,GAAAA,GAAOvB,GACb4B,EAAYC,EAAOxrB,OACnBmsB,EAAaxC,EAAKjE,KAAI,SAAC0G,EAAUtsB,GAAC,OAAKksB,GAASI,EAAUxC,EAAG9pB,GAAG,IACtE,OAAO,SAAC8B,GACJ,IAAK,IAAI9B,EAAI,EAAGA,EAAIyrB,EAAWzrB,IAC3B0rB,EAAO1rB,GAAKqsB,EAAWrsB,GAAG8B,GAE9B,OAAO4pB,CACX,CACJ,EACMa,GAAY,SAACvZ,EAAQjT,GACvB,IAAM2rB,EAAM9lB,EAAAA,EAAA,GAAQoN,GAAWjT,GACzBssB,EAAa,CAAC,EACpB,IAAK,IAAMhsB,KAAOqrB,OACMxoB,IAAhB8P,EAAO3S,SAAsC6C,IAAhBnD,EAAOM,KACpCgsB,EAAWhsB,GAAO6rB,GAASlZ,EAAO3S,GAAMN,EAAOM,KAGvD,OAAO,SAACyB,GACJ,IAAK,IAAMzB,KAAOgsB,EACdX,EAAOrrB,GAAOgsB,EAAWhsB,GAAKyB,GAElC,OAAO4pB,CACX,CACJ,EACMS,GAAa,SAACnZ,EAAQjT,GACxB,IAAMysB,EAAWZ,GAAQL,kBAAkBxrB,GACrC0sB,EAAczB,GAAoBhY,GAClC0Z,EAAc1B,GAAoBjrB,GAGxC,OAFuB0sB,EAAYxB,YAAcyB,EAAYzB,WACzDwB,EAAYvB,YAAcwB,EAAYxB,WAE/BjR,GAAKmS,GAASK,EAAYtX,OAAQuX,EAAYvX,QAASqX,IAG9DtI,IAAQ,EAAM,mBAAF7hB,OAAqB2Q,EAAM,WAAA3Q,OAAUtC,EAAM,6KAChD,SAACa,GAAC,SAAAyB,OAAQzB,EAAI,EAAIb,EAASiT,EAAM,EAEhD,EC7CM+W,GAAW,SAACF,EAAMC,EAAIliB,GACxB,IAAM+kB,EAAmB7C,EAAKD,EAC9B,OAA4B,IAArB8C,EAAyB,GAAK/kB,EAAQiiB,GAAQ8C,CACzD,ECLMC,GAAY,SAAC/C,EAAMC,GAAE,OAAK,SAAClpB,GAAC,OAAKsW,GAAI2S,EAAMC,EAAIlpB,EAAE,GAqBvD,SAASisB,GAAanB,EAAQvG,EAAM2H,GAIhC,IAHA,IArBwBhrB,EAqBlBirB,EAAS,GACTC,EAAeF,IArBJ,kBADOhrB,EAsB+B4pB,EAAO,IApBnDkB,GAEW,kBAAN9qB,EACR8nB,GAAM1gB,KAAKpH,GACJ4oB,GAGAyB,GAGNpqB,MAAMC,QAAQF,GACZsqB,GAEW,kBAANtqB,EACLyqB,GAEJK,IAKDK,EAAYvB,EAAOxrB,OAAS,EACzBF,EAAI,EAAGA,EAAIitB,EAAWjtB,IAAK,CAChC,IAAIktB,EAAQF,EAAatB,EAAO1rB,GAAI0rB,EAAO1rB,EAAI,IAC/C,GAAImlB,EAAM,CACN,IAAMgI,EAAiBprB,MAAMC,QAAQmjB,GAAQA,EAAKnlB,IAAMgf,GAAOmG,EAC/D+H,EAAQjT,GAAKkT,EAAgBD,EACjC,CACAH,EAAOntB,KAAKstB,EAChB,CACA,OAAOH,CACX,CAoBA,SAASK,GAAYC,EAAO3B,GAAqD,IAAArmB,EAAApF,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAACqtB,EAAAjoB,EAAzCmF,MAAO+iB,OAAO,IAAAD,GAAOA,EAAEnI,EAAI9f,EAAJ8f,KAAM+H,EAAK7nB,EAAL6nB,MACzDM,EAAcH,EAAMntB,OAM1B,GALAikB,GAAUqJ,IAAgB9B,EAAOxrB,OAAQ,wDAKrB,IAAhBstB,EACA,OAAO,kBAAM9B,EAAO,EAAE,EAEtB2B,EAAM,GAAKA,EAAMG,EAAc,KAC/BH,GAAQjC,EAAAA,GAAAA,GAAIiC,GAAOI,UACnB/B,GAASN,EAAAA,GAAAA,GAAIM,GAAQ+B,WAEzB,IAAMV,EAASF,GAAanB,EAAQvG,EAAM+H,GACpCD,EAAYF,EAAO7sB,OACnBwtB,EAAe,SAAC5rB,GAClB,IAAI9B,EAAI,EACR,GAAIitB,EAAY,EACZ,KAAOjtB,EAAIqtB,EAAMntB,OAAS,KAClB4B,EAAIurB,EAAMrtB,EAAI,IADOA,KAKjC,IAAM2tB,EAAkB5D,GAASsD,EAAMrtB,GAAIqtB,EAAMrtB,EAAI,GAAI8B,GACzD,OAAOirB,EAAO/sB,GAAG2tB,EACrB,EACA,OAAOJ,EACD,SAACzrB,GAAC,OAAK4rB,EAAaljB,EAAM6iB,EAAM,GAAIA,EAAMG,EAAc,GAAI1rB,GAAG,EAC/D4rB,CACV,CC5FA,SAASE,GAAcC,GACnB,IAAM5a,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQ6a,GAExB,IADA,IAAMrjB,EAAMwI,EAAOA,EAAO/S,OAAS,GAC1BF,EAAI,EAAGA,GAAK8tB,EAAW9tB,IAAK,CACjC,IAAM+tB,EAAiBhE,GAAS,EAAG+D,EAAW9tB,GAC9CiT,EAAOrT,KAAKsX,GAAIzM,EAAK,EAAGsjB,GAC5B,CACJ,CDLIC,CAAW/a,EAAQ4a,EAAI3tB,OAAS,GACzB+S,CACX,CEIA,SAASgb,GAAS5oB,GAA4E,IAHvE8P,EAAQuP,EAG+DwJ,EAAA7oB,EAAzE8oB,SAAAA,OAAQ,IAAAD,EAAG,IAAGA,EAAaE,EAAc/oB,EAAzB4oB,UAA2BI,EAAKhpB,EAALgpB,MAAKC,EAAAjpB,EAAE8f,KAAAA,OAAI,IAAAmJ,EAAG,YAAWA,EAK/EC,EAAkBlH,GAAclC,GAChCA,EAAKS,IAAImC,IACTA,GAA2B5C,GAK3BzV,EAAQ,CACV8e,MAAM,EACN5mB,MAAOwmB,EAAe,IAKpBK,EC7BV,SAA8Bxb,EAAQkb,GAClC,OAAOlb,EAAO2S,KAAI,SAAC8I,GAAC,OAAKA,EAAIP,CAAQ,GACzC,CD2B0BQ,CAGtBN,GAASA,EAAMnuB,SAAWkuB,EAAeluB,OACnCmuB,EACAT,GAAcQ,GAAiBD,GAC/BS,EAAoBxB,GAAYqB,EAAeL,EAAgB,CACjEjJ,KAAMpjB,MAAMC,QAAQusB,GACdA,GA9BSpZ,EA+BKiZ,EA/BG1J,EA+Ba6J,EA9BjCpZ,EAAOyQ,KAAI,kBAAMlB,GAAUY,EAAS,IAAE1I,OAAO,EAAGzH,EAAOjV,OAAS,MAgCvE,MAAO,CACH2uB,mBAAoBV,EACpBxK,KAAM,SAACwC,GAGH,OAFAzW,EAAM9H,MAAQgnB,EAAkBzI,GAChCzW,EAAM8e,KAAOrI,GAAKgI,EACXze,CACX,EAER,CE1CA,SAASof,GAAkB9K,EAAU+K,GACjC,OAAOA,EAAgB/K,GAAY,IAAO+K,GAAiB,CAC/D,CCNA,IAAMC,GAAyB,EAC/B,SAASC,GAAsBC,EAAc/I,EAAGzhB,GAC5C,IAAMyqB,EAAQxkB,KAAKD,IAAIyb,EAAI6I,GAAwB,GACnD,OAAOF,GAAkBpqB,EAAUwqB,EAAaC,GAAQhJ,EAAIgJ,EAChE,CCFA,IAAMC,GAAU,KACVC,GAAc,IACdC,GAAc,GACdC,GAAa,IACbC,GAAa,EACnB,SAASC,GAAUpqB,GAA6D,IACxEqqB,EACAC,EAFwEzB,EAAA7oB,EAA1D8oB,SAAAA,OAAQ,IAAAD,EAAG,IAAGA,EAAA0B,EAAAvqB,EAAEwqB,OAAAA,OAAM,IAAAD,EAAG,IAAIA,EAAAE,EAAAzqB,EAAE2e,SAAAA,OAAQ,IAAA8L,EAAG,EAACA,EAAAC,EAAA1qB,EAAE2qB,KAAAA,OAAI,IAAAD,EAAG,EAACA,EAGvE7L,GAAQiK,GAAY/J,GAAsBkL,IAAc,8CACxD,IAAIW,EAAe,EAAIJ,EAIvBI,EAAezlB,EAAM+kB,GAAYC,GAAYS,GAC7C9B,EAAW3jB,EAAM6kB,GAAaC,GAAahL,GAAsB6J,IAC7D8B,EAAe,GAIfP,EAAW,SAACQ,GACR,IAAMC,EAAmBD,EAAeD,EAClC3U,EAAQ6U,EAAmBhC,EAC3BpU,EAAIoW,EAAmBnM,EACvBhK,EAAIoW,GAAgBF,EAAcD,GAClCjL,EAAIra,KAAK0lB,KAAK/U,GACpB,OAAO8T,GAAWrV,EAAIC,EAAKgL,CAC/B,EACA2K,EAAa,SAACO,GACV,IACM5U,EADmB4U,EAAeD,EACP9B,EAC3BlJ,EAAI3J,EAAQ0I,EAAWA,EACvBrL,EAAIhO,KAAKmd,IAAImI,EAAc,GAAKtlB,KAAKmd,IAAIoI,EAAc,GAAK/B,EAC5DmC,EAAI3lB,KAAK0lB,KAAK/U,GACd+N,EAAI+G,GAAgBzlB,KAAKmd,IAAIoI,EAAc,GAAID,GAErD,QADgBP,EAASQ,GAAgBd,GAAU,GAAK,EAAI,KACzCnK,EAAItM,GAAK2X,GAAMjH,CACtC,IAMAqG,EAAW,SAACQ,GAGR,OAFUvlB,KAAK0lB,KAAKH,EAAe/B,KACxB+B,EAAelM,GAAYmK,EAAW,GACzCiB,EACZ,EACAO,EAAa,SAACO,GAGV,OAFUvlB,KAAK0lB,KAAKH,EAAe/B,IACIA,EAAWA,GAAvCnK,EAAWkM,GAE1B,GAEJ,IACMA,EAmBV,SAAyBR,EAAUC,EAAYY,GAE3C,IADA,IAAIC,EAASD,EACJvwB,EAAI,EAAGA,EAAIywB,GAAgBzwB,IAChCwwB,GAAkBd,EAASc,GAAUb,EAAWa,GAEpD,OAAOA,CACX,CAzByBE,CAAgBhB,EAAUC,EAD1B,EAAIxB,GAGzB,GADAA,EAAW/J,GAAsB+J,GAC7BrC,MAAMoE,GACN,MAAO,CACHS,UAAW,IACXC,QAAS,GACTzC,SAAAA,GAIJ,IAAMwC,EAAYhmB,KAAKmd,IAAIoI,EAAc,GAAKF,EAC9C,MAAO,CACHW,UAAAA,EACAC,QAAwB,EAAfX,EAAmBtlB,KAAKyf,KAAK4F,EAAOW,GAC7CxC,SAAAA,EAGZ,CACA,IAAMsC,GAAiB,GAQvB,SAASL,GAAgBF,EAAcD,GACnC,OAAOC,EAAevlB,KAAKyf,KAAK,EAAI6F,EAAeA,EACvD,C,6CClFMY,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAanhB,EAASxQ,GAC3B,OAAOA,EAAKqD,MAAK,SAACpC,GAAG,YAAsB6C,IAAjB0M,EAAQvP,EAAkB,GACxD,CAwBA,SAAS2wB,GAAM3rB,GAAkD,IAuBzD4rB,EAvBUhD,EAAS5oB,EAAT4oB,UAAWiD,EAAS7rB,EAAT6rB,UAAWC,EAAS9rB,EAAT8rB,UAAcvhB,EAAO8C,GAAArN,EAAAyO,IACnDd,EAASib,EAAU,GACnBluB,EAASkuB,EAAUA,EAAU/tB,OAAS,GAKtCwP,EAAQ,CAAE8e,MAAM,EAAO5mB,MAAOoL,GACpCoe,EA/BJ,SAA0BxhB,GACtB,IAAIyhB,EAAazrB,EAAA,CACboe,SAAU,EACV2M,UAAW,IACXC,QAAS,GACTZ,KAAM,EACNsB,wBAAwB,GACrB1hB,GAGP,IAAKmhB,GAAanhB,EAASkhB,KACvBC,GAAanhB,EAASihB,IAAe,CACrC,IAAMU,EAAU9B,GAAW7f,IAC3ByhB,EAAazrB,EAAAA,EAAAA,EAAA,GACNyrB,GACAE,GAAO,IACVvN,SAAU,EACVgM,KAAM,KAEIsB,wBAAyB,CAC3C,CACA,OAAOD,CACX,CASsFG,CAAiB5hB,GAA3F+gB,EAASS,EAATT,UAAWC,EAAOQ,EAAPR,QAASZ,EAAIoB,EAAJpB,KAAMhM,EAAQoN,EAARpN,SAAUmK,EAAQiD,EAARjD,SAAUmD,EAAsBF,EAAtBE,uBAChDG,EAAkBzN,GAAYM,GAAsBN,GAAY,EAChEiM,EAAeW,GAAW,EAAIjmB,KAAKyf,KAAKuG,EAAYX,IACpD0B,EAAe3xB,EAASiT,EACxB2e,EAAsBrN,GAAsB3Z,KAAKyf,KAAKuG,EAAYX,IAQlE4B,EAAkBjnB,KAAKwc,IAAIuK,GAAgB,EAIjD,GAHAP,IAAcA,EAAYS,EAAkB,IAAO,GACnDV,IAAcA,EAAYU,EAAkB,KAAQ,IAEhD3B,EAAe,EAAG,CAClB,IAAM4B,EAAczB,GAAgBuB,EAAqB1B,GAEzDgB,EAAgB,SAAC9K,GACb,IAAMuJ,EAAW/kB,KAAK0lB,KAAKJ,EAAe0B,EAAsBxL,GAChE,OAAQpmB,EACJ2vB,IACO+B,EACCxB,EAAe0B,EAAsBD,GACrCG,EACAlnB,KAAK6c,IAAIqK,EAAc1L,GACvBuL,EAAe/mB,KAAKmnB,IAAID,EAAc1L,GACtD,CACJ,MACK,GAAqB,IAAjB8J,EAELgB,EAAgB,SAAC9K,GAAC,OAAKpmB,EACnB4K,KAAK0lB,KAAKsB,EAAsBxL,IAC3BuL,GACID,EAAkBE,EAAsBD,GAAgBvL,EAAE,MAEtE,CAED,IAAM4L,EAAoBJ,EAAsBhnB,KAAKyf,KAAK6F,EAAeA,EAAe,GACxFgB,EAAgB,SAAC9K,GACb,IAAMuJ,EAAW/kB,KAAK0lB,KAAKJ,EAAe0B,EAAsBxL,GAE1D6L,EAAWrnB,KAAKF,IAAIsnB,EAAoB5L,EAAG,KACjD,OAAQpmB,EACH2vB,IACK+B,EACExB,EAAe0B,EAAsBD,GACrC/mB,KAAKsnB,KAAKD,GACVD,EACIL,EACA/mB,KAAKunB,KAAKF,IAClBD,CACZ,CACJ,CACA,MAAO,CACHlD,mBAAoByC,GAAyBnD,GAAmB,KAChExK,KAAM,SAACwC,GACH,IAAMzhB,EAAUusB,EAAc9K,GAC9B,GAAKmL,EAqBD5hB,EAAM8e,KAAOrI,GAAKgI,MArBO,CACzB,IAAIpX,EAAkB0a,EACZ,IAANtL,IAOIpP,EADAkZ,EAAe,EACGhB,GAAsBgC,EAAe9K,EAAGzhB,GAGxC,GAG1B,IAAMytB,EAA2BxnB,KAAKwc,IAAIpQ,IAAoBoa,EACxDiB,EAA+BznB,KAAKwc,IAAIpnB,EAAS2E,IAAYwsB,EACnExhB,EAAM8e,KACF2D,GAA4BC,CACpC,CAKA,OADA1iB,EAAM9H,MAAQ8H,EAAM8e,KAAOzuB,EAAS2E,EAC7BgL,CACX,EAER,CC3HA,SAAS2iB,GAAOhtB,GAAiK,IAA9J4oB,EAAS5oB,EAAT4oB,UAAS6B,EAAAzqB,EAAE2e,SAAAA,OAAQ,IAAA8L,EAAG,EAAGA,EAAAwC,EAAAjtB,EAAEktB,MAAAA,OAAK,IAAAD,EAAG,GAAGA,EAAAE,EAAAntB,EAAEotB,aAAAA,OAAY,IAAAD,EAAG,IAAGA,EAAAE,EAAArtB,EAAEstB,cAAAA,OAAa,IAAAD,EAAG,GAAEA,EAAAE,EAAAvtB,EAAEwtB,gBAAAA,OAAe,IAAAD,EAAG,IAAGA,EAAEE,EAAYztB,EAAZytB,aAAcroB,EAAGpF,EAAHoF,IAAKC,EAAGrF,EAAHqF,IAAGqoB,EAAA1tB,EAAE6rB,UAAAA,OAAS,IAAA6B,EAAG,GAAGA,EAAE5B,EAAS9rB,EAAT8rB,UACzJne,EAASib,EAAU,GACnBve,EAAQ,CACV8e,MAAM,EACN5mB,MAAOoL,GAGLggB,EAAkB,SAAClxB,GACrB,YAAYoB,IAARuH,EACOC,OACCxH,IAARwH,GAEGC,KAAKwc,IAAI1c,EAAM3I,GAAK6I,KAAKwc,IAAIzc,EAAM5I,GAD/B2I,EAC0CC,CACzD,EACIuoB,EAAYV,EAAQvO,EAClBkP,EAAQlgB,EAASigB,EACjBlzB,OAA0BmD,IAAjB4vB,EAA6BI,EAAQJ,EAAaI,GAK7DnzB,IAAWmzB,IACXD,EAAYlzB,EAASiT,GACzB,IAcImgB,EACAC,EAfEC,EAAY,SAAClN,GAAC,OAAM8M,EAAYtoB,KAAK0lB,KAAKlK,EAAIsM,EAAa,EAC3Da,EAAa,SAACnN,GAAC,OAAKpmB,EAASszB,EAAUlN,EAAE,EACzCoN,EAAgB,SAACpN,GACnB,IAAM7K,EAAQ+X,EAAUlN,GAClBqN,EAASF,EAAWnN,GAC1BzW,EAAM8e,KAAO7jB,KAAKwc,IAAI7L,IAAU4V,EAChCxhB,EAAM9H,MAAQ8H,EAAM8e,KAAOzuB,EAASyzB,CACxC,EASMC,EAAqB,SAACtN,GAjCN,IAACrkB,KAkCA4N,EAAM9H,WAlCS1E,IAARuH,GAAqB3I,EAAI2I,QAAiBvH,IAARwH,GAAqB5I,EAAI4I,KAoCrFyoB,EAAsBhN,EACtBiN,EAAWpC,GAAO,CACd/C,UAAW,CAACve,EAAM9H,MAAOorB,EAAgBtjB,EAAM9H,QAC/Coc,SAAUiL,GAAsBqE,EAAYnN,EAAGzW,EAAM9H,OACrDgpB,QAAS+B,EACThC,UAAWkC,EACX3B,UAAAA,EACAC,UAAAA,IAER,EAEA,OADAsC,EAAmB,GACZ,CACH5E,mBAAoB,KACpBlL,KAAM,SAACwC,GAOH,IAAIuN,GAAkB,EAUtB,OATKN,QAAoClwB,IAAxBiwB,IACbO,GAAkB,EAClBH,EAAcpN,GACdsN,EAAmBtN,SAMKjjB,IAAxBiwB,GAAqChN,EAAIgN,EAClCC,EAASzP,KAAKwC,EAAIgN,KAGxBO,GAAmBH,EAAcpN,GAC3BzW,EAEf,EAER,CCjFA,IAAMikB,GAAkB,SAAC3sB,GACrB,IAAM4sB,EAAgB,SAAHvuB,GAAA,IAAMkW,EAASlW,EAATkW,UAAS,OAAOvU,EAAOuU,EAAU,EAC1D,MAAO,CACHrZ,MAAO,kBAAM8a,GAAKhW,OAAO4sB,GAAe,EAAK,EAC7CC,KAAM,kBAAMzW,GAAWpW,OAAO4sB,EAAc,EAK5CE,IAAK,kBAAMzY,GAAUG,aAAeH,GAAUE,UAAYwY,YAAYD,KAAK,EAEnF,ECVME,GAAuB,IAC7B,SAASC,GAAsBC,GAI3B,IAHA,IAAI/F,EAAW,EAEXze,EAAQwkB,EAAUvQ,KAAKwK,IACnBze,EAAM8e,MAAQL,EAAW6F,IAC7B7F,GAHa,GAIbze,EAAQwkB,EAAUvQ,KAAKwK,GAE3B,OAAOA,GAAY6F,GAAuBG,IAAWhG,CACzD,C,sICLMiG,GAAQ,CACVC,MAAOhC,GACPA,QAAAA,GACAiC,MAAOrG,GACPA,UAAWA,GACX+C,OAAAA,IASJ,SAASuD,GAAYlvB,GAA2M,IAGxNmvB,EACAC,EAcAC,EAlBwNC,EAAAtvB,EAAxMuvB,SAAAA,OAAQ,IAAAD,GAAOA,EAAAE,EAAAxvB,EAAEyvB,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAAE,EAAA1vB,EAAE2vB,OAAAA,OAAM,IAAAD,EAAGpB,GAAeoB,EAAaE,EAAW5vB,EAAtB4oB,UAASiH,EAAA7vB,EAAeiF,KAAAA,OAAI,IAAA4qB,EAAG,YAAWA,EAAAC,EAAA9vB,EAAE+vB,OAAAA,OAAM,IAAAD,EAAG,EAACA,EAAAE,EAAAhwB,EAAEiwB,YAAAA,OAAW,IAAAD,EAAG,EAACA,EAAAE,EAAAlwB,EAAEmwB,WAAAA,OAAU,IAAAD,EAAG,OAAMA,EAAEE,EAAMpwB,EAANowB,OAAQC,EAAMrwB,EAANqwB,OAAQC,EAAUtwB,EAAVswB,WAAYC,EAAQvwB,EAARuwB,SAAahmB,EAAO8C,GAAArN,EAAAyO,IACpN+hB,EAAQ,EACRC,GAAa,EAQXC,EAAwB,WAC1BvB,GAA0BA,IAC1BC,EAAyB,IAAIuB,SAAQ,SAACC,GAClCzB,EAAyByB,CAC7B,GACJ,EAEAF,IAEA,IAMIG,EANEC,EAAmB/B,GAAM9pB,IAAS2jB,GAOpCkI,IAAqBlI,IACK,kBAAnBgH,EAAY,KACnBiB,EAAwB9I,GAAY,CAAC,EAAG,KAAM6H,EAAa,CACvDzqB,OAAO,IAEXyqB,EAAc,CAAC,EAAG,MAEtB,IACImB,EADElC,EAAYiC,EAAgBvwB,EAAAA,EAAC,CAAC,EAAIgK,GAAO,IAAEqe,UAAWgH,KAEzC,WAAfO,IACAY,EAAoBD,EAAgBvwB,EAAAA,EAAC,CAAC,EAC/BgK,GAAO,IACVqe,WAAW7C,EAAAA,GAAAA,GAAI6J,GAAaxH,UAC5BzJ,WAAYpU,EAAQoU,UAAY,OAGxC,IAAIqS,EAAY,OACZC,EAAW,KACXC,EAAY,KACZC,EAAa,KASoB,OAAjCtC,EAAUrF,oBAA+BuG,IACzClB,EAAUrF,mBAAqBoF,GAAsBC,IAEzD,IAAQrF,EAAuBqF,EAAvBrF,mBACJ4H,EAAmBtC,IACnBuC,EAAgBvC,IACO,OAAvBtF,IAEA6H,GADAD,EAAmB5H,EAAqByG,IACJF,EAAS,GAAKE,GAEtD,IAAIqB,EAAc,EACZC,EAAO,SAACrb,GACV,GAAkB,OAAdgb,EAAJ,CAQIV,EAAQ,IACRU,EAAY5rB,KAAKF,IAAI8rB,EAAWhb,IAQpC,IAAMsb,GANFF,EADa,OAAbL,EACcA,GAGC/a,EAAYgb,GAAaV,GAGLf,EACjCgC,EAAiBD,EAAmB,EAC1CF,EAAchsB,KAAKD,IAAImsB,EAAkB,GAKvB,aAAdR,GAAyC,OAAbC,IAC5BK,EAAcD,GAElB,IAAIK,EAAUJ,EACVK,EAAiB9C,EACrB,GAAIkB,EAAQ,CAMR,IAAMrL,EAAW4M,EAAcF,EAK3BQ,EAAmBtsB,KAAKusB,MAAMnN,GAK9BoN,EAAoBpN,EAAW,GAK9BoN,GAAqBpN,GAAY,IAClCoN,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBtsB,KAAKF,IAAIwsB,EAAkB7B,EAAS,GAIvD,IAAMgC,EAAiBx0B,QAAQq0B,EAAmB,GAC9CG,IACmB,YAAf5B,GACA2B,EAAoB,EAAIA,EACpB7B,IACA6B,GAAqB7B,EAAcmB,IAGnB,WAAfjB,IACLwB,EAAiBZ,IAGzB,IAAIx1B,EAAI4J,EAAM,EAAG,EAAG2sB,GAChBR,EAAcD,IACd91B,EAAmB,YAAf40B,GAA4B4B,EAAiB,EAAI,GAEzDL,EAAUn2B,EAAI61B,CAClB,CAMA,IAAM/mB,EAAQonB,EACR,CAAEtI,MAAM,EAAO5mB,MAAOqtB,EAAY,IAClC+B,EAAerT,KAAKoT,GACtBb,IACAxmB,EAAM9H,MAAQsuB,EAAsBxmB,EAAM9H,QAE9C,IAAM4mB,EAAS9e,EAAT8e,KACDsI,GAAyC,OAAvBjI,IACnBL,EAAOmI,GAAeD,GAE1B,IAAMW,EAAmC,OAAbf,IACT,aAAdD,GACkB,YAAdA,GAA2B7H,GAC3BqH,EAAQ,GAAKc,GAAe,GAOrC,OANIf,GACAA,EAASlmB,EAAM9H,OAEfyvB,GACAC,IAEG5nB,CApGG,CAqGd,EACM6nB,EAAsB,WACxB7C,GAAmBA,EAAgBb,OACnCa,OAAkBxxB,CACtB,EACMwZ,EAAS,WACX2Z,EAAY,OACZkB,IACAxB,IACAQ,EAAYC,EAAa,IAC7B,EACMc,EAAS,WACXjB,EAAY,WACZV,GAAcA,IACd4B,IACAxB,GACJ,EACMyB,EAAO,WACT,IAAI1B,EAAJ,CAEKpB,IACDA,EAAkBM,EAAO4B,IAC7B,IAAM9C,EAAMY,EAAgBZ,MAC5B2B,GAAUA,IACO,OAAba,EACAC,EAAYzC,EAAMwC,EAEZC,GAA2B,aAAdF,IACnBE,EAAYzC,GAEhB0C,EAAaD,EACbD,EAAW,KAKXD,EAAY,UACZ3B,EAAgBxyB,OAlBN,CAmBd,EACI0yB,GACA4C,IAEJ,IAAMC,EAAW,CACbC,KAAI,SAACzB,EAAS0B,GACV,OAAOlD,EAAuBiD,KAAKzB,EAAS0B,EAChD,EACIC,WACA,OAAOtT,GAAsBqS,EACjC,EACIiB,SAAKC,GACLA,EAAUzT,GAAsByT,GAChClB,EAAckB,EACG,OAAbvB,GAAsB5B,GAA6B,IAAVmB,EAIzCU,EAAY7B,EAAgBZ,MAAQ+D,EAAUhC,EAH9CS,EAAWuB,CAKnB,EACI1J,eACA,IAAMA,EAA4C,OAAjC+F,EAAUrF,mBACrBoF,GAAsBC,GACtBA,EAAUrF,mBAChB,OAAOvK,GAAsB6J,EACjC,EACI0H,YACA,OAAOA,CACX,EACIA,UAAMiC,GACFA,IAAajC,GAAUnB,IAE3BmB,EAAQiC,EACRL,EAASG,KAAOtT,GAAsBqS,GAC1C,EACIjnB,YACA,OAAO2mB,CACX,EACAmB,KAAAA,EACAO,MAAO,WACH1B,EAAY,SACZC,EAAWK,CACf,EACA9C,KAAM,WACFiC,GAAa,EACK,SAAdO,IAEJA,EAAY,OACZX,GAAUA,IACVhZ,IACJ,EACAA,OAAQ,WACe,OAAf8Z,GACAI,EAAKJ,GACT9Z,GACJ,EACAsb,SAAU,WACN3B,EAAY,UAChB,EACA4B,OAAQ,SAAClB,GAEL,OADAR,EAAY,EACLK,EAAKG,EAChB,GAEJ,OAAOU,CACX,C,iCC5RMS,GAAoB,IAAI5uB,IAAI,CAC9B,UACA,WACA,SACA,YACA,oBAgBJ,SAAS6uB,GAA2BvwB,EAAOwwB,EAAS/yB,GAAYA,EAARuwB,SAAoC,IAA1BD,EAAUtwB,EAAVswB,WAAe/lB,EAAO8C,GAAArN,EAAAyO,IAOpF,KAN+BmS,GAASH,SACpCoS,GAAkBtvB,IAAIwvB,KACrBxoB,EAAQ0lB,aACc,WAAvB1lB,EAAQ4lB,YACY,IAApB5lB,EAAQghB,SACS,YAAjBhhB,EAAQtF,MAER,OAAO,EAIX,IACIkqB,EACAC,EAFAqB,GAAa,EAQXC,EAAwB,WAC1BtB,EAAyB,IAAIuB,SAAQ,SAACC,GAClCzB,EAAyByB,CAC7B,GACJ,EAEAF,IACA,IAAM9H,EAA2Cre,EAA3Cqe,UAASoK,EAAkCzoB,EAAhCue,SAAAA,OAAQ,IAAAkK,EAAG,IAAGA,EAAElT,EAAgBvV,EAAhBuV,KAAMkJ,EAAUze,EAAVye,MAIvC,GAlCkC,SAAC+J,EAAWxoB,GAAO,MAAsB,WAAjBA,EAAQtF,MACpD,oBAAd8tB,IACCzT,GAAuB/U,EAAQuV,KAAK,CAgCjCmT,CAA8BF,EAAWxoB,GAAU,CAanD,IAZA,IAAM2oB,EAAkBhE,GAAY3uB,EAAAA,EAAC,CAAC,EAC/BgK,GAAO,IACVwlB,OAAQ,EACRN,MAAO,KAEPplB,EAAQ,CAAE8e,MAAM,EAAO5mB,MAAOqmB,EAAU,IACtCuK,EAAwB,GAK1BrS,EAAI,GACAzW,EAAM8e,MAAQrI,EAhDV,KAiDRzW,EAAQ6oB,EAAgBN,OAAO9R,GAC/BqS,EAAsB54B,KAAK8P,EAAM9H,OACjCue,GAxDQ,GA0DZkI,OAAQnrB,EACR+qB,EAAYuK,EACZrK,EAAWhI,EA5DC,GA6DZhB,EAAO,QACX,CACA,IAAMxhB,ECpFV,SAAsBkS,EAASuiB,EAAWnK,GAAwF,IAAA5oB,EAAApF,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAAC40B,EAAAxvB,EAAzEyvB,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAE1G,EAAQ9oB,EAAR8oB,SAAQgH,EAAA9vB,EAAE+vB,OAAAA,OAAM,IAAAD,EAAG,EAACA,EAAAI,EAAAlwB,EAAEmwB,WAAAA,OAAU,IAAAD,EAAG,OAAMA,EAAEpQ,EAAI9f,EAAJ8f,KAAMkJ,EAAKhpB,EAALgpB,MACzGoK,GAAe/P,EAAAA,EAAAA,GAAA,GAAM0P,EAAYnK,GACnCI,IACAoK,EAAgBxlB,OAASob,GAC7B,IAAM3J,EAASiB,GAAwBR,GAMvC,OAFIpjB,MAAMC,QAAQ0iB,KACd+T,EAAgB/T,OAASA,GACtB7O,EAAQrT,QAAQi2B,EAAiB,CACpC3D,MAAAA,EACA3G,SAAAA,EACAzJ,OAAS3iB,MAAMC,QAAQ0iB,GAAmB,SAATA,EACjCgU,KAAM,OACNC,WAAYvD,EAAS,EACrBwD,UAA0B,YAAfpD,EAA2B,YAAc,UAE5D,CDkEsBqD,CAAajxB,EAAMkxB,MAAMp0B,QAAS0zB,EAAWnK,EAASroB,EAAAA,EAAA,GACjEgK,GAAO,IACVue,SAAAA,EASAhJ,KAAMA,EACNkJ,MAAAA,KAEE0K,EAAkB,WAAH,OAASp1B,EAAU+Y,QAAQ,EAC1Csc,EAAa,WACfhc,GAAKhW,OAAO+xB,GACZvE,IACAuB,GACJ,EAiBA,OARApyB,EAAUs1B,SAAW,WACjBrxB,EAAMiB,IEnHd,SAA0BolB,EAAS5oB,GAAmC,IAA/B+vB,EAAM/vB,EAAN+vB,OAAMG,EAAAlwB,EAAEmwB,WAI3C,OAAOvH,EAHOmH,GAAyB,eADc,IAAAG,EAAG,OAAMA,IACbH,EAAS,IAAM,EAC1D,EACAnH,EAAU/tB,OAAS,EAE7B,CF8GkBg5B,CAAiBjL,EAAWre,IACtC+lB,GAAcA,IACdqD,GACJ,EAIO,CACHtB,KAAI,SAACzB,EAAS0B,GACV,OAAOlD,EAAuBiD,KAAKzB,EAAS0B,EAChD,EACIC,WACA,OAAOtT,GAAsB3gB,EAAUgzB,aAAe,EAC1D,EACIiB,SAAKC,GACLl0B,EAAUgzB,YAAcvS,GAAsByT,EAClD,EACIhC,YACA,OAAOlyB,EAAUw1B,YACrB,EACItD,UAAMiC,GACNn0B,EAAUw1B,aAAerB,CAC7B,EACI3J,eACA,OAAO7J,GAAsB6J,EACjC,EACAqJ,KAAM,WACE1B,IAEJnyB,EAAU6zB,OAIVpa,GAAWpW,OAAO+xB,GACtB,EACAhB,MAAO,kBAAMp0B,EAAUo0B,OAAO,EAC9BlE,KAAM,WAEF,GADAiC,GAAa,EACe,SAAxBnyB,EAAU0yB,UAAd,CAUA,IAAQM,EAAgBhzB,EAAhBgzB,YACR,GAAIA,EAAa,CACb,IAAM4B,EAAkBhE,GAAY3uB,EAAAA,EAAC,CAAC,EAC/BgK,GAAO,IACVglB,UAAU,KAEdhtB,EAAMwxB,gBAAgBb,EAAgBN,OAAOtB,EAlJzC,IAkJoE/uB,MAAO2wB,EAAgBN,OAAOtB,GAAa/uB,MAlJ/G,GAmJR,CACAoxB,GAjBU,CAkBd,EACAhB,SAAU,kBAAMr0B,EAAU2zB,QAAQ,EAClC5a,OAAQsc,EAEhB,CG9KA,IAAMK,GAAoB,CACtB/uB,KAAM,SACNqmB,UAAW,IACXC,QAAS,GACTO,UAAW,IAQTmI,GAAsB,CACxBhvB,KAAM,YACN6jB,SAAU,IAMRhJ,GAAO,CACT7a,KAAM,YACN6a,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBgJ,SAAU,IAERoL,GAAuB,SAACC,EAAQn0B,GAAoB,IAAhB4oB,EAAS5oB,EAAT4oB,UACtC,OAAIA,EAAU/tB,OAAS,EACZo5B,GAEFjwB,EAAeT,IAAI4wB,GACjBA,EAAShwB,WAAW,SAxBS,CACxCc,KAAM,SACNqmB,UAAW,IACXC,QAAoB,IAsBa3C,EAAU,GAtBnB,EAAItjB,KAAKyf,KAAK,KAAO,GAC7C+G,UAAW,IAsBDkI,GAEHlU,EACX,EC1BMsU,GAAe,SAACp5B,EAAKuH,GAEvB,MAAY,WAARvH,MAKiB,kBAAVuH,IAAsB7F,MAAMC,QAAQ4F,OAE1B,kBAAVA,IACPgkB,GAAQ1iB,KAAKtB,IACZA,EAAM4B,WAAW,SAK1B,ECrBMkwB,GAAc,IAAIpwB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASqwB,GAAmB73B,GACxB,IAAA83B,EAAsB93B,EAAE+3B,MAAM,GAAI,GAAGluB,MAAM,KAAImuB,GAAA/U,EAAAA,GAAAA,GAAA6U,EAAA,GAAxCl3B,EAAIo3B,EAAA,GAAElyB,EAAKkyB,EAAA,GAClB,GAAa,gBAATp3B,EACA,OAAOZ,EACX,IAAAuD,EAAiBuC,EAAM4gB,MAAMpd,IAAe,GAArCR,GAAuCma,EAAAA,GAAAA,GAAA1f,EAAA,GAAjC,GACb,IAAKuF,EACD,OAAO9I,EACX,IAAM2J,EAAO7D,EAAM+N,QAAQ/K,EAAQ,IAC/BmvB,EAAeL,GAAY9wB,IAAIlG,GAAQ,EAAI,EAG/C,OAFIkI,IAAWhD,IACXmyB,GAAgB,KACbr3B,EAAO,IAAMq3B,EAAetuB,EAAO,GAC9C,CACA,IAAMuuB,GAAgB,oBAChBx6B,GAAMoG,EAAAA,EAAA,GACLgmB,IAAO,IACVG,kBAAmB,SAACjqB,GAChB,IAAMm4B,EAAYn4B,EAAE0mB,MAAMwR,IAC1B,OAAOC,EAAYA,EAAUrU,IAAI+T,IAAoBl2B,KAAK,KAAO3B,CACrE,ICnBEo4B,GAAiBt0B,EAAAA,EAAA,GAChBuG,IAAgB,IAEnByd,MAAAA,GACAuQ,gBAAiBvQ,GACjBwQ,aAAcxQ,GACd8O,KAAM9O,GACNyQ,OAAQzQ,GAER0Q,YAAa1Q,GACb2Q,eAAgB3Q,GAChB4Q,iBAAkB5Q,GAClB6Q,kBAAmB7Q,GACnB8Q,gBAAiB9Q,GACjBpqB,OAAAA,GACAm7B,aAAcn7B,KAKZo7B,GAAsB,SAACv6B,GAAG,OAAK65B,GAAkB75B,EAAI,ECvB3D,SAAS0rB,GAAkB1rB,EAAKuH,GAC5B,IAAIizB,EAAmBD,GAAoBv6B,GAI3C,OAHIw6B,IAAqBr7B,KACrBq7B,EAAmBjP,IAEhBiP,EAAiB9O,kBAClB8O,EAAiB9O,kBAAkBnkB,QACnC1E,CACV,C,kICFA,SAAS43B,GAAOlzB,GACZ,OAAkB,IAAVA,GACc,kBAAVA,GACkB,IAAtBkD,WAAWlD,KACa,IAAxBA,EAAMqB,QAAQ,IAC1B,CACA,SAAS8xB,GAAYC,GACjB,MAAoC,kBAAtBA,EACR,EACAjP,GAAkB,GAAIiP,EAChC,CACA,SAASC,GAAmB3iB,EAAYjY,GACpC,OAAOiY,EAAWjY,IAAQiY,EAAoB,SAAKA,CACvD,C,eClBA,SAAS4iB,GAAatzB,EAAOwwB,EAAWr4B,EAAQuY,GAC5C,IAAM6iB,EAAqB1B,GAAarB,EAAWr4B,GAC/CiT,OAA6B9P,IAApBoV,EAAWuR,KAAqBvR,EAAWuR,KAAOjiB,EAAMc,MAmBrE,MAlBe,SAAXsK,GAAqBmoB,GAAwC,kBAAXp7B,EAKlDiT,EAAS+Y,GAAkBqM,EAAWr4B,GAEjC+6B,GAAO9nB,IAA6B,kBAAXjT,EAC9BiT,EAAS+nB,GAAYh7B,IAEfgC,MAAMC,QAAQjC,IACpB+6B,GAAO/6B,IACW,kBAAXiT,IACPjT,EAASg7B,GAAY/nB,IAKrBjR,MAAMC,QAAQjC,GC1BtB,SAA+BiT,EAAM3N,GAIjC,IAJmD,IAAZ4oB,GAAYmN,EAAAA,GAAAA,GAAA/1B,GAAHw0B,MAAA,GAIvC75B,EAAI,EAAGA,EAAIiuB,EAAU/tB,OAAQF,IACb,OAAjBiuB,EAAUjuB,KACViuB,EAAUjuB,GAAW,IAANA,EAAUgT,EAASib,EAAUjuB,EAAI,IAGxD,OAAOiuB,CACX,CDiBeoN,CAAsBroB,EAAQjT,GAG9B,CAACiT,EAAQjT,EAExB,CErBA,IAAMu7B,GAAqB,SAAClD,EAAWxwB,EAAO7H,GAA4B,IAApBuY,EAAUrY,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChE,OAAO,SAAC01B,GACJ,IAAM4F,EAAkBN,GAAmB3iB,EAAY8f,IAAc,CAAC,EAMhEtD,EAAQyG,EAAgBzG,OAASxc,EAAWwc,OAAS,EAK3D0G,EAAsBljB,EAAhBye,QAAAA,OAAO,IAAAyE,EAAG,EAACA,EACjBzE,GAAoB3S,GAAsB0Q,GAC1C,IAAM7G,EAAYiN,GAAatzB,EAAOwwB,EAAWr4B,EAAQw7B,GAMnDE,EAAiBxN,EAAU,GAC3ByN,EAAiBzN,EAAUA,EAAU/tB,OAAS,GAC9Cy7B,EAAqBlC,GAAarB,EAAWqD,GAC7CN,EAAqB1B,GAAarB,EAAWsD,GACnDxX,GAAQyX,IAAuBR,EAAoB,6BAAF94B,OAA+B+1B,EAAS,WAAA/1B,OAAUo5B,EAAc,UAAAp5B,OAASq5B,EAAc,OAAAr5B,OAAMo5B,EAAc,+DAAAp5B,OAA8Do5B,EAAc,8BAAAp5B,OAA6Bq5B,EAAc,+BACnR,IAAI9rB,EAAOhK,EAAAA,EAAA,CACPqoB,UAAAA,EACAjK,SAAUpc,EAAM8B,cAChByb,KAAM,WACHoW,GAAe,IAClBzG,OAAQiC,EACRnB,SAAU,SAAC9zB,GACP8F,EAAMiB,IAAI/G,GACVy5B,EAAgB3F,UAAY2F,EAAgB3F,SAAS9zB,EACzD,EACA6zB,WAAY,WACRA,IACA4F,EAAgB5F,YAAc4F,EAAgB5F,YAClD,IAuBJ,GHlER,SAA4BtwB,GAAOA,EAAJu2B,KAAmBv2B,EAAbyvB,MAA4BzvB,EAAbw2B,cAA8Bx2B,EAAfy2B,gBAAiCz2B,EAAhB02B,iBAAwB12B,EAAN+vB,OAAkB/vB,EAAVmwB,WAAuBnwB,EAAXiwB,YAAiBjwB,EAAJwkB,KAAaxkB,EAAP0xB,QAA0B,IAAdze,EAAU5F,GAAArN,EAAAyO,IAC/J,QAASzU,OAAOD,KAAKkZ,GAAYpY,MACrC,CG+Ca87B,CAAoBT,KACrB3rB,EAAOhK,EAAAA,EAAA,GACAgK,GACA2pB,GAAqBnB,EAAWxoB,KAQvCA,EAAQue,WACRve,EAAQue,SAAW/J,GAAsBxU,EAAQue,WAEjDve,EAAQ0lB,cACR1lB,EAAQ0lB,YAAclR,GAAsBxU,EAAQ0lB,eAEnDqG,IACAR,GACD3W,KACyB,IAAzB+W,EAAgBjxB,KAKhB,OC9EZ,SAA+BjF,GAA8C,IAA3C4oB,EAAS5oB,EAAT4oB,UAAW6G,EAAKzvB,EAALyvB,MAAOc,EAAQvwB,EAARuwB,SAAUD,EAAUtwB,EAAVswB,WACpDsG,EAAW,WAUb,OATArG,GAAYA,EAAS3H,EAAUA,EAAU/tB,OAAS,IAClDy1B,GAAcA,IAQP,CACHiC,KAAM,EACN/B,MAAO,EACP1H,SAAU,EACVqJ,KAAOxY,GACP+Y,MAAQ/Y,GACR6U,KAAO7U,GACP0Y,KAAM,SAACzB,GAEH,OADAA,IACOD,QAAQC,SACnB,EACAvZ,OAASsC,GACTgZ,SAAWhZ,GAEnB,EACA,OAAO8V,EACDP,GAAa,CACXtG,UAAW,CAAC,EAAG,GACfE,SAAU,EACV2G,MAAAA,EACAa,WAAYsG,IAEdA,GACV,CD4CmBC,CAAuBtsB,GAKlC,GAAIhI,EAAMkxB,OACNlxB,EAAMkxB,MAAMp0B,mBAAmBy3B,cAC9Bv0B,EAAMkxB,MAAMhb,WAAW8X,SAAU,CAClC,IAAMwG,EAAuBjE,GAA2BvwB,EAAOwwB,EAAWxoB,GAC1E,GAAIwsB,EACA,OAAOA,CACf,CAIA,OAAO7H,GAAa3kB,EACxB,CACJ,EEhGA,SAASysB,GAAwBz0B,GAC7B,OAAOhF,QAAQ6G,EAAc7B,IAAUA,EAAM6U,IACjD,CCDA,ICAM6f,GAAoB,SAACx6B,GAAC,MAAK,aAAaoH,KAAKpH,EAAE,ECHrD,SAASy6B,GAAc1O,EAAK2O,IACG,IAAvB3O,EAAI5kB,QAAQuzB,IACZ3O,EAAIjuB,KAAK48B,EACjB,CACA,SAASC,GAAW5O,EAAK2O,GACrB,IAAM7f,EAAQkR,EAAI5kB,QAAQuzB,GACtB7f,GAAS,GACTkR,EAAIjR,OAAOD,EAAO,EAC1B,CCRwD,IAElD+f,GAAmB,WACrB,SAAAA,KAAczhB,EAAAA,GAAAA,GAAA,KAAAyhB,GACVxhB,KAAKyhB,cAAgB,EACzB,CA+BC,OA/BAvhB,EAAAA,GAAAA,GAAAshB,EAAA,EAAAr8B,IAAA,MAAAuH,MACD,SAAIoR,GAAS,IAAAuF,EAAA,KAET,OADAge,GAAcrhB,KAAKyhB,cAAe3jB,GAC3B,kBAAMyjB,GAAWle,EAAKoe,cAAe3jB,EAAQ,CACxD,GAAC,CAAA3Y,IAAA,SAAAuH,MACD,SAAOmS,EAAGC,EAAGgL,GACT,IAAM4X,EAAmB1hB,KAAKyhB,cAAcz8B,OAC5C,GAAK08B,EAEL,GAAyB,IAArBA,EAIA1hB,KAAKyhB,cAAc,GAAG5iB,EAAGC,EAAGgL,QAG5B,IAAK,IAAIhlB,EAAI,EAAGA,EAAI48B,EAAkB58B,IAAK,CAKvC,IAAMgZ,EAAUkC,KAAKyhB,cAAc38B,GACnCgZ,GAAWA,EAAQe,EAAGC,EAAGgL,EAC7B,CAER,GAAC,CAAA3kB,IAAA,UAAAuH,MACD,WACI,OAAOsT,KAAKyhB,cAAcz8B,MAC9B,GAAC,CAAAG,IAAA,QAAAuH,MACD,WACIsT,KAAKyhB,cAAcz8B,OAAS,CAChC,KAACw8B,CAAA,CAlCoB,GCYnBG,GAAW,WASb,SAAAA,EAAYr4B,GAAoB,IAjBnBoD,EAiBmB2W,EAAA,KAAd3O,EAAO3P,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,CAAC,GAACgb,EAAAA,GAAAA,GAAA,KAAA4hB,GAK1B3hB,KAAK4hB,QAAU,UAMf5hB,KAAK6hB,UAAY,EAMjB7hB,KAAK8hB,YAAc,EAQnB9hB,KAAK+hB,kBAAmB,EAIxB/hB,KAAKgiB,OAAS,CAAC,EACfhiB,KAAKiiB,gBAAkB,SAACr7B,GAAqB,IAAlBmF,IAAMhH,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,KAAAA,UAAA,GAC7Bse,EAAKqF,KAAOrF,EAAK7Z,QACjB6Z,EAAK7Z,QAAU5C,EAEf,IAAQwZ,EAAqBD,GAAAA,MAAdE,EAAcF,GAAAA,UACzBkD,EAAKye,cAAgBzhB,IACrBgD,EAAKwe,UAAYzhB,EACjBiD,EAAKye,YAAczhB,EACnByB,GAAKogB,WAAW7e,EAAK8e,wBAGrB9e,EAAKqF,OAASrF,EAAK7Z,SAAW6Z,EAAK2e,OAAOI,QAC1C/e,EAAK2e,OAAOI,OAAOC,OAAOhf,EAAK7Z,SAG/B6Z,EAAK2e,OAAOM,gBACZjf,EAAK2e,OAAOM,eAAeD,OAAOhf,EAAK7U,eAGvCzC,GAAUsX,EAAK2e,OAAOO,eACtBlf,EAAK2e,OAAOO,cAAcF,OAAOhf,EAAK7Z,QAE9C,EASAwW,KAAKmiB,sBAAwB,kBAAMrgB,GAAKogB,WAAW7e,EAAKmf,cAAc,EAUtExiB,KAAKwiB,cAAgB,SAAAr4B,GAAYA,EAATkW,YACFgD,EAAKye,cACnBze,EAAKqF,KAAOrF,EAAK7Z,QACb6Z,EAAK2e,OAAOM,gBACZjf,EAAK2e,OAAOM,eAAeD,OAAOhf,EAAK7U,eAGnD,EACAwR,KAAKyiB,aAAc,EACnBziB,KAAK0I,KAAO1I,KAAKxW,QAAUF,EAC3B0W,KAAK+hB,kBAlGIr1B,EAkGuBsT,KAAKxW,SAjGjConB,MAAMhhB,WAAWlD,KAkGrBsT,KAAK4d,MAAQlpB,EAAQkpB,KACzB,CA2NC,OA1ND1d,EAAAA,GAAAA,GAAAyhB,EAAA,EAAAx8B,IAAA,WAAAuH,MAwCA,SAASg2B,GAIL,OAAO1iB,KAAK2iB,GAAG,SAAUD,EAC7B,GAAC,CAAAv9B,IAAA,KAAAuH,MACD,SAAGmR,EAAWuD,GAAU,IAAAoC,EAAA,KACfxD,KAAKgiB,OAAOnkB,KACbmC,KAAKgiB,OAAOnkB,GAAa,IAAI2jB,IAEjC,IAAMoB,EAAc5iB,KAAKgiB,OAAOnkB,GAAW0D,IAAIH,GAC/C,MAAkB,WAAdvD,EACO,WACH+kB,IAKA9gB,GAAK+gB,MAAK,WACDrf,EAAKwe,OAAOI,OAAOU,WACpBtf,EAAKmV,MAEb,GACJ,EAEGiK,CACX,GAAC,CAAAz9B,IAAA,iBAAAuH,MACD,WACI,IAAK,IAAMq2B,KAAiB/iB,KAAKgiB,OAC7BhiB,KAAKgiB,OAAOe,GAAeC,OAEnC,GACA,CAAA79B,IAAA,SAAAuH,MAKA,SAAOu2B,EAAeC,GAClBljB,KAAKijB,cAAgBA,EACrBjjB,KAAKkjB,kBAAoBA,CAC7B,GACA,CAAA/9B,IAAA,MAAAuH,MAeA,SAAI9F,GAAkB,IAAfmF,IAAMhH,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,KAAAA,UAAA,GACJgH,GAAWiU,KAAKijB,cAIjBjjB,KAAKijB,cAAcr8B,EAAGoZ,KAAKiiB,iBAH3BjiB,KAAKiiB,gBAAgBr7B,EAAGmF,EAKhC,GAAC,CAAA5G,IAAA,kBAAAuH,MACD,SAAgBgc,EAAMlf,EAAS4W,GAC3BJ,KAAKrS,IAAInE,GACTwW,KAAK0I,KAAOA,EACZ1I,KAAK6hB,UAAYzhB,CACrB,GACA,CAAAjb,IAAA,OAAAuH,MAIA,SAAK9F,GACDoZ,KAAKiiB,gBAAgBr7B,GACrBoZ,KAAK0I,KAAO9hB,EACZoZ,KAAK2Y,OACD3Y,KAAKkjB,mBACLljB,KAAKkjB,mBACb,GACA,CAAA/9B,IAAA,MAAAuH,MAOA,WACI,OAAOsT,KAAKxW,OAChB,GACA,CAAArE,IAAA,cAAAuH,MAGA,WACI,OAAOsT,KAAK0I,IAChB,GACA,CAAAvjB,IAAA,cAAAuH,MAOA,WAEI,OAAOsT,KAAK+hB,iBAEJnO,GAAkBhkB,WAAWoQ,KAAKxW,SAC9BoG,WAAWoQ,KAAK0I,MAAO1I,KAAK6hB,WAClC,CACV,GACA,CAAA18B,IAAA,QAAAuH,MAYA,SAAMy2B,GAAgB,IAAAC,EAAA,KAElB,OADApjB,KAAK2Y,OACE,IAAImC,SAAQ,SAACC,GAChBqI,EAAKX,aAAc,EACnBW,EAAK36B,UAAY06B,EAAepI,GAC5BqI,EAAKpB,OAAOqB,gBACZD,EAAKpB,OAAOqB,eAAehB,QAEnC,IAAG7F,MAAK,WACA4G,EAAKpB,OAAOsB,mBACZF,EAAKpB,OAAOsB,kBAAkBjB,SAElCe,EAAKG,gBACT,GACJ,GACA,CAAAp+B,IAAA,OAAAuH,MAKA,WACQsT,KAAKvX,YACLuX,KAAKvX,UAAUkwB,OACX3Y,KAAKgiB,OAAOwB,iBACZxjB,KAAKgiB,OAAOwB,gBAAgBnB,UAGpCriB,KAAKujB,gBACT,GACA,CAAAp+B,IAAA,cAAAuH,MAKA,WACI,QAASsT,KAAKvX,SAClB,GAAC,CAAAtD,IAAA,iBAAAuH,MACD,kBACWsT,KAAKvX,SAChB,GACA,CAAAtD,IAAA,UAAAuH,MASA,WACIsT,KAAKyjB,iBACLzjB,KAAK2Y,OACD3Y,KAAKkjB,mBACLljB,KAAKkjB,mBAEb,KAACvB,CAAA,CAvTY,GAyTjB,SAAS+B,GAAYp6B,EAAMoL,GACvB,OAAO,IAAIitB,GAAYr4B,EAAMoL,EACjC,CCtUA,IAAMivB,GAAgB,SAAC/8B,GAAC,OAAK,SAACwI,GAAI,OAAKA,EAAKpB,KAAKpH,EAAE,GCK7Cg9B,GAAsB,CAACl0B,EAAQkB,GAAID,GAASD,GAASI,GAAID,GCLlD,CACT7C,KAAM,SAACpH,GAAC,MAAW,SAANA,CAAY,EACzB+I,MAAO,SAAC/I,GAAC,OAAKA,CAAC,IDObi9B,GAAyB,SAACj9B,GAAC,OAAKg9B,GAAoBvU,KAAKsU,GAAc/8B,GAAG,EEJ1Ek9B,GAAa,GAAH38B,QAAA+oB,EAAAA,GAAAA,GAAO0T,IAAmB,CAAElV,GAAOgC,KAI7CqT,GAAgB,SAACn9B,GAAC,OAAKk9B,GAAWzU,KAAKsU,GAAc/8B,GAAG,E,kCCC9D,SAASo9B,GAAe34B,EAAelG,EAAKuH,GACpCrB,EAAc44B,SAAS9+B,GACvBkG,EAAc64B,SAAS/+B,GAAKwI,IAAIjB,GAGhCrB,EAAc84B,SAASh/B,EAAKu+B,GAAYh3B,GAEhD,CACA,SAAS03B,GAAU/4B,EAAesQ,GAC9B,IAAMuB,EAAW0L,GAAevd,EAAesQ,GAC/CxR,EAAyD+S,EAAW7R,EAAcg5B,qBAAqBnnB,GAAU,GAAS,CAAC,EAAConB,EAAAn6B,EAAtHgT,cAAAA,OAAa,IAAAmnB,EAAG,CAAC,EAACA,EAAsBz/B,GAAtBsF,EAAEiT,WAA0B5F,GAAArN,EAAAyO,KAEpD,IAAK,IAAMzT,KADXN,EAAM6F,EAAAA,EAAA,GAAQ7F,GAAWsY,GACC,CAEtB6mB,GAAe34B,EAAelG,EADhB+W,GAA6BrX,EAAOM,IAEtD,CACJ,CAuEA,SAASo/B,GAAwBp/B,EAAKiY,GAClC,GAAKA,EAGL,OADwBA,EAAWjY,IAAQiY,EAAoB,SAAKA,GAC7CuR,IAC3B,C,sCCvFA,SAAS6V,GAAcn5B,EAAesQ,GAA0D,IAAA3O,EAAAjI,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAAC0/B,EAAAz3B,EAA1C4sB,MAAAA,OAAK,IAAA6K,EAAG,EAACA,EAAEC,EAAkB13B,EAAlB03B,mBAAoBt1B,EAAIpC,EAAJoC,KAC/Eu1B,EAAsFt5B,EAAcg5B,qBAAqB1oB,GAAWipB,EAAAD,EAA9HvnB,WAAAA,OAAU,IAAAwnB,EAAGv5B,EAAcgzB,uBAAsBuG,EAAEznB,EAAawnB,EAAbxnB,cAAkBtY,EAAM2S,GAAAmtB,EAAA/rB,IAC3EisB,EAAax5B,EAAc64B,SAAS,cACtCQ,IACAtnB,EAAasnB,GACjB,IAAMI,EAAa,GACbC,EAAqB31B,GACvB/D,EAAcc,gBACdd,EAAcc,eAAe64B,WAAW51B,GAAMjG,EAAA,SAAAhE,GAE9C,IAAMuH,EAAQrB,EAAc64B,SAAS/+B,GAC/BkY,EAAcxY,EAAOM,GAC3B,IAAKuH,QACe1E,IAAhBqV,GACC0nB,GAnBb,SAA6B56B,EAAoChF,GAAK,IAAtC8/B,EAAa96B,EAAb86B,cAAeC,EAAc/6B,EAAd+6B,eACrCC,EAAcF,EAAcx+B,eAAetB,KAAgC,IAAxB+/B,EAAe//B,GAExE,OADA+/B,EAAe//B,IAAO,EACfggC,CACX,CAgBgBC,CAAqBL,EAAoB5/B,GAAO,iBAGxD,IAAMk7B,EAAe31B,EAAA,CAAKkvB,MAAAA,EAAOiC,QAAS,GAAMze,GAKhD,GAAInR,OAAOC,0BAA4BQ,EAAM+1B,YAAa,CACtD,IAAM4C,EAAWh6B,EAAcuX,WAAWmG,IACtCsc,IACAhF,EAAgBxE,QAAU5vB,OAAOC,wBAAwBm5B,EAAUlgC,EAAKuH,EAAOoV,IAEvF,CACApV,EAAM1F,MAAMo5B,GAAmBj7B,EAAKuH,EAAO2Q,EAAahS,EAAci6B,oBAAsBn3B,EAAeT,IAAIvI,GACzG,CAAEiK,MAAM,GACRixB,IACN,IAAM53B,EAAYiE,EAAMjE,UACpB04B,GAAwB0D,KACxBA,EAAWtjB,IAAIpc,GACfsD,EAAU+zB,MAAK,kBAAMqI,EAAWU,OAAOpgC,EAAI,KAE/C2/B,EAAWpgC,KAAK+D,EACpB,EA7BA,IAAK,IAAMtD,KAAON,EAAMsE,EAAAhE,GAmCxB,OALIgY,GACA2d,QAAQ7T,IAAI6d,GAAYtI,MAAK,WACzBrf,GAAiBinB,GAAU/4B,EAAe8R,EAC9C,IAEG2nB,CACX,CC5DA,SAASU,GAAen6B,EAAeo6B,GAAuB,IAAd/wB,EAAO3P,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjDmY,EAAW0L,GAAevd,EAAeo6B,EAAS/wB,EAAQtH,QACgBs4B,GAAdxoB,GAAY,CAAC,GAAzEE,WAAAA,OAAU,IAAAsoB,EAAGr6B,EAAcgzB,wBAA0B,CAAC,EAACqH,EACzDhxB,EAAQgwB,qBACRtnB,EAAa1I,EAAQgwB,oBAMzB,IAAMiB,EAAezoB,EACf,kBAAM4d,QAAQ7T,IAAIud,GAAcn5B,EAAe6R,EAAUxI,GAAS,EAClE,kBAAMomB,QAAQC,SAAS,EAKvB6K,EAAqBv6B,EAAcw6B,iBAAmBx6B,EAAcw6B,gBAAgB5zB,KACpF,WAAsB,IAArB6zB,EAAY/gC,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,EACdghC,EAAkE3oB,EAAU4oB,EAAAD,EAApEpF,cAAAA,OAAa,IAAAqF,EAAG,EAACA,EAAEpF,EAAemF,EAAfnF,gBAAiBC,EAAgBkF,EAAhBlF,iBAC5C,OAkBZ,SAAyBx1B,EAAeo6B,GAAgF,IAAvE9E,EAAa57B,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,EAAG67B,EAAe77B,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,EAAG87B,EAAgB97B,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,EAAG2P,EAAO3P,UAAAC,OAAA,EAAAD,UAAA,QAAAiD,EAC5G88B,EAAa,GACbmB,GAAsB56B,EAAcw6B,gBAAgB5zB,KAAO,GAAK2uB,EAChEsF,EAA+C,IAArBrF,EAC1B,WAAM,OAAJ97B,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,GAAU67B,CAAe,EAC9B,WAAM,OAAKqF,GAATlhC,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,GAA+B67B,CAAe,EAUzD,OATA/5B,MAAM8nB,KAAKtjB,EAAcw6B,iBACpBM,KAAKC,IACLlhC,SAAQ,SAAC0e,EAAO9e,GACjB8e,EAAMye,OAAO,iBAAkBoD,GAC/BX,EAAWpgC,KAAK8gC,GAAe5hB,EAAO6hB,EAAO/6B,EAAAA,EAAA,GACtCgK,GAAO,IACVklB,MAAO+G,EAAgBuF,EAAwBphC,MAChD03B,MAAK,kBAAM5Y,EAAMye,OAAO,oBAAqBoD,EAAQ,IAC5D,IACO3K,QAAQ7T,IAAI6d,EACvB,CAlCmBuB,CAAgBh7B,EAAeo6B,EAAS9E,EAAgBmF,EAAclF,EAAiBC,EAAkBnsB,EACpH,EACE,kBAAMomB,QAAQC,SAAS,EAKrB2F,EAAStjB,EAATsjB,KACR,GAAIA,EAAM,CACN,IAAA1zB,EAA+B,mBAAT0zB,EAChB,CAACiF,EAAcC,GACf,CAACA,EAAoBD,GAAaW,GAAAzc,EAAAA,GAAAA,GAAA7c,EAAA,GAFjCu5B,EAAKD,EAAA,GAAEE,EAAIF,EAAA,GAGlB,OAAOC,IAAQ/J,MAAK,kBAAMgK,GAAM,GACpC,CAEI,OAAO1L,QAAQ7T,IAAI,CAAC0e,IAAgBC,EAAmBlxB,EAAQklB,QAEvE,CAkBA,SAASwM,GAAgBvnB,EAAGC,GACxB,OAAOD,EAAE4nB,iBAAiB3nB,EAC9B,C,sCCpDM4nB,IAAuBxW,EAAAA,GAAAA,GAAIjpB,GAAsBsrB,UACjDoU,GAAoB1/B,EAAqBjC,OAC/C,SAAS4hC,GAAYv7B,GACjB,OAAO,SAACy5B,GAAU,OAAKhK,QAAQ7T,IAAI6d,EAAWpa,KAAI,SAAAvgB,GAAA,IAAG1B,EAAS0B,EAAT1B,UAAWiM,EAAOvK,EAAPuK,QAAO,OCP3E,SAA8BrJ,EAAesQ,GAA0B,IAE/DlT,EAFiDiM,EAAO3P,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFAsG,EAAcg3B,OAAO,iBAAkB1mB,GAEnC9U,MAAMC,QAAQ6U,GAAa,CAC3B,IAAMmpB,EAAanpB,EAAW+O,KAAI,SAAC+a,GAAO,OAAKD,GAAen6B,EAAeo6B,EAAS/wB,EAAQ,IAC9FjM,EAAYqyB,QAAQ7T,IAAI6d,EAC5B,MACK,GAA0B,kBAAfnpB,EACZlT,EAAY+8B,GAAen6B,EAAesQ,EAAYjH,OAErD,CACD,IAAMmyB,EAA2C,oBAAflrB,EAC5BiN,GAAevd,EAAesQ,EAAYjH,EAAQtH,QAClDuO,EACNlT,EAAYqyB,QAAQ7T,IAAIud,GAAcn5B,EAAew7B,EAAoBnyB,GAC7E,CACA,OAAOjM,EAAU+zB,MAAK,kBAAMnxB,EAAcg3B,OAAO,oBAAqB1mB,EAAW,GACrF,CDVkFmrB,CAAqBz7B,EAAe5C,EAAWiM,EAAQ,IAAE,CAC3I,CACA,SAASqyB,GAAqB17B,GAC1B,IAAI/D,EAAUs/B,GAAYv7B,GACpBmJ,EAoSC,CACHlN,QAAS0/B,IAAgB,GACzBC,YAAaD,KACbnkB,WAAYmkB,KACZ/vB,SAAU+vB,KACVE,UAAWF,KACXG,WAAYH,KACZt+B,KAAMs+B,MA1SNI,GAAkB,EAKhBC,EAA0B,SAAC1mB,EAAKhF,GAClC,IAAMuB,EAAW0L,GAAevd,EAAesQ,GAC/C,GAAIuB,EAAU,CACuCA,EAAzCE,WAAR,IAAoBD,EAA6BD,EAA7BC,cAAkBtY,EAAM2S,GAAK0F,EAAQtE,IACzD+H,EAAGjW,EAAAA,EAAAA,EAAA,GAAQiW,GAAQ9b,GAAWsY,EAClC,CACA,OAAOwD,CACX,EAkBA,SAASvU,EAAesI,EAAS4yB,GA8B7B,IA7BA,IAAMjgC,EAAQgE,EAAcuX,WACtB9a,EAAUuD,EAAck8B,mBAAkB,IAAS,CAAC,EAKpDzC,EAAa,GAKb0C,EAAc,IAAIp5B,IAMpBq5B,EAAkB,CAAC,EAKnBC,EAAsBzO,IAC1B9vB,EAAA,WAOI,IAAMiG,EAAOs3B,GAAqB5hC,GAC5B6iC,EAAYnzB,EAAMpF,GAClB9G,OAAuBN,IAAhBX,EAAM+H,GAAsB/H,EAAM+H,GAAQtH,EAAQsH,GACzDw4B,EAAgBjhC,EAAe2B,GAK/Bu/B,EAAcz4B,IAASk4B,EAAoBK,EAAUllB,SAAW,MAClD,IAAhBolB,IACAH,EAAsB5iC,GAO1B,IAAIgjC,EAAcx/B,IAASR,EAAQsH,IAAS9G,IAASjB,EAAM+H,IAASw4B,EAepE,GAXIE,GACAV,GACA/7B,EAAc08B,yBACdD,GAAc,GAMlBH,EAAU1C,cAAav6B,EAAA,GAAQ+8B,IAI7BE,EAAUllB,UAA4B,OAAhBolB,IAElBv/B,IAASq/B,EAAUK,UAErBjhC,EAAoBuB,IACJ,mBAATA,EAAoB,iBAQ/B,IAAM2/B,EAqKlB,SAAgCvf,EAAMD,GAClC,GAAoB,kBAATA,EACP,OAAOA,IAASC,EAEf,GAAI7hB,MAAMC,QAAQ2hB,GACnB,OAAQD,GAAeC,EAAMC,GAEjC,OAAO,CACX,CA7KqCwf,CAAuBP,EAAUK,SAAU1/B,GAChE6/B,EAAoBF,GAEnB74B,IAASk4B,GACNK,EAAUllB,WACTqlB,GACDF,GAEH9iC,EAAI4iC,GAAuBE,EAK1BQ,EAAiBvhC,MAAMC,QAAQwB,GAAQA,EAAO,CAACA,GAKjD+/B,EAAiBD,EAAejpB,OAAOkoB,EAAyB,CAAC,IACjD,IAAhBQ,IACAQ,EAAiB,CAAC,GAUtB,IAAAC,EAAoCX,EAA5BY,mBAAAA,OAAkB,IAAAD,EAAG,CAAC,EAACA,EACzBE,EAAO99B,EAAAA,EAAA,GACN69B,GACAF,GAEDI,EAAgB,SAACtjC,GACnBgjC,GAAoB,EACpBX,EAAY7lB,OAAOxc,GACnBwiC,EAAUzC,eAAe//B,IAAO,CACpC,EACA,IAAK,IAAMA,KAAOqjC,EAAS,CACvB,IAAM/f,EAAO4f,EAAeljC,GACtBujB,EAAO6f,EAAmBpjC,GAE5BsiC,EAAgBhhC,eAAetB,KAK/BsjB,IAASC,EAKL5M,GAAkB2M,IAAS3M,GAAkB4M,IACxCF,GAAeC,EAAMC,IAASuf,EAC/BQ,EAActjC,GAOdwiC,EAAU1C,cAAc9/B,IAAO,OAGrB6C,IAATygB,EAELggB,EAActjC,GAIdqiC,EAAYjmB,IAAIpc,QAGN6C,IAATygB,GAAsB+e,EAAY95B,IAAIvI,GAK3CsjC,EAActjC,GAOdwiC,EAAU1C,cAAc9/B,IAAO,EAEvC,CAKAwiC,EAAUK,SAAW1/B,EACrBq/B,EAAUY,mBAAqBF,EAI3BV,EAAUllB,WACVglB,EAAe/8B,EAAAA,EAAA,GAAQ+8B,GAAoBY,IAE3CjB,GAAmB/7B,EAAcO,wBACjCu8B,GAAoB,GAOpBA,IAAsBL,GACtBhD,EAAWpgC,KAAIC,MAAfmgC,GAAU5U,EAAAA,GAAAA,GAASkY,EAAe1d,KAAI,SAACjiB,GAAS,MAAM,CAClDA,UAAWA,EACXiM,QAAOhK,EAAA,CAAI0E,KAAAA,GAASsF,GACvB,KAET,EApKS5P,EAAI,EAAGA,EAAI6hC,GAAmB7hC,IAAGqE,IA0K1C,GAAIq+B,EAAYv1B,KAAM,CAClB,IAAMy2B,EAAoB,CAAC,EAC3BlB,EAAYtiC,SAAQ,SAACC,GACjB,IAAMwjC,EAAiBt9B,EAAcu9B,cAAczjC,QAC5B6C,IAAnB2gC,IACAD,EAAkBvjC,GAAOwjC,EAEjC,IACA7D,EAAWpgC,KAAK,CAAE+D,UAAWigC,GACjC,CACA,IAAIG,EAAgBnhC,QAAQo9B,EAAW9/B,QAOvC,OANIoiC,IACkB,IAAlB//B,EAAMU,UACLsD,EAAc08B,yBACfc,GAAgB,GAEpBzB,GAAkB,EACXyB,EAAgBvhC,EAAQw9B,GAAchK,QAAQC,SACzD,CAkBA,MAAO,CACH3uB,eAAAA,EACA0W,UAhBJ,SAAmB1T,EAAMqT,EAAU/N,GAC/B,IAAI6C,EAEJ,GAAI/C,EAAMpF,GAAMqT,WAAaA,EACzB,OAAOqY,QAAQC,UAEsB,QAAxCxjB,EAAKlM,EAAcw6B,uBAAoC,IAAPtuB,GAAyBA,EAAGrS,SAAQ,SAAC0e,GAAY,IAAIrM,EAAI,OAAuC,QAA/BA,EAAKqM,EAAMzX,sBAAmC,IAAPoL,OAAgB,EAASA,EAAGuL,UAAU1T,EAAMqT,EAAW,IAChNjO,EAAMpF,GAAMqT,SAAWA,EACvB,IAAMqiB,EAAa14B,EAAesI,EAAStF,GAC3C,IAAK,IAAMjK,KAAOqP,EACdA,EAAMrP,GAAK8/B,cAAgB,CAAC,EAEhC,OAAOH,CACX,EAIIgE,mBA5PJ,SAA4BC,GACxBzhC,EAAUyhC,EAAa19B,EAC3B,EA2PI25B,SAAU,kBAAMxwB,CAAK,EAE7B,CAUA,SAASwyB,KACL,MAAO,CACHvkB,SAFyB1d,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,IAAAA,UAAA,GAGzBkgC,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBqD,mBAAoB,CAAC,EAE7B,CE/SyC,IAEnCS,GAAgB,SAAAhmB,IAAAC,EAAAA,GAAAA,GAAA+lB,EAAAhmB,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAA6lB,GAMlB,SAAAA,EAAYlpB,GAAM,IAAAuD,EAE4D,OAF5DtD,EAAAA,GAAAA,GAAA,KAAAipB,GACd3lB,EAAAH,EAAAxc,KAAA,KAAMoZ,GACNA,EAAK3T,iBAAmB2T,EAAK3T,eAAiB46B,GAAqBjnB,IAAOuD,CAC9E,CAqBa,OArBZnD,EAAAA,GAAAA,GAAA8oB,EAAA,EAAA7jC,IAAA,sCAAAuH,MACD,WACI,IAAQpF,EAAY0Y,KAAKF,KAAK8C,WAAtBtb,QACR0Y,KAAKlT,UACD/F,EAAoBO,KACpB0Y,KAAKlT,QAAUxF,EAAQ2hC,UAAUjpB,KAAKF,MAE9C,GACA,CAAA3a,IAAA,QAAAuH,MAGA,WACIsT,KAAKkpB,qCACT,GAAC,CAAA/jC,IAAA,SAAAuH,MACD,WACwBsT,KAAKF,KAAK8C,WAAtBtb,WACyB0Y,KAAKF,KAAKxE,WAAa,CAAC,GAAjDhU,SAEJ0Y,KAAKkpB,qCAEb,GAAC,CAAA/jC,IAAA,UAAAuH,MACD,WAAY,KAACs8B,CAAA,CA9BK,CAASnpB,ICF3BjW,GAAK,EACHu/B,GAAoB,SAAAnmB,IAAAC,EAAAA,GAAAA,GAAAkmB,EAAAnmB,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAgmB,GACtB,SAAAA,IAAc,IAAA9lB,EAEK,OAFLtD,EAAAA,GAAAA,GAAA,KAAAopB,IACV9lB,EAAAH,EAAAve,MAAA,KAASI,YACJ6E,GAAKA,KAAKyZ,CACnB,CAoBa,OApBZnD,EAAAA,GAAAA,GAAAipB,EAAA,EAAAhkC,IAAA,SAAAuH,MACD,WAAS,IAAA8W,EAAA,KACL,GAAKxD,KAAKF,KAAKtU,gBAAf,CAEA,IAAA49B,EAA8CppB,KAAKF,KAAKtU,gBAAhD69B,EAASD,EAATC,UAAWC,EAAcF,EAAdE,eAAgBl8B,EAAMg8B,EAANh8B,OAChBm8B,GAAkBvpB,KAAKF,KAAK0pB,qBAAuB,CAAC,GAA/DH,UACR,GAAKrpB,KAAKF,KAAK3T,gBAAkBk9B,IAAcE,EAA/C,CAGA,IAAME,EAAgBzpB,KAAKF,KAAK3T,eAAe2W,UAAU,QAASumB,EAAW,CAAEj8B,OAAmB,OAAXA,QAA8B,IAAXA,EAAoBA,EAAS4S,KAAKF,KAAK8C,WAAWxV,SACxJk8B,IAAmBD,GACnBI,EAAcjN,MAAK,kBAAM8M,EAAe9lB,EAAK5Z,GAAG,GAHpD,CALU,CAUd,GAAC,CAAAzE,IAAA,QAAAuH,MACD,WACI,IAAQg9B,GAAa1pB,KAAKF,KAAKtU,iBAAmB,CAAC,GAA3Ck+B,SACJA,IACA1pB,KAAKlT,QAAU48B,EAAS1pB,KAAKpW,IAErC,GAAC,CAAAzE,IAAA,UAAAuH,MACD,WAAY,KAACy8B,CAAA,CAxBS,CAAStpB,ICA7BilB,GAAa,CACfr8B,UAAW,CACPoX,QAASmpB,IAEbtgC,KAAM,CACFmX,QAASspB,KCRXz1B,GAAW,SAACmL,EAAGC,GAAC,OAAKrP,KAAKwc,IAAIpN,EAAIC,EAAE,ECS1C,IAGM6qB,GAAU,WACZ,SAAAA,EAAYxrB,EAAOyrB,GAAuC,IAAAvmB,EAAA,KAA3B5d,GAA2BV,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAJ,CAAC,GAAxBU,mBA0D3B,IA1D6Csa,EAAAA,GAAAA,GAAA,KAAA4pB,GAI7C3pB,KAAKwE,WAAa,KAIlBxE,KAAK6pB,cAAgB,KAIrB7pB,KAAK8pB,kBAAoB,KAIzB9pB,KAAK4pB,SAAW,CAAC,EACjB5pB,KAAK+pB,YAAc,WACf,GAAM1mB,EAAKwmB,eAAiBxmB,EAAKymB,kBAAjC,CAEA,IAAMnnB,EAAOqnB,GAAW3mB,EAAKymB,kBAAmBzmB,EAAK4mB,SAC/CC,EAAmC,OAApB7mB,EAAKmB,WAIpB2lB,EDrClB,SAAoBtrB,EAAGC,GAEnB,IAAMsrB,EAAS12B,GAASmL,EAAEnQ,EAAGoQ,EAAEpQ,GACzB27B,EAAS32B,GAASmL,EAAElQ,EAAGmQ,EAAEnQ,GAC/B,OAAOc,KAAKyf,KAAKzf,KAAAmd,IAAAwd,EAAU,GAAC36B,KAAAmd,IAAGyd,EAAU,GAC7C,CCgC4CC,CAAW3nB,EAAK5K,OAAQ,CAAErJ,EAAG,EAAGC,EAAG,KAAQ,EAC3E,GAAKu7B,GAAiBC,EAAtB,CAEA,IAAQ1rB,EAAUkE,EAAVlE,MACA4B,EAAcF,GAAAA,UACtBkD,EAAK4mB,QAAQvlC,KAAIgG,EAAAA,EAAC,CAAC,EAAI+T,GAAK,IAAE4B,UAAAA,KAC9B,IAAAkqB,EAA4BlnB,EAAKumB,SAAzBY,EAAOD,EAAPC,QAASC,EAAMF,EAANE,OACZP,IACDM,GAAWA,EAAQnnB,EAAKwmB,cAAelnB,GACvCU,EAAKmB,WAAanB,EAAKwmB,eAE3BY,GAAUA,EAAOpnB,EAAKwmB,cAAelnB,EAT3B,CARA,CAkBd,EACA3C,KAAK0qB,kBAAoB,SAACvsB,EAAOwE,GAC7BU,EAAKwmB,cAAgB1rB,EACrBkF,EAAKymB,kBAAoBa,GAAehoB,EAAMU,EAAK5d,oBAEnDqc,GAAKhW,OAAOuX,EAAK0mB,aAAa,EAClC,EACA/pB,KAAK4qB,gBAAkB,SAACzsB,EAAOwE,GAE3B,GADAU,EAAKwnB,MACCxnB,EAAKwmB,eAAiBxmB,EAAKymB,kBAAjC,CAEA,IAAAgB,EAAgCznB,EAAKumB,SAA7BmB,EAAKD,EAALC,MAAOC,EAAYF,EAAZE,aACTC,EAAUjB,GAA0B,kBAAf7rB,EAAM/O,KAC3BiU,EAAKymB,kBACLa,GAAehoB,EAAMU,EAAK5d,oBAAqB4d,EAAK4mB,SACtD5mB,EAAKmB,YAAcumB,GACnBA,EAAM5sB,EAAO8sB,GAEjBD,GAAgBA,EAAa7sB,EAAO8sB,EAR1B,CASd,EAEK/sB,GAAiBC,GAAtB,CAEA6B,KAAK4pB,SAAWA,EAChB5pB,KAAKva,mBAAqBA,EAC1B,IACMylC,EAAcP,GADPpsB,GAAiBJ,GACW6B,KAAKva,oBACtCgZ,EAAUysB,EAAVzsB,MACA4B,EAAcF,GAAAA,UACtBH,KAAKiqB,QAAU,CAAAv/B,EAAAA,EAAA,GAAM+T,GAAK,IAAE4B,UAAAA,KAC5B,IAAQ8qB,EAAmBvB,EAAnBuB,eACRA,GACIA,EAAehtB,EAAO6rB,GAAWkB,EAAalrB,KAAKiqB,UACvDjqB,KAAKorB,gBAAkBrsB,GAAKJ,GAAgB1S,OAAQ,cAAe+T,KAAK0qB,mBAAoB/rB,GAAgB1S,OAAQ,YAAa+T,KAAK4qB,iBAAkBjsB,GAAgB1S,OAAQ,gBAAiB+T,KAAK4qB,iBAX5L,CAYd,CAOC,OAPA1qB,EAAAA,GAAAA,GAAAypB,EAAA,EAAAxkC,IAAA,iBAAAuH,MACD,SAAek9B,GACX5pB,KAAK4pB,SAAWA,CACpB,GAAC,CAAAzkC,IAAA,MAAAuH,MACD,WACIsT,KAAKorB,iBAAmBprB,KAAKorB,kBAC7BlpB,GAAWpW,OAAOkU,KAAK+pB,YAC3B,KAACJ,CAAA,CA/EW,GAiFhB,SAASgB,GAAehoB,EAAMld,GAC1B,OAAOA,EAAqB,CAAEgZ,MAAOhZ,EAAmBkd,EAAKlE,QAAWkE,CAC5E,CACA,SAAS0oB,GAAcxsB,EAAGC,GACtB,MAAO,CAAEpQ,EAAGmQ,EAAEnQ,EAAIoQ,EAAEpQ,EAAGC,EAAGkQ,EAAElQ,EAAImQ,EAAEnQ,EACtC,CACA,SAASq7B,GAAUh9B,EAAYi9B,GAAS,IAAlBxrB,EAAKzR,EAALyR,MAClB,MAAO,CACHA,MAAAA,EACA2B,MAAOirB,GAAc5sB,EAAO6sB,GAAgBrB,IAC5ClyB,OAAQszB,GAAc5sB,EAAO8sB,GAAiBtB,IAC9CnhB,SAAUta,GAAYy7B,EAAS,IAEvC,CACA,SAASsB,GAAiBtB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASqB,GAAgBrB,GACrB,OAAOA,EAAQA,EAAQjlC,OAAS,EACpC,CACA,SAASwJ,GAAYy7B,EAASpI,GAC1B,GAAIoI,EAAQjlC,OAAS,EACjB,MAAO,CAAE0J,EAAG,EAAGC,EAAG,GAKtB,IAHA,IAAI7J,EAAImlC,EAAQjlC,OAAS,EACrBwmC,EAAmB,KACjBC,EAAYH,GAAgBrB,GAC3BnlC,GAAK,IACR0mC,EAAmBvB,EAAQnlC,KACvB2mC,EAAUprB,UAAYmrB,EAAiBnrB,UACvC6I,GAAsB2Y,MAG1B/8B,IAEJ,IAAK0mC,EACD,MAAO,CAAE98B,EAAG,EAAGC,EAAG,GAEtB,IAAM+tB,EAAOtT,GAAsBqiB,EAAUprB,UAAYmrB,EAAiBnrB,WAC1E,GAAa,IAATqc,EACA,MAAO,CAAEhuB,EAAG,EAAGC,EAAG,GAEtB,IAAMkN,EAAkB,CACpBnN,GAAI+8B,EAAU/8B,EAAI88B,EAAiB98B,GAAKguB,EACxC/tB,GAAI88B,EAAU98B,EAAI68B,EAAiB78B,GAAK+tB,GAQ5C,OANI7gB,EAAgBnN,IAAMuqB,MACtBpd,EAAgBnN,EAAI,GAEpBmN,EAAgBlN,IAAMsqB,MACtBpd,EAAgBlN,EAAI,GAEjBkN,CACX,CChJA,SAAS6vB,GAAWC,GAChB,OAAOA,EAAKn8B,IAAMm8B,EAAKp8B,GAC3B,CACA,SAASq8B,GAAOl/B,GAAuC,IAAhC7H,EAAME,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,EAAG8mC,EAAW9mC,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,IAC7C,OAAO0K,KAAKwc,IAAIvf,EAAQ7H,IAAWgnC,CACvC,CACA,SAASC,GAAc1rB,EAAOnb,EAAQJ,GAAsB,IAAdiT,EAAM/S,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,GACnDqb,EAAMtI,OAASA,EACfsI,EAAM2rB,YAAc/vB,GAAI/W,EAAOsK,IAAKtK,EAAOuK,IAAK4Q,EAAMtI,QACtDsI,EAAMtQ,MAAQ47B,GAAW7mC,GAAU6mC,GAAWzmC,IAC1C2mC,GAAOxrB,EAAMtQ,MAAO,EAAG,OAAW8gB,MAAMxQ,EAAMtQ,UAC9CsQ,EAAMtQ,MAAQ,GAClBsQ,EAAM4rB,UACFhwB,GAAInX,EAAO0K,IAAK1K,EAAO2K,IAAK4Q,EAAMtI,QAAUsI,EAAM2rB,aAClDH,GAAOxrB,EAAM4rB,YAAcpb,MAAMxQ,EAAM4rB,cACvC5rB,EAAM4rB,UAAY,EAC1B,CACA,SAASC,GAAa7rB,EAAOnb,EAAQJ,EAAQiT,GACzCg0B,GAAc1rB,EAAM1R,EAAGzJ,EAAOyJ,EAAG7J,EAAO6J,EAAGoJ,EAASA,EAAO9D,aAAUhM,GACrE8jC,GAAc1rB,EAAMzR,EAAG1J,EAAO0J,EAAG9J,EAAO8J,EAAGmJ,EAASA,EAAO7D,aAAUjM,EACzE,CACA,SAASkkC,GAAiBrnC,EAAQsnC,EAAU7gC,GACxCzG,EAAO0K,IAAMjE,EAAOiE,IAAM48B,EAAS58B,IACnC1K,EAAO2K,IAAM3K,EAAO0K,IAAMm8B,GAAWS,EACzC,CAKA,SAASC,GAAyBvnC,EAAQoE,EAAQqC,GAC9CzG,EAAO0K,IAAMtG,EAAOsG,IAAMjE,EAAOiE,IACjC1K,EAAO2K,IAAM3K,EAAO0K,IAAMm8B,GAAWziC,EACzC,CACA,SAASojC,GAAqBxnC,EAAQoE,EAAQqC,GAC1C8gC,GAAyBvnC,EAAO6J,EAAGzF,EAAOyF,EAAGpD,EAAOoD,GACpD09B,GAAyBvnC,EAAO8J,EAAG1F,EAAO0F,EAAGrD,EAAOqD,EACxD,CCZA,SAAS29B,GAA4BX,EAAMp8B,EAAKC,GAC5C,MAAO,CACHD,SAAavH,IAARuH,EAAoBo8B,EAAKp8B,IAAMA,OAAMvH,EAC1CwH,SAAaxH,IAARwH,EACCm8B,EAAKn8B,IAAMA,GAAOm8B,EAAKn8B,IAAMm8B,EAAKp8B,UAClCvH,EAEd,CAcA,SAASukC,GAA4BC,EAAYC,GAC7C,IAAIl9B,EAAMk9B,EAAgBl9B,IAAMi9B,EAAWj9B,IACvCC,EAAMi9B,EAAgBj9B,IAAMg9B,EAAWh9B,IAG3C,GAAIi9B,EAAgBj9B,IAAMi9B,EAAgBl9B,IACtCi9B,EAAWh9B,IAAMg9B,EAAWj9B,IAAK,KAAA+2B,EACpB,CAAC92B,EAAKD,GAAlBA,EAAG+2B,EAAA,GAAE92B,EAAG82B,EAAA,EACb,CACA,MAAO,CAAE/2B,IAAAA,EAAKC,IAAAA,EAClB,CAuCA,IAAMk9B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHv9B,IAAKw9B,GAAoBH,EAAaC,GACtCr9B,IAAKu9B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,IAMMC,GAAc,WAAH,MAAU,CACvBv+B,EAP2B,CAC3Bs9B,UAAW,EACXl8B,MAAO,EACPgI,OAAQ,EACRi0B,YAAa,GAIbp9B,EAR2B,CAC3Bq9B,UAAW,EACXl8B,MAAO,EACPgI,OAAQ,EACRi0B,YAAa,GAKhB,EAEKmB,GAAY,WAAH,MAAU,CACrBx+B,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,GAIxC,ECdD,SAAS29B,GAAS/rB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASgsB,GAAuBjjC,GAAgC,IAA7B+H,EAAG/H,EAAH+H,IAC/B,MAAO,CACHxD,EAAG,CAAEa,IAF+BpF,EAAJkI,KAEhB7C,IAF2BrF,EAALgI,OAGtCxD,EAAG,CAAEY,IAAK2C,EAAK1C,IAHoCrF,EAANiI,QAKrD,CCVA,SAASi7B,GAAgBv9B,GACrB,YAAiB9H,IAAV8H,GAAiC,IAAVA,CAClC,CACA,SAASw9B,GAAQnjC,GAA4B,IAAzB2F,EAAK3F,EAAL2F,MAAOsD,EAAMjJ,EAANiJ,OAAQC,EAAMlJ,EAANkJ,OAC/B,OAASg6B,GAAgBv9B,KACpBu9B,GAAgBj6B,KAChBi6B,GAAgBh6B,EACzB,CACA,SAAS0B,GAAakF,GAClB,OAAQqzB,GAASrzB,IACbszB,GAAetzB,IACfA,EAAOrL,GACPqL,EAAOjH,QACPiH,EAAOhH,SACPgH,EAAO/G,OACf,CACA,SAASq6B,GAAetzB,GACpB,OAAOuzB,GAAcvzB,EAAOvL,IAAM8+B,GAAcvzB,EAAOtL,EAC3D,CACA,SAAS6+B,GAAc9gC,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAAS+gC,GAAWhvB,EAAO3O,EAAOi8B,GAG9B,OAAOA,EADQj8B,GADY2O,EAAQstB,EAGvC,CAIA,SAAS2B,GAAgBjvB,EAAOutB,EAAWl8B,EAAOi8B,EAAa4B,GAI3D,YAHiB3lC,IAAb2lC,IACAlvB,EAAQgvB,GAAWhvB,EAAOkvB,EAAU5B,IAEjC0B,GAAWhvB,EAAO3O,EAAOi8B,GAAeC,CACnD,CAIA,SAAS4B,GAAejC,GAAuD,IAAjDK,EAASjnC,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,EAAG+K,EAAK/K,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,EAAGgnC,EAAWhnC,UAAAC,OAAA,EAAAD,UAAA,QAAAiD,EAAE2lC,EAAQ5oC,UAAAC,OAAA,EAAAD,UAAA,QAAAiD,EACzE2jC,EAAKp8B,IAAMm+B,GAAgB/B,EAAKp8B,IAAKy8B,EAAWl8B,EAAOi8B,EAAa4B,GACpEhC,EAAKn8B,IAAMk+B,GAAgB/B,EAAKn8B,IAAKw8B,EAAWl8B,EAAOi8B,EAAa4B,EACxE,CAIA,SAASE,GAAcC,EAAG3jC,GAAY,IAARuE,EAACvE,EAADuE,EAAGC,EAACxE,EAADwE,EAC7Bi/B,GAAeE,EAAIp/B,EAAGA,EAAEs9B,UAAWt9B,EAAEoB,MAAOpB,EAAEq9B,aAC9C6B,GAAeE,EAAIn/B,EAAGA,EAAEq9B,UAAWr9B,EAAEmB,MAAOnB,EAAEo9B,YAClD,CAuDA,SAASgC,GAAcj+B,GACnB,OAAIk+B,OAAOC,UAAUn+B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAASo+B,GAAcvC,EAAMj4B,GACzBi4B,EAAKp8B,IAAMo8B,EAAKp8B,IAAMmE,EACtBi4B,EAAKn8B,IAAMm8B,EAAKn8B,IAAMkE,CAC1B,CAMA,SAASy6B,GAAcxC,EAAMyC,EAAUphC,GAA8B,IAAAs5B,GAAAzc,EAAAA,GAAAA,GAAA7c,EAAA,GAA3B7H,EAAGmhC,EAAA,GAAE+H,EAAQ/H,EAAA,GAAEgI,EAAShI,EAAA,GACxDiI,OAAuCvmC,IAA1BomC,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EvC,EAAc/vB,GAAI2vB,EAAKp8B,IAAKo8B,EAAKn8B,IAAK++B,GAE5CX,GAAejC,EAAMyC,EAAWjpC,GAAMipC,EAAWC,GAAWtC,EAAaqC,EAAWt+B,MACxF,CAIA,IAAM0+B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKz+B,GACvB8+B,GAAcL,EAAIp/B,EAAGW,EAAWm/B,IAChCL,GAAcL,EAAIn/B,EAAGU,EAAWo/B,GACpC,CCpHA,SAASE,GAAmB/hC,EAAU+9B,GAClC,OAAOyC,GHeX,SAA4B3uB,EAAOksB,GAC/B,IAAKA,EACD,OAAOlsB,EACX,IAAMmwB,EAAUjE,EAAe,CAAEj8B,EAAG+P,EAAMpM,KAAM1D,EAAG8P,EAAMvM,MACnD28B,EAAclE,EAAe,CAAEj8B,EAAG+P,EAAMtM,MAAOxD,EAAG8P,EAAMrM,SAC9D,MAAO,CACHF,IAAK08B,EAAQjgC,EACb0D,KAAMu8B,EAAQlgC,EACd0D,OAAQy8B,EAAYlgC,EACpBwD,MAAO08B,EAAYngC,EAE3B,CG1BmCogC,CAAmBliC,EAAS4Q,wBAAyBmtB,GACxF,CCaA,IAAMoE,GAAsB,IAAIhpB,QAK1BipB,GAAyB,WAC3B,SAAAA,EAAY3jC,IAAe0U,EAAAA,GAAAA,GAAA,KAAAivB,GAIvBhvB,KAAKivB,eAAiB,KACtBjvB,KAAKkvB,YAAa,EAClBlvB,KAAKmvB,iBAAmB,KACxBnvB,KAAK+rB,YAAc,CAAEr9B,EAAG,EAAGC,EAAG,GAI9BqR,KAAKovB,aAAc,EACnBpvB,KAAKqvB,uBAAwB,EAI7BrvB,KAAKsvB,QAAUpC,KACfltB,KAAK3U,cAAgBA,CACzB,CAsYC,OAtYA6U,EAAAA,GAAAA,GAAA8uB,EAAA,EAAA7pC,IAAA,QAAAuH,MACD,SAAM6iC,GAA4C,IAAAlsB,EAAA,KAAFmsB,GAAEzqC,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAJ,CAAC,GAA1B0qC,aAAAA,OAAY,IAAAD,GAAQA,EAI7BhkC,EAAoBwU,KAAK3U,cAAzBG,gBACR,IAAIA,IAAiD,IAA9BA,EAAgB69B,UAAvC,CAwFArpB,KAAK0vB,WAAa,IAAI/F,GAAW4F,EAAa,CAC1CpE,eAvFmB,SAAChtB,GAGpBkF,EAAKssB,gBACDF,GACApsB,EAAKosB,aAAalxB,GAAiBJ,EAAO,QAAQM,MAE1D,EAiFI+rB,QAhFY,SAACrsB,EAAOwE,GAEpB,IAAAitB,EAA+CvsB,EAAKT,WAA5Cja,EAAIinC,EAAJjnC,KAAMknC,EAAeD,EAAfC,gBAAiBC,EAAWF,EAAXE,YAC/B,IAAInnC,GAASknC,IACLxsB,EAAK4rB,gBACL5rB,EAAK4rB,iBACT5rB,EAAK4rB,eAAiBzvB,GAAc7W,GAE/B0a,EAAK4rB,gBALd,CAQA5rB,EAAK6rB,YAAa,EAClB7rB,EAAK8rB,iBAAmB,KACxB9rB,EAAK0sB,qBACD1sB,EAAKhY,cAAcwP,aACnBwI,EAAKhY,cAAcwP,WAAWm1B,oBAAqB,EACnD3sB,EAAKhY,cAAcwP,WAAWhW,YAASmD,GAK3CmlC,IAAS,SAACxB,GACN,IAAIniC,EAAU6Z,EAAK4sB,mBAAmBtE,GAAMn+B,OAAS,EAIrD,GAAImD,GAAQ3C,KAAKxE,GAAU,CACvB,IAAQqR,EAAewI,EAAKhY,cAApBwP,WACR,GAAIA,GAAcA,EAAW5R,OAAQ,CACjC,IAAMinC,EAAer1B,EAAW5R,OAAOknC,UAAUxE,GACjD,GAAIuE,EAEA1mC,EADekiC,GAAWwE,IACNtgC,WAAWpG,GAAW,IAElD,CACJ,CACA6Z,EAAK0oB,YAAYJ,GAAQniC,CAC7B,IAEIsmC,GACAhuB,GAAKhW,QAAO,kBAAMgkC,EAAY3xB,EAAOwE,EAAK,IAE9C,IAAQxW,EAAmBkX,EAAKhY,cAAxBc,eACRA,GAAkBA,EAAe2W,UAAU,aAAa,EAjCxD,CAkCJ,EAqCI2nB,OApCW,SAACtsB,EAAOwE,GAEnB,IAAAytB,EAAyE/sB,EAAKT,WAAtEitB,EAAeO,EAAfP,gBAAiBQ,EAAiBD,EAAjBC,kBAAmBC,EAAeF,EAAfE,gBAAiBC,EAAMH,EAANG,OAE7D,GAAKV,GAAoBxsB,EAAK4rB,eAA9B,CAEA,IAAQl3B,EAAW4K,EAAX5K,OAER,GAAIs4B,GAA+C,OAA1BhtB,EAAK8rB,iBAM1B,OALA9rB,EAAK8rB,iBA6UrB,SAA6Bp3B,GAA4B,IAApBy4B,EAAazrC,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,GAC7C24B,EAAY,KACZjuB,KAAKwc,IAAIlU,EAAOpJ,GAAK6hC,EACrB9S,EAAY,IAEPjuB,KAAKwc,IAAIlU,EAAOrJ,GAAK8hC,IAC1B9S,EAAY,KAEhB,OAAOA,CACX,CAtVwC+S,CAAoB14B,QAEd,OAA1BsL,EAAK8rB,kBACLmB,GAAmBA,EAAgBjtB,EAAK8rB,mBAKhD9rB,EAAKqtB,WAAW,IAAK/tB,EAAKlE,MAAO1G,GACjCsL,EAAKqtB,WAAW,IAAK/tB,EAAKlE,MAAO1G,GAOjCsL,EAAKhY,cAAcU,SAKnBwkC,GAAUA,EAAOpyB,EAAOwE,EAzBd,CA0Bd,EAMIqoB,aALiB,SAAC7sB,EAAOwE,GAAI,OAAKU,EAAKsV,KAAKxa,EAAOwE,EAAK,GAMzD,CAAEld,mBAAoBua,KAAK3U,cAAcslC,yBA5FlC,CA6Fd,GAAC,CAAAxrC,IAAA,OAAAuH,MACD,SAAKyR,EAAOwE,GACR,IAAMusB,EAAalvB,KAAKkvB,WAExB,GADAlvB,KAAKwB,SACA0tB,EAAL,CAEA,IAAQpmB,EAAanG,EAAbmG,SACR9I,KAAKmjB,eAAera,GACpB,IAAQ8nB,EAAc5wB,KAAK4C,WAAnBguB,UACJA,GACA9uB,GAAKhW,QAAO,kBAAM8kC,EAAUzyB,EAAOwE,EAAK,GALlC,CAOd,GAAC,CAAAxd,IAAA,SAAAuH,MACD,WACIsT,KAAKkvB,YAAa,EAClB,IAAA2B,EAAuC7wB,KAAK3U,cAApCwP,EAAUg2B,EAAVh2B,WAAY1O,EAAc0kC,EAAd1kC,eAChB0O,IACAA,EAAWm1B,oBAAqB,GAEpChwB,KAAK0vB,YAAc1vB,KAAK0vB,WAAW7E,MACnC7qB,KAAK0vB,gBAAa1nC,GACUgY,KAAK4C,WAAzBitB,iBACgB7vB,KAAKivB,iBACzBjvB,KAAKivB,iBACLjvB,KAAKivB,eAAiB,MAE1B9iC,GAAkBA,EAAe2W,UAAU,aAAa,EAC5D,GAAC,CAAA3d,IAAA,aAAAuH,MACD,SAAWi/B,EAAMmF,EAAQ/4B,GACrB,IAAQpP,EAASqX,KAAK4C,WAAdja,KAER,GAAKoP,GAAWg5B,GAAWpF,EAAMhjC,EAAMqX,KAAKmvB,kBAA5C,CAEA,IAAM6B,EAAYhxB,KAAKiwB,mBAAmBtE,GACtCljB,EAAOzI,KAAK+rB,YAAYJ,GAAQ5zB,EAAO4zB,GAEvC3rB,KAAKovB,aAAepvB,KAAKovB,YAAYzD,KACrCljB,EPzKZ,SAA0BhK,EAAKtU,EAAgBmlC,GAAS,IAArB//B,EAAGpF,EAAHoF,IAAKC,EAAGrF,EAAHqF,IASpC,YARYxH,IAARuH,GAAqBkP,EAAQlP,EAE7BkP,EAAQ6wB,EAAUtzB,GAAIzM,EAAKkP,EAAO6wB,EAAQ//B,KAAOE,KAAKD,IAAIiP,EAAOlP,QAEpDvH,IAARwH,GAAqBiP,EAAQjP,IAElCiP,EAAQ6wB,EAAUtzB,GAAIxM,EAAKiP,EAAO6wB,EAAQ9/B,KAAOC,KAAKF,IAAIkP,EAAOjP,IAE9DiP,CACX,CO+JmBwyB,CAAiBxoB,EAAMzI,KAAKovB,YAAYzD,GAAO3rB,KAAKsvB,QAAQ3D,KAEvEqF,EAAUrjC,IAAI8a,EAPJ,CAQd,GAAC,CAAAtjB,IAAA,qBAAAuH,MACD,WAAqB,IAAA8W,EAAA,KACjB0tB,EAAyClxB,KAAK4C,WAAtCuuB,EAAeD,EAAfC,gBAAiBvE,EAAWsE,EAAXtE,YACjB3jC,GAAW+W,KAAK3U,cAAcwP,YAAc,CAAC,GAA7C5R,OACFmoC,EAAkBpxB,KAAKovB,YACzB+B,GAAmB7qC,EAAY6qC,GAC1BnxB,KAAKovB,cACNpvB,KAAKovB,YAAcpvB,KAAKqxB,yBAKxBrxB,KAAKovB,eADL+B,IAAmBloC,IP3JnC,SAAiCknC,EAASnjC,GAAgC,IAA5BkF,EAAGlF,EAAHkF,IAAKG,EAAIrF,EAAJqF,KAAMD,EAAMpF,EAANoF,OAAQD,EAAKnF,EAALmF,MAC7D,MAAO,CACHzD,EAAG49B,GAA4B6D,EAAUzhC,EAAG2D,EAAMF,GAClDxD,EAAG29B,GAA4B6D,EAAUxhC,EAAGuD,EAAKE,GAEzD,COuJmCk/B,CAAwBroC,EAAOknC,UAAWgB,GAMrEnxB,KAAKsvB,QPpGb,WAA0D,IAA9B1C,EAAW7nC,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG2nC,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHh+B,EAAGi+B,GAAmBC,EAAa,OAAQ,SAC3Cj+B,EAAGg+B,GAAmBC,EAAa,MAAO,UAElD,COyFuB2E,CAAmB3E,GAK9BwE,IAAoBpxB,KAAKovB,aACzBnmC,GACA+W,KAAKovB,cACJpvB,KAAKqvB,uBACNlC,IAAS,SAACxB,GACFnoB,EAAKysB,mBAAmBtE,KACxBnoB,EAAK4rB,YAAYzD,GP7HrC,SAA+B1iC,EAAQmmC,GACnC,IAAMoC,EAAsB,CAAC,EAO7B,YANwBxpC,IAApBonC,EAAY7/B,MACZiiC,EAAoBjiC,IAAM6/B,EAAY7/B,IAAMtG,EAAOsG,UAE/BvH,IAApBonC,EAAY5/B,MACZgiC,EAAoBhiC,IAAM4/B,EAAY5/B,IAAMvG,EAAOsG,KAEhDiiC,CACX,COoH6CC,CAAsBxoC,EAAOknC,UAAUxE,GAAOnoB,EAAK4rB,YAAYzD,IAEhG,GAER,GAAC,CAAAxmC,IAAA,wBAAAuH,MACD,WACI,IAAAglC,EAAmE1xB,KAAK4C,WAA/CwsB,EAAWsC,EAA5BP,gBAA8BQ,EAAwBD,EAAxBC,yBACtC,IAAKvC,IAAgB9oC,EAAY8oC,GAC7B,OAAO,EACX,IAAMwC,EAAqBxC,EAAY5lC,QACvCyf,GAAiC,OAAvB2oB,EAA6B,0GACvC,IAAQ/2B,EAAemF,KAAK3U,cAApBwP,WAER,IAAKA,IAAeA,EAAW5R,OAC3B,OAAO,EACX,IAAM4oC,ED5Nd,SAAwBl3B,EAASm3B,EAAoBrsC,GACjD,IAAMssC,EAAcpD,GAAmBh0B,EAASlV,GACxCusC,EAAWF,EAAXE,OAKR,OAJIA,IACA9D,GAAc6D,EAAYrjC,EAAGsjC,EAAOj6B,OAAOrJ,GAC3Cw/B,GAAc6D,EAAYpjC,EAAGqjC,EAAOj6B,OAAOpJ,IAExCojC,CACX,CCoN+BE,CAAeL,EAAoB/2B,EAAW0L,KAAMvG,KAAK3U,cAAcslC,yBAC1FuB,EPtKZ,SAAiC/B,EAAW0B,GACxC,MAAO,CACHnjC,EAAG69B,GAA4B4D,EAAUzhC,EAAGmjC,EAAenjC,GAC3DC,EAAG49B,GAA4B4D,EAAUxhC,EAAGkjC,EAAeljC,GAEnE,COiKkCwjC,CAAwBt3B,EAAW5R,OAAOknC,UAAW0B,GAK/E,GAAIF,EAA0B,CAC1B,IAAMS,EAAkBT,EJ9NpC,SAAgC3kC,GAAW,IAAR0B,EAAC1B,EAAD0B,EAAGC,EAAC3B,EAAD2B,EAClC,MAAO,CAAEuD,IAAKvD,EAAEY,IAAK4C,MAAOzD,EAAEc,IAAK4C,OAAQzD,EAAEa,IAAK6C,KAAM3D,EAAEa,IAC9D,CI4N6D8iC,CAAwBH,IACzElyB,KAAKqvB,wBAA0B+C,EAC3BA,IACAF,EAAsB9E,GAAwBgF,GAEtD,CACA,OAAOF,CACX,GAAC,CAAA/sC,IAAA,iBAAAuH,MACD,SAAeoc,GAAU,IAAAsa,EAAA,KACrBkP,EAAoGtyB,KAAK4C,WAAjGja,EAAI2pC,EAAJ3pC,KAAM4pC,EAAYD,EAAZC,aAAc3F,EAAW0F,EAAX1F,YAAa4F,EAAcF,EAAdE,eAAgBC,EAAgBH,EAAhBG,iBAAkBC,EAAmBJ,EAAnBI,oBACrEtD,EAAcpvB,KAAKovB,aAAe,CAAC,EACnCuD,EAAqBxF,IAAS,SAACxB,GACjC,GAAKoF,GAAWpF,EAAMhjC,EAAMy6B,EAAK+L,kBAAjC,CAGA,IAAI/xB,EAAcgyB,GAAeA,EAAYzD,IAAU,CAAC,EACpD8G,IACAr1B,EAAa,CAAE7N,IAAK,EAAGC,IAAK,IAOhC,IAAMmoB,EAAkBiV,EAAc,IAAM,IACtCnV,EAAgBmV,EAAc,GAAK,IACnCzV,EAAOzsB,EAAAA,EAAA,CACT0E,KAAM,UACN0Z,SAAUypB,EAAezpB,EAAS6iB,GAAQ,EAC1ChU,gBAAAA,EACAF,cAAAA,EACAF,aAAc,IACdvB,UAAW,EACXC,UAAW,IACRuc,GACAp1B,GAKP,OAAOgmB,EAAKwP,wBAAwBjH,EAAMxU,EA1B1C,CA2BJ,IAEA,OAAO2D,QAAQ7T,IAAI0rB,GAAoBnW,KAAKkW,EAChD,GAAC,CAAAvtC,IAAA,0BAAAuH,MACD,SAAwBi/B,EAAMvuB,GAC1B,IAAM4zB,EAAYhxB,KAAKiwB,mBAAmBtE,GAC1C,OAAOqF,EAAUhqC,MAAMo5B,GAAmBuL,EAAMqF,EAAW,EAAG5zB,GAClE,GAAC,CAAAjY,IAAA,gBAAAuH,MACD,WAAgB,IAAAmmC,EAAA,KACZ1F,IAAS,SAACxB,GAAI,OAAKkH,EAAK5C,mBAAmBtE,GAAMhT,MAAM,GAC3D,GACA,CAAAxzB,IAAA,qBAAAuH,MAMA,SAAmBi/B,GACf,IAAMmH,EAAU,QAAUnH,EAAKlwB,cACzBpU,EAAQ2Y,KAAK3U,cAAcuX,WAC3BmwB,EAAsB1rC,EAAMyrC,GAClC,OAAOC,GAED/yB,KAAK3U,cAAc64B,SAASyH,GAAOtkC,EAAMU,QAAUV,EAAMU,QAAQ4jC,QAAQ3jC,IAAc,EACjG,GAAC,CAAA7C,IAAA,eAAAuH,MACD,SAAa+R,GAAO,IAAAu0B,EAAA,KAChB7F,IAAS,SAACxB,GAGN,GAAKoF,GAAWpF,EAFCqH,EAAKpwB,WAAdja,KAEoBqqC,EAAK7D,kBAAjC,CAEA,IAAQt0B,EAAem4B,EAAK3nC,cAApBwP,WACFm2B,EAAYgC,EAAK/C,mBAAmBtE,GAC1C,GAAI9wB,GAAcA,EAAW5R,OAAQ,CACjC,IAAAgqC,EAAqBp4B,EAAW5R,OAAOknC,UAAUxE,GAAzCp8B,EAAG0jC,EAAH1jC,IAAKC,EAAGyjC,EAAHzjC,IACbwhC,EAAUrjC,IAAI8Q,EAAMktB,GAAQ3vB,GAAIzM,EAAKC,EAAK,IAC9C,CANU,CAOd,GACJ,GACA,CAAArK,IAAA,iCAAAuH,MAKA,WAAiC,IAAAwmC,EAAA,KAC7B,GAAKlzB,KAAK3U,cAAc7B,QAAxB,CAEA,IAAA2pC,EAAkCnzB,KAAK4C,WAA/Bja,EAAIwqC,EAAJxqC,KAAMwoC,EAAegC,EAAfhC,gBACNt2B,EAAemF,KAAK3U,cAApBwP,WACR,GAAKvU,EAAY6qC,IAAqBt2B,GAAemF,KAAKovB,YAA1D,CAMApvB,KAAK2vB,gBAKL,IAAMyD,EAAc,CAAE1kC,EAAG,EAAGC,EAAG,GAC/Bw+B,IAAS,SAACxB,GACN,IAAMqF,EAAYkC,EAAKjD,mBAAmBtE,GAC1C,GAAIqF,EAAW,CACX,IAAM1Y,EAAS0Y,EAAUxjC,MACzB4lC,EAAYzH,GP5Q5B,SAAoB1mC,EAAQJ,GACxB,IAAIiT,EAAS,GACPu7B,EAAe3H,GAAWzmC,GAC1BquC,EAAe5H,GAAW7mC,GAOhC,OANIyuC,EAAeD,EACfv7B,EAAS+W,GAAShqB,EAAO0K,IAAK1K,EAAO2K,IAAM6jC,EAAcpuC,EAAOsK,KAE3D8jC,EAAeC,IACpBx7B,EAAS+W,GAAS5pB,EAAOsK,IAAKtK,EAAOuK,IAAM8jC,EAAczuC,EAAO0K,MAE7DD,EAAM,EAAG,EAAGwI,EACvB,COiQoCD,CAAW,CAAEtI,IAAK+oB,EAAQ9oB,IAAK8oB,GAAU4a,EAAK9D,YAAYzD,GAClF,CACJ,IAIA,IAAQh3B,EAAsBqL,KAAK3U,cAAcuX,WAAzCjO,kBACRqL,KAAK3U,cAAc7B,QAAQoL,MAAMvF,UAAYsF,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNkG,EAAW0L,MAAQ1L,EAAW0L,KAAKgtB,eACnC14B,EAAW24B,eACXxzB,KAAK+vB,qBAKL5C,IAAS,SAACxB,GACN,GAAKoF,GAAWpF,EAAMhjC,EAAM,MAA5B,CAKA,IAAMqoC,EAAYkC,EAAKjD,mBAAmBtE,GAC1C8H,EAAqBP,EAAK9D,YAAYzD,GAA9Bp8B,EAAGkkC,EAAHlkC,IAAKC,EAAGikC,EAAHjkC,IACbwhC,EAAUrjC,IAAIqO,GAAIzM,EAAKC,EAAK4jC,EAAYzH,IAN9B,CAOd,GAzCU,CAJA,CA8Cd,GAAC,CAAAxmC,IAAA,eAAAuH,MACD,WAAe,IAAAgnC,EAAA,KACX,GAAK1zB,KAAK3U,cAAc7B,QAAxB,CAEAulC,GAAoBphC,IAAIqS,KAAK3U,cAAe2U,MAC5C,IAIM2zB,EAAsBh1B,GAJZqB,KAAK3U,cAAc7B,QAIkB,eAAe,SAAC2U,GACjE,IAAAy1B,EAAsCF,EAAK9wB,WAAnCja,EAAIirC,EAAJjrC,KAAIkrC,EAAAD,EAAEp9B,aACd7N,SAD0B,IAAAkrC,GAAOA,IACTH,EAAK1sC,MAAMmX,EACvC,IACM21B,EAAyB,WAEvBxtC,EADwBotC,EAAK9wB,WAAzBuuB,mBAEJuC,EAAKtE,YAAcsE,EAAKrC,wBAEhC,EACQx2B,EAAemF,KAAK3U,cAApBwP,WACFk5B,EAA4Bl5B,EAAWmD,iBAAiB,UAAW81B,GACrEj5B,IAAeA,EAAW5R,SAC1B4R,EAAW0L,MAAQ1L,EAAW0L,KAAKgtB,eACnC14B,EAAW24B,gBAEfM,IAKA,IAAME,EAAqBp2B,GAAY3R,OAAQ,UAAU,kBAAMynC,EAAKO,gCAAgC,IAK9FC,EAA2Br5B,EAAWmD,iBAAiB,aAAc,SAAAsoB,GAAiC,IAA9BlmB,EAAKkmB,EAALlmB,MAAO+zB,EAAgB7N,EAAhB6N,iBAC7ET,EAAKxE,YAAciF,IACnBhH,IAAS,SAACxB,GACN,IAAMjI,EAAcgQ,EAAKzD,mBAAmBtE,GACvCjI,IAELgQ,EAAK3H,YAAYJ,IAASvrB,EAAMurB,GAAMK,UACtCtI,EAAY/1B,IAAI+1B,EAAYl2B,MAAQ4S,EAAMurB,GAAMK,WACpD,IACA0H,EAAKroC,cAAcU,SAE3B,IACA,OAAO,WACHioC,IACAL,IACAI,IACAG,GAA4BA,GAChC,CAjDU,CAkDd,GAAC,CAAA/uC,IAAA,WAAAuH,MACD,WACI,IAAMrF,EAAQ2Y,KAAK3U,cAAcuX,WACjCwxB,EAA0J/sC,EAAlJsB,KAAAA,OAAI,IAAAyrC,GAAQA,EAAAC,EAAsIhtC,EAApIgpC,kBAAAA,OAAiB,IAAAgE,GAAQA,EAAAC,EAA2GjtC,EAAzGwoC,gBAAAA,OAAe,IAAAyE,GAAQA,EAAAC,EAAkFltC,EAAhF8pC,gBAAAA,OAAe,IAAAoD,GAAQA,EAAAC,EAAyDntC,EAAvDulC,YAAAA,OAAW,IAAA4H,EAAG9H,GAAc8H,EAAAC,EAA2BptC,EAAzBkrC,aAAAA,OAAY,IAAAkC,GAAOA,EACpJ,OAAA/pC,EAAAA,EAAA,GACOrD,GAAK,IACRsB,KAAAA,EACA0nC,kBAAAA,EACAR,gBAAAA,EACAsB,gBAAAA,EACAvE,YAAAA,EACA2F,aAAAA,GAER,KAACvD,CAAA,CAzZ0B,GA2Z/B,SAAS+B,GAAWrT,EAAW/0B,EAAMwmC,GACjC,QAAkB,IAATxmC,GAAiBA,IAAS+0B,KACT,OAArByR,GAA6BA,IAAqBzR,EAC3D,CCnb4E,IAEtEgX,GAAW,SAAA1xB,IAAAC,EAAAA,GAAAA,GAAAyxB,EAAA1xB,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAuxB,GACb,SAAAA,EAAY50B,GAAM,IAAAuD,EAIsC,OAJtCtD,EAAAA,GAAAA,GAAA,KAAA20B,IACdrxB,EAAAH,EAAAxc,KAAA,KAAMoZ,IACD60B,oBAAsB7wB,GAC3BT,EAAK+nB,gBAAkBtnB,GACvBT,EAAKkZ,SAAW,IAAIyS,GAA0BlvB,GAAMuD,CACxD,CAaC,OAbAnD,EAAAA,GAAAA,GAAAw0B,EAAA,EAAAvvC,IAAA,QAAAuH,MACD,WAGI,IAAQkoC,EAAiB50B,KAAKF,KAAK8C,WAA3BgyB,aACJA,IACA50B,KAAK20B,oBAAsBC,EAAa3L,UAAUjpB,KAAKuc,WAE3Dvc,KAAKorB,gBAAkBprB,KAAKuc,SAASsY,gBAAkB/wB,EAC3D,GAAC,CAAA3e,IAAA,UAAAuH,MACD,WACIsT,KAAK20B,sBACL30B,KAAKorB,iBACT,KAACsJ,CAAA,CAnBY,CAAS70B,ICEpBi1B,GAAe,SAACh3B,GAAO,OAAK,SAACK,EAAOwE,GAClC7E,GACAgE,GAAKhW,QAAO,kBAAMgS,EAAQK,EAAOwE,EAAK,GAE9C,CAAC,EACKoyB,GAAU,SAAA/xB,IAAAC,EAAAA,GAAAA,GAAA8xB,EAAA/xB,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAA4xB,GACZ,SAAAA,IAAc,IAAA1xB,EAE4B,OAF5BtD,EAAAA,GAAAA,GAAA,KAAAg1B,IACV1xB,EAAAH,EAAAve,MAAA,KAASI,YACJiwC,0BAA4BlxB,GAAKT,CAC1C,CA2BC,OA3BAnD,EAAAA,GAAAA,GAAA60B,EAAA,EAAA5vC,IAAA,gBAAAuH,MACD,SAAcuoC,GACVj1B,KAAKk1B,QAAU,IAAIvL,GAAWsL,EAAkBj1B,KAAKm1B,oBAAqB,CAAE1vC,mBAAoBua,KAAKF,KAAK6wB,yBAC9G,GAAC,CAAAxrC,IAAA,oBAAAuH,MACD,WAAoB,IAAA8W,EAAA,KAChBuB,EAA2D/E,KAAKF,KAAK8C,WAA7DwyB,EAAiBrwB,EAAjBqwB,kBAAmBC,EAAUtwB,EAAVswB,WAAYC,EAAKvwB,EAALuwB,MAAOC,EAAQxwB,EAARwwB,SAC9C,MAAO,CACHpK,eAAgB2J,GAAaM,GAC7B5K,QAASsK,GAAaO,GACtB5K,OAAQ6K,EACRvK,MAAO,SAAC5sB,EAAOwE,UACJa,EAAK0xB,QACRK,GACAzzB,GAAKhW,QAAO,kBAAMypC,EAASp3B,EAAOwE,EAAK,GAE/C,EAER,GAAC,CAAAxd,IAAA,QAAAuH,MACD,WAAQ,IAAA02B,EAAA,KACJpjB,KAAKg1B,0BAA4Br2B,GAAgBqB,KAAKF,KAAKtW,QAAS,eAAe,SAAC2U,GAAK,OAAKilB,EAAKoS,cAAcr3B,EAAM,GAC3H,GAAC,CAAAhZ,IAAA,SAAAuH,MACD,WACIsT,KAAKk1B,SAAWl1B,KAAKk1B,QAAQO,eAAez1B,KAAKm1B,oBACrD,GAAC,CAAAhwC,IAAA,UAAAuH,MACD,WACIsT,KAAKg1B,4BACLh1B,KAAKk1B,SAAWl1B,KAAKk1B,QAAQrK,KACjC,KAACkK,CAAA,CA/BW,CAASl1B,ICTzB,SAAS61B,GAAgBC,EAAQhK,GAC7B,OAAIA,EAAKn8B,MAAQm8B,EAAKp8B,IACX,EACHomC,GAAUhK,EAAKn8B,IAAMm8B,EAAKp8B,KAAQ,GAC9C,CAQA,IAAMqmC,GAAsB,CACxBC,QAAS,SAACvd,EAAQxY,GACd,IAAKA,EAAKjb,OACN,OAAOyzB,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAI1nB,GAAG5C,KAAKsqB,GAIR,OAAOA,EAHPA,EAAS1oB,WAAW0oB,EAK5B,CAKA,IAAM5pB,EAAIgnC,GAAgBpd,EAAQxY,EAAKjb,OAAO6J,GACxCC,EAAI+mC,GAAgBpd,EAAQxY,EAAKjb,OAAO8J,GAC9C,MAAO,GAAPxH,OAAUuH,EAAC,MAAAvH,OAAKwH,EAAC,IACrB,GCzBJ,IAAMmnC,GAAmB,uDAQzB,IAAMC,GAAW,EACjB,SAASC,GAAiBxsC,EAASmR,GAAoB,IAAXs7B,EAAKlxC,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,EAChDkkB,GAAUgtB,GAASF,GAAU,yDAAF5uC,OAA2DqC,EAAO,yDAC7F,IAAA0sC,EAVJ,SAA0B1sC,GACtB,IAAM8jB,EAAQwoB,GAAiBK,KAAK3sC,GACpC,IAAK8jB,EACD,MAAO,CAAC,GACZ,IAAA8oB,GAAAvsB,EAAAA,GAAAA,GAA4ByD,EAAK,GACjC,MAAO,CADO8oB,EAAA,GAAUA,EAAA,GAE5B,CAI8BC,CAAiB7sC,GAAQ8sC,GAAAzsB,EAAAA,GAAAA,GAAAqsB,EAAA,GAA5ClnC,EAAKsnC,EAAA,GAAEC,EAAQD,EAAA,GAEtB,GAAKtnC,EAAL,CAGA,IAAMkO,EAAWjR,OAAOuqC,iBAAiB77B,GAAS87B,iBAAiBznC,GACnE,OAAIkO,EACOA,EAASvH,OAEXzG,EAAmBqnC,GAEjBP,GAAiBO,EAAU57B,EAASs7B,EAAQ,GAG5CM,CAXD,CAad,CAMA,SAASG,GAAoBrrC,EAAalB,EAAiBgT,GAAe,IAAzBtY,EAAMV,OAAAgS,OAAA,IC7CxC,SAAmCwgC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,sBAAwBD,EAC/D,CD2CuDE,CAAA1sC,GAAAA,IAC7CwQ,EAAUtP,EAAc7B,QAC9B,KAAMmR,aAAmBkQ,SACrB,MAAO,CAAEhmB,OAAAA,EAAQsY,cAAAA,GAiBrB,IAAK,IAAMhY,KAdPgY,IACAA,EAAazS,EAAA,GAAQyS,IAGzB9R,EAAc4O,OAAO/U,SAAQ,SAACwH,GAC1B,IAAMlD,EAAUkD,EAAMc,MACtB,GAAK0B,EAAmB1F,GAAxB,CAEA,IAAM0T,EAAW84B,GAAiBxsC,EAASmR,GACvCuC,GACAxQ,EAAMiB,IAAIuP,EAHJ,CAId,IAGkBrY,EAAQ,CACtB,IAAM2E,EAAU3E,EAAOM,GACvB,GAAK+J,EAAmB1F,GAAxB,CAEA,IAAM0T,EAAW84B,GAAiBxsC,EAASmR,GACtCuC,IAGLrY,EAAOM,GAAO+X,EACTC,IACDA,EAAgB,CAAC,QAIMnV,IAAvBmV,EAAchY,KACdgY,EAAchY,GAAOqE,GAZb,CAchB,CACA,MAAO,CAAE3E,OAAAA,EAAQsY,cAAAA,EACrB,CEhFA,IAAM25B,GAAW,QACXC,GAAmB,CACrBlB,QAAS,SAACvd,EAAMnuB,GAAqC,IAAjC6sC,EAAS7sC,EAAT6sC,UAAWC,EAAe9sC,EAAf8sC,gBACrBC,EAAW5e,EAIX6e,EAAuB7e,EAAOxqB,SAAS,QACvCspC,EAAe,GACjBD,IACA7e,EAASA,EAAO7d,QAAQq7B,IAAkB,SAACxoB,GAEvC,OADA8pB,EAAa1yC,KAAK4oB,GACXwpB,EACX,KAEJ,IAAMO,EAAS3mB,GAAQ/gB,MAAM2oB,GAE7B,GAAI+e,EAAOryC,OAAS,EAChB,OAAOkyC,EACX,IAAM5lB,EAAWZ,GAAQL,kBAAkBiI,GACrCvgB,EAA8B,kBAAds/B,EAAO,GAAkB,EAAI,EAE7CC,EAASL,EAAgBvoC,EAAEoB,MAAQknC,EAAUtoC,EAC7C6oC,EAASN,EAAgBtoC,EAAEmB,MAAQknC,EAAUroC,EACnD0oC,EAAO,EAAIt/B,IAAWu/B,EACtBD,EAAO,EAAIt/B,IAAWw/B,EAOtB,IAAMC,EAAex7B,GAAIs7B,EAAQC,EAAQ,IAEP,kBAAvBF,EAAO,EAAIt/B,KAClBs/B,EAAO,EAAIt/B,IAAWy/B,GAEQ,kBAAvBH,EAAO,EAAIt/B,KAClBs/B,EAAO,EAAIt/B,IAAWy/B,GAC1B,IAAIhnB,EAASc,EAAS+lB,GACtB,GAAIF,EAAsB,CACtB,IAAIryC,EAAI,EACR0rB,EAASA,EAAO/V,QAAQq8B,IAAU,WAC9B,IAAMW,EAAcL,EAAatyC,GAEjC,OADAA,IACO2yC,CACX,GACJ,CACA,OAAOjnB,CACX,GC3CEknB,GAAwB,SAAAC,IAAA10B,EAAAA,GAAAA,GAAAy0B,EAAAC,GAAA,IAAAz0B,GAAAC,EAAAA,GAAAA,GAAAu0B,GAAA,SAAAA,IAAA,OAAA33B,EAAAA,GAAAA,GAAA,KAAA23B,GAAAx0B,EAAAve,MAAA,KAAAI,UAAA,CA8FzB,OA9FyBmb,EAAAA,GAAAA,GAAAw3B,EAAA,EAAAvyC,IAAA,oBAAAuH,MAM1B,WAAoB,IpJfGkrC,EoJeHv0B,EAAA,KAChBw0B,EAAoE73B,KAAK3Y,MAAjEgE,EAAawsC,EAAbxsC,cAAeysC,EAAWD,EAAXC,YAAaC,EAAiBF,EAAjBE,kBAAmB9sC,EAAQ4sC,EAAR5sC,SAC/C4P,EAAexP,EAAfwP,WpJjBW+8B,EoJkBDI,GpJjBtB7zC,OAAOgS,OAAOlI,EAAiB2pC,GoJkBvB/8B,IACIi9B,EAAYG,OACZH,EAAYG,MAAM12B,IAAI1G,GACtBk9B,GAAqBA,EAAkBrO,UAAYz+B,GACnD8sC,EAAkBrO,SAAS7uB,GAE/BA,EAAW0L,KAAK2xB,YAChBr9B,EAAWmD,iBAAiB,qBAAqB,WAC7CqF,EAAK80B,cACT,IACAt9B,EAAWu9B,WAAU1tC,EAAAA,EAAC,CAAC,EAChBmQ,EAAWnG,SAAO,IACrB40B,eAAgB,kBAAMjmB,EAAK80B,cAAc,MAGjD1uC,EAAsBE,gBAAiB,CAC3C,GAAC,CAAAxE,IAAA,0BAAAuH,MACD,SAAwB4O,GAAW,IAAAkI,EAAA,KAC/B60B,EAA6Dr4B,KAAK3Y,MAA1DixC,EAAgBD,EAAhBC,iBAAkBjtC,EAAagtC,EAAbhtC,cAAe1C,EAAI0vC,EAAJ1vC,KAAM0gC,EAASgP,EAAThP,UACzCxuB,EAAaxP,EAAcwP,WACjC,OAAKA,GASLA,EAAWwuB,UAAYA,EACnB1gC,GACA2S,EAAUg9B,mBAAqBA,QACVtwC,IAArBswC,EACAz9B,EAAW09B,aAGXv4B,KAAKm4B,eAEL78B,EAAU+tB,YAAcA,IACpBA,EACAxuB,EAAW29B,UAEL39B,EAAW49B,YAMjB32B,GAAKogB,YAAW,WACZ,IAAMwW,EAAQ79B,EAAW89B,WACpBD,GAAUA,EAAME,QAAQ5zC,QACzBwe,EAAK20B,cAEb,KAGD,MAnCI,IAoCf,GAAC,CAAAhzC,IAAA,qBAAAuH,MACD,WACI,IAAQmO,EAAemF,KAAK3Y,MAAMgE,cAA1BwP,WACJA,IACAA,EAAW0L,KAAK2xB,aACXr9B,EAAWg+B,kBAAoBh+B,EAAWi+B,UAC3C94B,KAAKm4B,eAGjB,GAAC,CAAAhzC,IAAA,uBAAAuH,MACD,WACI,IAAAqsC,EAA2E/4B,KAAK3Y,MAAxEgE,EAAa0tC,EAAb1tC,cAAeysC,EAAWiB,EAAXjB,YAAgCkB,EAAcD,EAAjChB,kBAC5Bl9B,EAAexP,EAAfwP,WACJA,IACAA,EAAWo+B,4BACPnB,GAAeA,EAAYG,OAC3BH,EAAYG,MAAM1S,OAAO1qB,GACzBm+B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAWr+B,GAEtC,GAAC,CAAA1V,IAAA,eAAAuH,MACD,WACI,IAAQyrC,EAAiBn4B,KAAK3Y,MAAtB8wC,aACRA,GAAgBA,GACpB,GAAC,CAAAhzC,IAAA,SAAAuH,MACD,WACI,OAAO,IACX,KAACgrC,CAAA,CA9FyB,CAASyB,EAAAA,WAgGvC,SAASpuC,GAAc1D,GACnB,IAAA+xC,ECjFJ,WACI,IAAMtxC,GAAUK,EAAAA,EAAAA,YAAWrC,GAC3B,GAAgB,OAAZgC,EACA,MAAO,EAAC,EAAM,MAClB,IAAQuhC,EAAwCvhC,EAAxCuhC,UAAWC,EAA6BxhC,EAA7BwhC,eAAgBI,EAAa5hC,EAAb4hC,SAG7B9/B,GAAKyvC,EAAAA,EAAAA,SAGX,OAFAlzC,EAAAA,EAAAA,YAAU,kBAAMujC,EAAS9/B,EAAG,GAAE,KAEtBy/B,GAAaC,EAAiB,EAAC,EADlB,WAAH,OAASA,GAAkBA,EAAe1/B,EAAG,GACD,EAAC,EACnE,CDsEsC0vC,GAAaC,GAAA1vB,EAAAA,GAAAA,GAAAuvB,EAAA,GAAxC/P,EAASkQ,EAAA,GAAEpB,EAAYoB,EAAA,GACxBzB,GAAc3vC,EAAAA,EAAAA,YAAW0B,GAC/B,OAAQsvC,EAAAA,cAA6BzB,GAAwBhtC,EAAAA,EAAA,GAAOrD,GAAK,IAAEywC,YAAaA,EAAaC,mBAAmB5vC,EAAAA,EAAAA,YAAW2B,GAA2Bu/B,UAAWA,EAAW8O,aAAcA,IACtM,CACA,IAAMH,GAAyB,CAC3BzmC,aAAY7G,EAAAA,EAAA,GACLkrC,IAAmB,IACtB4D,QAAS,CACL,sBACA,uBACA,yBACA,6BAGR/nC,oBAAqBmkC,GACrBlkC,qBAAsBkkC,GACtBhkC,uBAAwBgkC,GACxBjkC,wBAAyBikC,GACzB6D,UAAW1C,IEvHT2C,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQ10C,OACrB40C,GAAW,SAACltC,GAAK,MAAsB,kBAAVA,EAAqBkD,WAAWlD,GAASA,CAAK,EAC3EmtC,GAAO,SAACntC,GAAK,MAAsB,kBAAVA,GAAsBkE,GAAG5C,KAAKtB,EAAM,EA0CnE,SAASotC,GAAU7/B,EAAQ8/B,GACvB,YAA8B/xC,IAAvBiS,EAAO8/B,GACR9/B,EAAO8/B,GACP9/B,EAAO1I,YACjB,CAwBA,IAAMyoC,GAAkBC,GAAS,EAAG,GAAK3vB,IACnC4vB,GAAmBD,GAAS,GAAK,IAAMn2B,IAC7C,SAASm2B,GAAS1qC,EAAKC,EAAKga,GACxB,OAAO,SAAC9jB,GAEJ,OAAIA,EAAI6J,EACG,EACP7J,EAAI8J,EACG,EACJga,EAAOqF,GAAStf,EAAKC,EAAK9J,GACrC,CACJ,CCrFA,SAASy0C,GAAaxO,EAAMyO,GACxBzO,EAAKp8B,IAAM6qC,EAAW7qC,IACtBo8B,EAAKn8B,IAAM4qC,EAAW5qC,GAC1B,CAMA,SAAS6qC,GAAYvM,EAAKwM,GACtBH,GAAarM,EAAIp/B,EAAG4rC,EAAU5rC,GAC9ByrC,GAAarM,EAAIn/B,EAAG2rC,EAAU3rC,EAClC,CCVA,SAAS4rC,GAAiB97B,EAAOutB,EAAWl8B,EAAOi8B,EAAa4B,GAM5D,OAJAlvB,EAAQgvB,GADRhvB,GAASutB,EACiB,EAAIl8B,EAAOi8B,QACpB/jC,IAAb2lC,IACAlvB,EAAQgvB,GAAWhvB,EAAO,EAAIkvB,EAAU5B,IAErCttB,CACX,CAsBA,SAAS+7B,GAAqB7O,EAAMyC,EAAUjkC,EAA8B2N,EAAQ2iC,GAAY,IAAAztC,GAAA6c,EAAAA,GAAAA,GAAA1f,EAAA,GAA/ChF,EAAG6H,EAAA,GAAEqhC,EAAQrhC,EAAA,GAAEshC,EAASthC,EAAA,IAlBzE,SAAyB2+B,GAA8F,IAAxFK,EAASjnC,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,EAAG+K,EAAK/K,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,EAAG+S,EAAM/S,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,GAAK4oC,EAAQ5oC,UAAAC,OAAA,EAAAD,UAAA,QAAAiD,EAAEoyC,EAAUr1C,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG4mC,EAAM8O,EAAU11C,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG4mC,EAM7G,GALIh7B,GAAQ3C,KAAKg+B,KACbA,EAAYp8B,WAAWo8B,GAEvBA,EADyBhwB,GAAIy+B,EAAWlrC,IAAKkrC,EAAWjrC,IAAKw8B,EAAY,KAC1CyO,EAAWlrC,KAErB,kBAAdy8B,EAAX,CAEA,IAAID,EAAc/vB,GAAIo+B,EAAW7qC,IAAK6qC,EAAW5qC,IAAKsI,GAClD6zB,IAASyO,IACTrO,GAAeC,GACnBL,EAAKp8B,IAAMgrC,GAAiB5O,EAAKp8B,IAAKy8B,EAAWl8B,EAAOi8B,EAAa4B,GACrEhC,EAAKn8B,IAAM+qC,GAAiB5O,EAAKn8B,IAAKw8B,EAAWl8B,EAAOi8B,EAAa4B,EAL3D,CAMd,CAMI+M,CAAgB/O,EAAMyC,EAAWjpC,GAAMipC,EAAWC,GAAWD,EAAWE,GAAYF,EAAWt+B,MAAOgI,EAAQ2iC,EAClH,CAIA,IAAMjM,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASkM,GAAoB7M,EAAKM,EAAYkM,EAAWM,GACrDJ,GAAqB1M,EAAIp/B,EAAG0/B,EAAYI,GAAO8L,EAAYA,EAAU5rC,OAAI1G,EAAW4yC,EAAYA,EAAUlsC,OAAI1G,GAC9GwyC,GAAqB1M,EAAIn/B,EAAGy/B,EAAYK,GAAO6L,EAAYA,EAAU3rC,OAAI3G,EAAW4yC,EAAYA,EAAUjsC,OAAI3G,EAClH,CCjDA,SAAS6yC,GAAgBz6B,GACrB,OAA2B,IAApBA,EAAM4rB,WAAmC,IAAhB5rB,EAAMtQ,KAC1C,CACA,SAASgrC,GAAY16B,GACjB,OAAOy6B,GAAgBz6B,EAAM1R,IAAMmsC,GAAgBz6B,EAAMzR,EAC7D,CACA,SAASosC,GAAUl8B,EAAGC,GAClB,OAAQD,EAAEnQ,EAAEa,MAAQuP,EAAEpQ,EAAEa,KACpBsP,EAAEnQ,EAAEc,MAAQsP,EAAEpQ,EAAEc,KAChBqP,EAAElQ,EAAEY,MAAQuP,EAAEnQ,EAAEY,KAChBsP,EAAElQ,EAAEa,MAAQsP,EAAEnQ,EAAEa,GACxB,CACA,SAASwrC,GAAYlN,GACjB,OAAOpC,GAAWoC,EAAIp/B,GAAKg9B,GAAWoC,EAAIn/B,EAC9C,CChBkE,IAE5DssC,GAAS,WACX,SAAAA,KAAcl7B,EAAAA,GAAAA,GAAA,KAAAk7B,GACVj7B,KAAK44B,QAAU,EACnB,CAuGC,OAvGA14B,EAAAA,GAAAA,GAAA+6B,EAAA,EAAA91C,IAAA,MAAAuH,MACD,SAAIoT,GACAuhB,GAAcrhB,KAAK44B,QAAS94B,GAC5BA,EAAKo7B,gBACT,GAAC,CAAA/1C,IAAA,SAAAuH,MACD,SAAOoT,GAKH,GAJAyhB,GAAWvhB,KAAK44B,QAAS94B,GACrBA,IAASE,KAAKm7B,WACdn7B,KAAKm7B,cAAWnzC,GAEhB8X,IAASE,KAAKo7B,KAAM,CACpB,IAAMD,EAAWn7B,KAAK44B,QAAQ54B,KAAK44B,QAAQ5zC,OAAS,GAChDm2C,GACAn7B,KAAKw4B,QAAQ2C,EAErB,CACJ,GAAC,CAAAh2C,IAAA,WAAAuH,MACD,SAASoT,GACL,IAMIq7B,EANEE,EAAcr7B,KAAK44B,QAAQ0C,WAAU,SAACC,GAAM,OAAKz7B,IAASy7B,CAAM,IACtE,GAAoB,IAAhBF,EACA,OAAO,EAKX,IAAK,IAAIv2C,EAAIu2C,EAAav2C,GAAK,EAAGA,IAAK,CACnC,IAAMy2C,EAASv7B,KAAK44B,QAAQ9zC,GAC5B,IAAyB,IAArBy2C,EAAOlS,UAAqB,CAC5B8R,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAn7B,KAAKw4B,QAAQ2C,IACN,EAKf,GAAC,CAAAh2C,IAAA,UAAAuH,MACD,SAAQoT,EAAM07B,GACV,IAAML,EAAWn7B,KAAKo7B,KAClBt7B,IAASq7B,IAEbn7B,KAAKm7B,SAAWA,EAChBn7B,KAAKo7B,KAAOt7B,EACZA,EAAK27B,OACDN,IACAA,EAASvuC,UAAYuuC,EAASD,iBAC9Bp7B,EAAKo7B,iBACLp7B,EAAK47B,WAAaP,EACdK,IACA17B,EAAK47B,WAAWC,iBAAkB,GAElCR,EAASS,WACT97B,EAAK87B,SAAWT,EAASS,SACzB97B,EAAK87B,SAASnnC,aACV0mC,EAASU,iBAAmBV,EAAS1mC,cAEzCqL,EAAKyG,MAAQzG,EAAKyG,KAAKu1B,aACvBh8B,EAAKi8B,eAAgB,IAGP,IADIj8B,EAAKpL,QAAnBsnC,WAEJb,EAASc,QAerB,GAAC,CAAA92C,IAAA,wBAAAuH,MACD,WACIsT,KAAK44B,QAAQ1zC,SAAQ,SAAC4a,GAClB,IAAQpL,EAA0BoL,EAA1BpL,QAASwnC,EAAiBp8B,EAAjBo8B,aACjBxnC,EAAQ40B,gBAAkB50B,EAAQ40B,iBAC9B4S,GACAA,EAAaxnC,QAAQ40B,gBACjB4S,EAAaxnC,QAAQ40B,gBAEjC,GACJ,GAAC,CAAAnkC,IAAA,iBAAAuH,MACD,WACIsT,KAAK44B,QAAQ1zC,SAAQ,SAAC4a,GAClBA,EAAKlT,UAAYkT,EAAKo7B,gBAAe,EACzC,GACJ,GACA,CAAA/1C,IAAA,qBAAAuH,MAIA,WACQsT,KAAKo7B,MAAQp7B,KAAKo7B,KAAKQ,WACvB57B,KAAKo7B,KAAKQ,cAAW5zC,EAE7B,KAACizC,CAAA,CA1GU,GCFf,SAASkB,GAAyB/7B,EAAO42B,EAAWoF,GAChD,IAAI/sC,EAAY,GAOVgtC,EAAaj8B,EAAM1R,EAAEs9B,UAAYgL,EAAUtoC,EAC3C4tC,EAAal8B,EAAMzR,EAAEq9B,UAAYgL,EAAUroC,EAWjD,IAVI0tC,GAAcC,KACdjtC,EAAY,eAAHlI,OAAkBk1C,EAAU,QAAAl1C,OAAOm1C,EAAU,YAMtC,IAAhBtF,EAAUtoC,GAA2B,IAAhBsoC,EAAUroC,IAC/BU,GAAa,SAAJlI,OAAa,EAAI6vC,EAAUtoC,EAAC,MAAAvH,OAAK,EAAI6vC,EAAUroC,EAAC,OAEzDytC,EAAiB,CACjB,IAAQppC,EAA6BopC,EAA7BppC,OAAQC,EAAqBmpC,EAArBnpC,QAASC,EAAYkpC,EAAZlpC,QACrBF,IACA3D,GAAa,UAAJlI,OAAc6L,EAAM,UAC7BC,IACA5D,GAAa,WAAJlI,OAAe8L,EAAO,UAC/BC,IACA7D,GAAa,WAAJlI,OAAe+L,EAAO,SACvC,CAKA,IAAMqpC,EAAgBn8B,EAAM1R,EAAEoB,MAAQknC,EAAUtoC,EAC1C8tC,EAAgBp8B,EAAMzR,EAAEmB,MAAQknC,EAAUroC,EAIhD,OAHsB,IAAlB4tC,GAAyC,IAAlBC,IACvBntC,GAAa,SAAJlI,OAAao1C,EAAa,MAAAp1C,OAAKq1C,EAAa,MAElDntC,GAAa,MACxB,CCvCA,IAAMotC,GAAiB,SAAC59B,EAAGC,GAAC,OAAKD,EAAEo3B,MAAQn3B,EAAEm3B,KAAK,ECG5CyG,GAAQ,WACV,SAAAA,KAAc38B,EAAAA,GAAAA,GAAA,KAAA28B,GACV18B,KAAK5F,SAAW,GAChB4F,KAAK28B,SAAU,CACnB,CAaC,OAbAz8B,EAAAA,GAAAA,GAAAw8B,EAAA,EAAAv3C,IAAA,MAAAuH,MACD,SAAIkX,GACAyd,GAAcrhB,KAAK5F,SAAUwJ,GAC7B5D,KAAK28B,SAAU,CACnB,GAAC,CAAAx3C,IAAA,SAAAuH,MACD,SAAOkX,GACH2d,GAAWvhB,KAAK5F,SAAUwJ,GAC1B5D,KAAK28B,SAAU,CACnB,GAAC,CAAAx3C,IAAA,UAAAuH,MACD,SAAQ0U,GACJpB,KAAK28B,SAAW38B,KAAK5F,SAAS+rB,KAAKsW,IACnCz8B,KAAK28B,SAAU,EACf38B,KAAK5F,SAASlV,QAAQkc,EAC1B,KAACs7B,CAAA,CAjBS,GCsBd,IAAME,GAAgB,CAAC,GAAI,IAAK,IAAK,KAMjChzC,GAAK,EAKHizC,GAAsB,CACxBztC,KAAM,kBACN0tC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,GAAoB9yC,GAA6F,IAA1F+yC,EAAoB/yC,EAApB+yC,qBAAsBC,EAAahzC,EAAbgzC,cAAeC,EAAajzC,EAAbizC,cAAeC,EAAiBlzC,EAAjBkzC,kBAAmBC,EAAcnzC,EAAdmzC,eACnG,kBACI,SAAAC,EAAYC,GAAsH,IAAAn6B,EAAA,KAA3G5O,EAAY1P,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGuG,EAAMvG,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAqB,OAAlBo4C,QAA4C,IAAlBA,OAA2B,EAASA,KAAep9B,EAAAA,GAAAA,GAAA,KAAAw9B,GAI5Hv9B,KAAKpW,GAAKA,KAIVoW,KAAKy9B,YAAc,EAOnBz9B,KAAK5F,SAAW,IAAIhM,IAKpB4R,KAAKtL,QAAU,CAAC,EAMhBsL,KAAK09B,iBAAkB,EACvB19B,KAAKgwB,oBAAqB,EAO1BhwB,KAAK+7B,eAAgB,EAKrB/7B,KAAK29B,mBAAoB,EAKzB39B,KAAK49B,yBAA0B,EAK/B59B,KAAK69B,kBAAmB,EAIxB79B,KAAK89B,uBAAwB,EAC7B99B,KAAK+9B,uBAAwB,EAK7B/9B,KAAK87B,YAAa,EAIlB97B,KAAKg+B,OAAQ,EAKbh+B,KAAKi+B,YAAa,EAIlBj+B,KAAKk+B,sBAAuB,EAS5Bl+B,KAAKg3B,UAAY,CAAEtoC,EAAG,EAAGC,EAAG,GAI5BqR,KAAKm+B,cAAgB,IAAI5wC,IAEzByS,KAAKo+B,eAAiB,IAAI7wC,IAC1ByS,KAAKq+B,kBAAoB,WACjBh7B,EAAKy4B,aACLz4B,EAAKy4B,YAAa,EAClBz4B,EAAKi7B,oBAEb,EAMAt+B,KAAKu+B,iBAAmB,WC/IpC,IAAgBC,EDoJA3B,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACZ35B,EAAKo7B,MAAMv5C,QAAQw5C,IACnBr7B,EAAKo7B,MAAMv5C,QAAQy5C,IACnBt7B,EAAKo7B,MAAMv5C,QAAQ05C,IACnBv7B,EAAKo7B,MAAMv5C,QAAQ25C,IC3JnBL,ED4JO3B,GC3Jf5wC,OAAO6yC,aACP7yC,OAAO6yC,YAAYC,OAAOP,ED2JtB,EACAx+B,KAAKg/B,cAAe,EACpBh/B,KAAKi/B,WAAY,EACjBj/B,KAAKk/B,kBAAoB,EAKzBl/B,KAAKm/B,YAAc,IAAI5xC,IACvByS,KAAKw9B,UAAYA,EACjBx9B,KAAKvL,aAAeA,EACpBuL,KAAKuG,KAAOjb,EAASA,EAAOib,MAAQjb,EAAS0U,KAC7CA,KAAKo/B,KAAO9zC,EAAS,GAAHnE,QAAA+oB,EAAAA,GAAAA,GAAO5kB,EAAO8zC,MAAI,CAAE9zC,IAAU,GAChD0U,KAAK1U,OAASA,EACd0U,KAAKi2B,MAAQ3qC,EAASA,EAAO2qC,MAAQ,EAAI,EACzCuH,GAAax9B,KAAKuG,KAAK84B,sBAAsB7B,EAAWx9B,MACxD,IAAK,IAAIlb,EAAI,EAAGA,EAAIkb,KAAKo/B,KAAKp6C,OAAQF,IAClCkb,KAAKo/B,KAAKt6C,GAAGo5C,sBAAuB,EAEpCl+B,KAAKuG,OAASvG,OACdA,KAAKy+B,MAAQ,IAAI/B,GACzB,CAojCC,OApjCAx8B,EAAAA,GAAAA,GAAAq9B,EAAA,EAAAp4C,IAAA,mBAAAuH,MACD,SAAiBlF,EAAMsW,GAInB,OAHKkC,KAAKm+B,cAAczwC,IAAIlG,IACxBwY,KAAKm+B,cAAcxwC,IAAInG,EAAM,IAAIg6B,IAE9BxhB,KAAKm+B,cAAc3wC,IAAIhG,GAAM+Z,IAAIzD,EAC5C,GAAC,CAAA3Y,IAAA,kBAAAuH,MACD,SAAgBlF,GAC6C,IAAzD,IAAM83C,EAAsBt/B,KAAKm+B,cAAc3wC,IAAIhG,GAAMwX,EAAAja,UAAAC,OADpCu6C,EAAI,IAAA14C,MAAAmY,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJqgC,EAAIrgC,EAAA,GAAAna,UAAAma,GAEzBogC,GAAuBA,EAAoBjd,OAAM19B,MAA1B26C,EAA8BC,EACzD,GAAC,CAAAp6C,IAAA,eAAAuH,MACD,SAAalF,GACT,OAAOwY,KAAKm+B,cAAczwC,IAAIlG,EAClC,GAAC,CAAArC,IAAA,wBAAAuH,MACD,SAAsB8wC,EAAW19B,GAC7BE,KAAKo+B,eAAezwC,IAAI6vC,EAAW19B,EACvC,GACA,CAAA3a,IAAA,QAAAuH,MAGA,SAAME,GAAiC,IAAA4W,EAAA,KAAvBu4B,EAAah3C,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,IAAAA,UAAA,GACzB,IAAIib,KAAKpT,SAAT,CEvMZ,IAAsB+N,EFyMVqF,KAAKg+B,OEzMKrjC,EFyMgB/N,aExMR4yC,YAAkC,QAApB7kC,EAAQ+C,QFyMxCsC,KAAKpT,SAAWA,EAChB,IAAA6yC,EAA4Cz/B,KAAKtL,QAAzCzJ,EAAQw0C,EAARx0C,SAAUhC,EAAMw2C,EAANx2C,OAAQoC,EAAao0C,EAAbp0C,cAU1B,GATIA,IAAkBA,EAAc7B,SAChC6B,EAAcwB,MAAMD,GAExBoT,KAAKuG,KAAKk4B,MAAMl9B,IAAIvB,MACpBA,KAAK1U,QAAU0U,KAAK1U,OAAO8O,SAASmH,IAAIvB,MACxCA,KAAKw9B,WAAax9B,KAAKuG,KAAK63B,eAAez8B,OAAO3B,KAAKw9B,WACnDzB,IAAkB9yC,GAAUgC,KAC5B+U,KAAK+7B,eAAgB,GAErBmB,EAAsB,CACtB,IAAIwC,EACEC,EAAsB,WAAH,OAAUn8B,EAAK+C,KAAKw3B,uBAAwB,CAAK,EAC1Eb,EAAqBtwC,GAAU,WAC3B4W,EAAK+C,KAAKw3B,uBAAwB,EAClC2B,GAAeA,IACfA,EGtNpB,SAAet+B,EAAUw+B,GACrB,IAAM54C,EAAQ6xB,YAAYD,MACpBinB,EAAe,SAAfA,EAAY11C,GAAsB,IAC9B0xB,EADuB1xB,EAATkW,UACQrZ,EACxB60B,GAAW+jB,IACX19B,GAAW2gB,KAAKgd,GAChBz+B,EAASya,EAAU+jB,GAE3B,EAEA,OADA99B,GAAK+gB,KAAKgd,GAAc,GACjB,kBAAM39B,GAAW2gB,KAAKgd,EAAa,CAC9C,CH2MkCjmB,CAAM+lB,EAAqB,KACrCl2C,EAAsBC,yBACtBD,EAAsBC,wBAAyB,EAC/C8Z,EAAKi7B,MAAMv5C,QAAQ46C,IAE3B,GACJ,CACI70C,GACA+U,KAAKuG,KAAKw5B,mBAAmB90C,EAAU+U,OAGd,IAAzBA,KAAKtL,QAAQpN,SACb+D,IACCJ,GAAYhC,IACb+W,KAAKhC,iBAAiB,aAAa,SAAAhR,GAA+E,IAA5EoT,EAAKpT,EAALoT,MAAO+zB,EAAgBnnC,EAAhBmnC,iBAAkB6L,EAAwBhzC,EAAxBgzC,yBAAkCC,EAASjzC,EAAjB/D,OACrF,GAAIua,EAAK08B,yBAGL,OAFA18B,EAAK3e,YAASmD,OACdwb,EAAK28B,oBAAiBn4C,GAI1B,IAAMo4C,EAAmB58B,EAAK9O,QAAQ0I,YAClC/R,EAAcgzB,wBACdgiB,GACJC,EAA+Dj1C,EAAcuX,WAArE29B,EAAsBD,EAAtBC,uBAAwBC,EAAyBF,EAAzBE,0BAK1BC,GAAiBj9B,EAAKk9B,eACvB3F,GAAUv3B,EAAKk9B,aAAcT,IAC9BD,EAMEW,GAAgCxM,GAAoB6L,EAC1D,GAAIx8B,EAAK9O,QAAQksC,YACZp9B,EAAKk4B,YAAcl4B,EAAKk4B,WAAW9uC,UACpC+zC,GACCxM,IACIsM,IAAkBj9B,EAAKq1B,kBAAoB,CAC5Cr1B,EAAKk4B,aACLl4B,EAAK04B,aAAe14B,EAAKk4B,WACzBl4B,EAAK04B,aAAaA,kBAAel0C,GAErCwb,EAAKq9B,mBAAmBzgC,EAAOugC,GAC/B,IAAMG,EAAgBp2C,EAAAA,EAAA,GACfq1B,GAAmBqgB,EAAkB,WAAS,IACjD7lB,OAAQgmB,EACR9lB,WAAY+lB,KAEZn1C,EAAci6B,oBACd9hB,EAAK9O,QAAQksC,cACbE,EAAiBlnB,MAAQ,EACzBknB,EAAiB1xC,MAAO,GAE5BoU,EAAK2f,eAAe2d,EACxB,MAOS3M,GAC0B,IAA3B3wB,EAAK07B,mBACLY,GAAgBt8B,GAEhBA,EAAKs1B,UAAYt1B,EAAK9O,QAAQ40B,gBAC9B9lB,EAAK9O,QAAQ40B,iBAGrB9lB,EAAKk9B,aAAeT,CACxB,GA9FM,CAgGd,GAAC,CAAA96C,IAAA,UAAAuH,MACD,WACIsT,KAAKtL,QAAQzJ,UAAY+U,KAAKu4B,aAC9Bv4B,KAAKuG,KAAKk4B,MAAMlZ,OAAOvlB,MACvB,IAAM04B,EAAQ14B,KAAK24B,WACnBD,GAASA,EAAMnT,OAAOvlB,MACtBA,KAAK1U,QAAU0U,KAAK1U,OAAO8O,SAASuH,OAAO3B,MAC3CA,KAAKpT,cAAW5E,EAChBka,GAAW6+B,UAAU/gC,KAAKu+B,iBAC9B,GACA,CAAAp5C,IAAA,cAAAuH,MACA,WACIsT,KAAK89B,uBAAwB,CACjC,GAAC,CAAA34C,IAAA,gBAAAuH,MACD,WACIsT,KAAK89B,uBAAwB,CACjC,GAAC,CAAA34C,IAAA,kBAAAuH,MACD,WACI,OAAOsT,KAAK89B,uBAAyB99B,KAAK+9B,qBAC9C,GAAC,CAAA54C,IAAA,yBAAAuH,MACD,WACI,OAAQsT,KAAKgwB,oBACRhwB,KAAK1U,QAAU0U,KAAK1U,OAAO40C,2BAC5B,CACR,GACA,CAAA/6C,IAAA,cAAAuH,MACA,WACQsT,KAAKghC,oBAEThhC,KAAK87B,YAAa,EAClB97B,KAAKy+B,OAASz+B,KAAKy+B,MAAMv5C,QAAQ+7C,IACjCjhC,KAAKy9B,cACT,GAAC,CAAAt4C,IAAA,uBAAAuH,MACD,WACI,IAAQrB,EAAkB2U,KAAKtL,QAAvBrJ,cACR,OAAOA,GAAiBA,EAAcuX,WAAWjO,iBACrD,GAAC,CAAAxP,IAAA,aAAAuH,MACD,WAAyC,IAA9Bw0C,IAAqBn8C,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,KAAAA,UAAA,GAC5B,GAAIib,KAAKuG,KAAKy6B,kBACVhhC,KAAKtL,QAAQ40B,gBAAkBtpB,KAAKtL,QAAQ40B,sBAIhD,IADCtpB,KAAKuG,KAAKu1B,YAAc97B,KAAKuG,KAAK46B,eAC/BnhC,KAAK+7B,cAAT,CAEA/7B,KAAK+7B,eAAgB,EACrB,IAAK,IAAIj3C,EAAI,EAAGA,EAAIkb,KAAKo/B,KAAKp6C,OAAQF,IAAK,CACvC,IAAMgb,EAAOE,KAAKo/B,KAAKt6C,GACvBgb,EAAKo+B,sBAAuB,EAC5Bp+B,EAAKyzB,aAAa,YACdzzB,EAAKpL,QAAQksC,YACb9gC,EAAKy4B,YAAW,EAExB,CACA,IAAA6I,EAA6BphC,KAAKtL,QAA1BzJ,EAAQm2C,EAARn2C,SAAUhC,EAAMm4C,EAANn4C,OAClB,QAAiBjB,IAAbiD,GAA2BhC,EAA/B,CAEA,IAAM0L,EAAoBqL,KAAKqhC,uBAC/BrhC,KAAKshC,2BAA6B3sC,EAC5BA,EAAkBqL,KAAKvL,aAAc,SACrCzM,EACNgY,KAAKuhC,iBACLL,GAAyBlhC,KAAKwhC,gBAAgB,aANpC,CAZA,CAmBd,GACA,CAAAr8C,IAAA,YAAAuH,MACA,WAKI,GAJyBsT,KAAKghC,kBAQ1B,OAHAhhC,KAAKyhC,gBACLzhC,KAAKs+B,yBACLt+B,KAAKy+B,MAAMv5C,QAAQw8C,IAGlB1hC,KAAK87B,aAEV97B,KAAK87B,YAAa,EAOd97B,KAAKo+B,eAAensC,OACpB+N,KAAKo+B,eAAel5C,QAAQy8C,IAC5B3hC,KAAKo+B,eAAepb,SAKxBhjB,KAAKy+B,MAAMv5C,QAAQ08C,IAKnB5hC,KAAKy+B,MAAMv5C,QAAQsuC,IAKnBxzB,KAAKy+B,MAAMv5C,QAAQ28C,IACnB7hC,KAAKs+B,oBAELn8B,GAAUrW,SACVqW,GAAU4+B,YACV5+B,GAAUpW,SACd,GAAC,CAAA5G,IAAA,oBAAAuH,MACD,WACIsT,KAAKy+B,MAAMv5C,QAAQ48C,IACnB9hC,KAAKm/B,YAAYj6C,QAAQ68C,GAC7B,GAAC,CAAA58C,IAAA,2BAAAuH,MACD,WACIoV,GAAKi/B,UAAU/gC,KAAKu+B,kBAAkB,GAAO,EACjD,GAAC,CAAAp5C,IAAA,4BAAAuH,MACD,WAA4B,IAAA02B,EAAA,KAMxBthB,GAAKogB,YAAW,WACRkB,EAAK2Y,cACL3Y,EAAK7c,KAAK2xB,YAGV9U,EAAK7c,KAAK83B,mBAElB,GACJ,GACA,CAAAl5C,IAAA,iBAAAuH,MAGA,YACQsT,KAAK47B,UAAa57B,KAAKpT,WAE3BoT,KAAK47B,SAAW57B,KAAKgiC,UACzB,GAAC,CAAA78C,IAAA,eAAAuH,MACD,WACI,GAAKsT,KAAKpT,WAGVoT,KAAKuzB,eACCvzB,KAAKtL,QAAQutC,qBAAuBjiC,KAAK84B,UAC1C94B,KAAK+7B,eADV,CAWA,GAAI/7B,KAAK07B,aAAe17B,KAAK07B,WAAW9uC,SACpC,IAAK,IAAI9H,EAAI,EAAGA,EAAIkb,KAAKo/B,KAAKp6C,OAAQF,IAAK,CAC1Bkb,KAAKo/B,KAAKt6C,GAClByuC,cACT,CAEJ,IAAM2O,EAAaliC,KAAK/W,OACxB+W,KAAK/W,OAAS+W,KAAKgiC,SAAQ,GAC3BhiC,KAAKmiC,gBAAkBjV,KACvBltB,KAAK+7B,eAAgB,EACrB/7B,KAAKi3B,qBAAkBjvC,EACvBgY,KAAKwhC,gBAAgB,UAAWxhC,KAAK/W,OAAOknC,WAC5C,IAAQ9kC,EAAkB2U,KAAKtL,QAAvBrJ,cACRA,GACIA,EAAcg3B,OAAO,gBAAiBriB,KAAK/W,OAAOknC,UAAW+R,EAAaA,EAAW/R,eAAYnoC,EAtBrG,CAuBJ,GAAC,CAAA7C,IAAA,eAAAuH,MACD,WAAgC,IAAnB01C,EAAKr9C,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,UACbs9C,EAAmB36C,QAAQsY,KAAKtL,QAAQ4tC,cAAgBtiC,KAAKpT,UAC7DoT,KAAKgyB,QACLhyB,KAAKgyB,OAAOyL,cAAgBz9B,KAAKuG,KAAKk3B,aACtCz9B,KAAKgyB,OAAOoQ,QAAUA,IACtBC,GAAmB,GAEnBA,IACAriC,KAAKgyB,OAAS,CACVyL,YAAaz9B,KAAKuG,KAAKk3B,YACvB2E,MAAAA,EACAG,OAAQlF,EAAkBr9B,KAAKpT,UAC/BmL,OAAQqlC,EAAcp9B,KAAKpT,WAGvC,GAAC,CAAAzH,IAAA,iBAAAuH,MACD,WACI,GAAK4wC,EAAL,CAEA,IAAMkF,EAAmBxiC,KAAK+7B,eAAiB/7B,KAAKk+B,qBAC9CuE,EAAgBziC,KAAKi3B,kBAAoB6D,GAAY96B,KAAKi3B,iBAC1DtiC,EAAoBqL,KAAKqhC,uBACzBqB,EAAyB/tC,EACzBA,EAAkBqL,KAAKvL,aAAc,SACrCzM,EACA26C,EAA8BD,IAA2B1iC,KAAKshC,2BAChEkB,IACCC,GACG1tC,GAAaiL,KAAKvL,eAClBkuC,KACJrF,EAAet9B,KAAKpT,SAAU81C,GAC9B1iC,KAAKk+B,sBAAuB,EAC5Bl+B,KAAKk7B,iBAdC,CAgBd,GAAC,CAAA/1C,IAAA,UAAAuH,MACD,WAAgC,IA27BtBohC,EA37BF8U,IAAe79C,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,KAAAA,UAAA,GACb89C,EAAU7iC,KAAKiyB,iBACjB9B,EAAYnwB,KAAK8iC,oBAAoBD,GAUzC,OAJID,IACAzS,EAAYnwB,KAAK4iC,gBAAgBzS,IAm7B7C4S,IADcjV,EAh7BGqC,GAi7BHzhC,GACdq0C,GAAUjV,EAAIn/B,GAj7BC,CACH8uC,YAAaz9B,KAAKuG,KAAKk3B,YACvBuF,YAAaH,EACb1S,UAAAA,EACA17B,aAAc,CAAC,EACfxP,OAAQ+a,KAAKpW,GAErB,GAAC,CAAAzE,IAAA,iBAAAuH,MACD,WACI,IAAQrB,EAAkB2U,KAAKtL,QAAvBrJ,cACR,IAAKA,EACD,OAAO6hC,KACX,IAAMY,EAAMziC,EAAcsjC,qBAElBqD,EAAWhyB,KAAKuG,KAAhByrB,OAKR,OAJIA,IACA9D,GAAcJ,EAAIp/B,EAAGsjC,EAAOj6B,OAAOrJ,GACnCw/B,GAAcJ,EAAIn/B,EAAGqjC,EAAOj6B,OAAOpJ,IAEhCm/B,CACX,GAAC,CAAA3oC,IAAA,sBAAAuH,MACD,SAAoBohC,GAChB,IAAMmV,EAAmB/V,KACzBmN,GAAY4I,EAAkBnV,GAK9B,IAAK,IAAIhpC,EAAI,EAAGA,EAAIkb,KAAKo/B,KAAKp6C,OAAQF,IAAK,CACvC,IAAMgb,EAAOE,KAAKo/B,KAAKt6C,GACfktC,EAAoBlyB,EAApBkyB,OAAQt9B,EAAYoL,EAAZpL,QAChB,GAAIoL,IAASE,KAAKuG,MAAQyrB,GAAUt9B,EAAQ4tC,aAAc,CAKtD,GAAItQ,EAAOuQ,OAAQ,CACflI,GAAY4I,EAAkBnV,GAC9B,IAAgBoV,EAAeljC,KAAKuG,KAA5ByrB,OAKJkR,IACAhV,GAAc+U,EAAiBv0C,GAAIw0C,EAAWnrC,OAAOrJ,GACrDw/B,GAAc+U,EAAiBt0C,GAAIu0C,EAAWnrC,OAAOpJ,GAE7D,CACAu/B,GAAc+U,EAAiBv0C,EAAGsjC,EAAOj6B,OAAOrJ,GAChDw/B,GAAc+U,EAAiBt0C,EAAGqjC,EAAOj6B,OAAOpJ,EACpD,CACJ,CACA,OAAOs0C,CACX,GAAC,CAAA99C,IAAA,iBAAAuH,MACD,SAAeohC,GAA4B,IAAvBqV,EAAap+C,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,IAAAA,UAAA,GACvBq+C,EAAiBlW,KACvBmN,GAAY+I,EAAgBtV,GAC5B,IAAK,IAAIhpC,EAAI,EAAGA,EAAIkb,KAAKo/B,KAAKp6C,OAAQF,IAAK,CACvC,IAAMgb,EAAOE,KAAKo/B,KAAKt6C,IAClBq+C,GACDrjC,EAAKpL,QAAQ4tC,cACbxiC,EAAKkyB,QACLlyB,IAASA,EAAKyG,MACdmoB,GAAa0U,EAAgB,CACzB10C,GAAIoR,EAAKkyB,OAAOj6B,OAAOrJ,EACvBC,GAAImR,EAAKkyB,OAAOj6B,OAAOpJ,IAG1BoG,GAAa+K,EAAKrL,eAEvBi6B,GAAa0U,EAAgBtjC,EAAKrL,aACtC,CAIA,OAHIM,GAAaiL,KAAKvL,eAClBi6B,GAAa0U,EAAgBpjC,KAAKvL,cAE/B2uC,CACX,GAAC,CAAAj+C,IAAA,kBAAAuH,MACD,SAAgBohC,GACZ,IAAMuV,EAAsBnW,KAC5BmN,GAAYgJ,EAAqBvV,GACjC,IAAK,IAAIhpC,EAAI,EAAGA,EAAIkb,KAAKo/B,KAAKp6C,OAAQF,IAAK,CACvC,IAAMgb,EAAOE,KAAKo/B,KAAKt6C,GACvB,GAAKgb,EAAKlT,UAELmI,GAAa+K,EAAKrL,cAAvB,CAEA64B,GAASxtB,EAAKrL,eAAiBqL,EAAKyhC,iBACpC,IAAM3G,EAAY1N,KAElBmN,GAAYO,EADI96B,EAAKmyB,kBAErB0I,GAAoB0I,EAAqBvjC,EAAKrL,aAAcqL,EAAK87B,SAAW97B,EAAK87B,SAASzL,eAAYnoC,EAAW4yC,EALrG,CAMhB,CAIA,OAHI7lC,GAAaiL,KAAKvL,eAClBkmC,GAAoB0I,EAAqBrjC,KAAKvL,cAE3C4uC,CACX,GAAC,CAAAl+C,IAAA,iBAAAuH,MACD,SAAe0T,GACXJ,KAAKsjC,YAAcljC,EACnBJ,KAAKuG,KAAKg9B,2BACVvjC,KAAK29B,mBAAoB,CAC7B,GAAC,CAAAx4C,IAAA,aAAAuH,MACD,SAAWgI,GACPsL,KAAKtL,QAAOhK,EAAAA,EAAAA,EAAA,GACLsV,KAAKtL,SACLA,GAAO,IACVsnC,eAAiCh0C,IAAtB0M,EAAQsnC,WAA0BtnC,EAAQsnC,WAE7D,GAAC,CAAA72C,IAAA,oBAAAuH,MACD,WACIsT,KAAKgyB,YAAShqC,EACdgY,KAAK/W,YAASjB,EACdgY,KAAK47B,cAAW5zC,EAChBgY,KAAKshC,gCAA6Bt5C,EAClCgY,KAAKsjC,iBAAct7C,EACnBgY,KAAKnb,YAASmD,EACdgY,KAAK+7B,eAAgB,CACzB,GAAC,CAAA52C,IAAA,qCAAAuH,MACD,WACSsT,KAAKwjC,gBAQNxjC,KAAKwjC,eAAeC,2BACpBtjC,GAAUE,WACVL,KAAKwjC,eAAe7E,oBAAmB,EAE/C,GAAC,CAAAx5C,IAAA,qBAAAuH,MACD,WAA+C,IACvC6K,EADWmsC,EAAkB3+C,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,IAAAA,UAAA,GAO3Bq2C,EAAOp7B,KAAK2jC,UAClB3jC,KAAK29B,oBAAsB39B,KAAK29B,kBAAoBvC,EAAKuC,mBACzD39B,KAAK69B,mBAAqB79B,KAAK69B,iBAAmBzC,EAAKyC,kBACvD79B,KAAK49B,0BAA4B59B,KAAK49B,wBAA0BxC,EAAKwC,yBACrE,IAAMgG,EAAWl8C,QAAQsY,KAAKk8B,eAAiBl8B,OAASo7B,EAUxD,MALkBsI,GACbE,GAAY5jC,KAAK49B,yBAClB59B,KAAK29B,oBACmB,QAAtBpmC,EAAKyI,KAAK1U,cAA2B,IAAPiM,OAAgB,EAASA,EAAGomC,oBAC5D39B,KAAK6jC,gCACT,CAEA,IAAAC,EAA6B9jC,KAAKtL,QAA1BzL,EAAM66C,EAAN76C,OAAQgC,EAAQ64C,EAAR74C,SAIhB,GAAK+U,KAAK/W,SAAYA,GAAUgC,GAAhC,CASA,GAPA+U,KAAKyjC,yBAA2BtjC,GAAUE,WAOrCL,KAAKsjC,cAAgBtjC,KAAKmgC,eAAgB,CAE3C,IAAMqD,EAAiBxjC,KAAK+jC,6BACxBP,GAAkBA,EAAev6C,QACjC+W,KAAKwjC,eAAiBA,EACtBxjC,KAAKgkC,qCACLhkC,KAAKmgC,eAAiBjT,KACtBltB,KAAKikC,qBAAuB/W,KAC5Bb,GAAqBrsB,KAAKikC,qBAAsBjkC,KAAK/W,OAAOknC,UAAWqT,EAAev6C,OAAOknC,WAC7FkK,GAAYr6B,KAAKmgC,eAAgBngC,KAAKikC,uBAGtCjkC,KAAKwjC,eAAiBxjC,KAAKmgC,oBAAiBn4C,CAEpD,CAKA,GAAKgY,KAAKmgC,gBAAmBngC,KAAKsjC,YAAlC,CzBlqBZ,IAAyBz+C,EAAQsnC,EAAU7gC,EyB2sB/B,GApCK0U,KAAKnb,SACNmb,KAAKnb,OAASqoC,KACdltB,KAAKkkC,qBAAuBhX,MAK5BltB,KAAKmgC,gBACLngC,KAAKikC,sBACLjkC,KAAKwjC,gBACLxjC,KAAKwjC,eAAe3+C,QACpBmb,KAAKgkC,qCzBlrBIn/C,EyBmrBOmb,KAAKnb,OzBnrBJsnC,EyBmrBYnsB,KAAKmgC,ezBnrBP70C,EyBmrBuB0U,KAAKwjC,eAAe3+C,OzBlrBlFqnC,GAAiBrnC,EAAO6J,EAAGy9B,EAASz9B,EAAGpD,EAAOoD,GAC9Cw9B,GAAiBrnC,EAAO8J,EAAGw9B,EAASx9B,EAAGrD,EAAOqD,IyBsrB7BqR,KAAKsjC,aACN57C,QAAQsY,KAAKk8B,cAEbl8B,KAAKnb,OAASmb,KAAKmkC,eAAenkC,KAAK/W,OAAOknC,WAG9CkK,GAAYr6B,KAAKnb,OAAQmb,KAAK/W,OAAOknC,WAEzCtC,GAAc7tB,KAAKnb,OAAQmb,KAAKsjC,cAMhCjJ,GAAYr6B,KAAKnb,OAAQmb,KAAK/W,OAAOknC,WAKrCnwB,KAAK6jC,+BAAgC,CACrC7jC,KAAK6jC,gCAAiC,EACtC,IAAML,EAAiBxjC,KAAK+jC,6BACxBP,GACA97C,QAAQ87C,EAAetH,gBACnBx0C,QAAQsY,KAAKk8B,gBAChBsH,EAAe9uC,QAAQ4tC,cACxBkB,EAAe3+C,QACfmb,KAAKwjC,eAAiBA,EACtBxjC,KAAKgkC,qCACLhkC,KAAKmgC,eAAiBjT,KACtBltB,KAAKikC,qBAAuB/W,KAC5Bb,GAAqBrsB,KAAKikC,qBAAsBjkC,KAAKnb,OAAQ2+C,EAAe3+C,QAC5Ew1C,GAAYr6B,KAAKmgC,eAAgBngC,KAAKikC,uBAGtCjkC,KAAKwjC,eAAiBxjC,KAAKmgC,oBAAiBn4C,CAEpD,CAIA60C,GAAoBE,sBA9DV,CA5BA,CANA,CAiGd,GAAC,CAAA53C,IAAA,6BAAAuH,MACD,WACI,GAAKsT,KAAK1U,SACNgiC,GAASttB,KAAK1U,OAAOmJ,gBACrB84B,GAAevtB,KAAK1U,OAAOmJ,cAG/B,OAAIuL,KAAK1U,OAAO84C,eACLpkC,KAAK1U,OAGL0U,KAAK1U,OAAOy4C,4BAE3B,GAAC,CAAA5+C,IAAA,eAAAuH,MACD,WACI,OAAOhF,SAASsY,KAAKmgC,gBACjBngC,KAAKsjC,aACLtjC,KAAKtL,QAAQksC,aACb5gC,KAAK/W,OACb,GAAC,CAAA9D,IAAA,iBAAAuH,MACD,WACI,IAAI6K,EACE6jC,EAAOp7B,KAAK2jC,UACZC,EAAWl8C,QAAQsY,KAAKk8B,eAAiBl8B,OAASo7B,EACpDiJ,GAAU,EAuBd,IAlBIrkC,KAAK29B,oBAA6C,QAAtBpmC,EAAKyI,KAAK1U,cAA2B,IAAPiM,OAAgB,EAASA,EAAGomC,sBACtF0G,GAAU,GAMVT,IACC5jC,KAAK49B,yBAA2B59B,KAAK69B,oBACtCwG,GAAU,GAMVrkC,KAAKyjC,2BAA6BtjC,GAAUE,YAC5CgkC,GAAU,IAEVA,EAAJ,CAEA,IAAAC,EAA6BtkC,KAAKtL,QAA1BzL,EAAMq7C,EAANr7C,OAAQgC,EAAQq5C,EAARr5C,SAWhB,GANA+U,KAAK09B,gBAAkBh2C,QAASsY,KAAK1U,QAAU0U,KAAK1U,OAAOoyC,iBACvD19B,KAAK64B,kBACL74B,KAAKukC,kBACJvkC,KAAK09B,kBACN19B,KAAKsjC,YAActjC,KAAKmgC,oBAAiBn4C,GAExCgY,KAAK/W,SAAYA,GAAUgC,GAAhC,CAMAovC,GAAYr6B,KAAKmiC,gBAAiBniC,KAAK/W,OAAOknC,WnBvxB1D,SAAyBrC,EAAKkJ,EAAWwN,GAAsC,IAA5BC,EAAkB1/C,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,IAAAA,UAAA,GAC3D2/C,EAAaF,EAASx/C,OAC5B,GAAK0/C,EAAL,CAIA,IAAI5kC,EACAM,EAFJ42B,EAAUtoC,EAAIsoC,EAAUroC,EAAI,EAG5B,IAAK,IAAI7J,EAAI,EAAGA,EAAI4/C,EAAY5/C,IAAK,CAEjCsb,GADAN,EAAO0kC,EAAS1/C,IACHmyC,gBAKb,IAAMrqC,EAAWkT,EAAKlT,SAClBA,GACAA,EAASgI,OACkB,aAA3BhI,EAASgI,MAAM+vC,UAGfF,GACA3kC,EAAKpL,QAAQ4tC,cACbxiC,EAAKkyB,QACLlyB,IAASA,EAAKyG,MACdmoB,GAAaZ,EAAK,CACdp/B,GAAIoR,EAAKkyB,OAAOj6B,OAAOrJ,EACvBC,GAAImR,EAAKkyB,OAAOj6B,OAAOpJ,IAG3ByR,IAEA42B,EAAUtoC,GAAK0R,EAAM1R,EAAEoB,MACvBknC,EAAUroC,GAAKyR,EAAMzR,EAAEmB,MAEvB+9B,GAAcC,EAAK1tB,IAEnBqkC,GAAsB1vC,GAAa+K,EAAKrL,eACxCi6B,GAAaZ,EAAKhuB,EAAKrL,cAE/B,CAKAuiC,EAAUtoC,EAAIq/B,GAAciJ,EAAUtoC,GACtCsoC,EAAUroC,EAAIo/B,GAAciJ,EAAUroC,EA3C5B,CA4Cd,CmB6uBYi2C,CAAgB5kC,KAAKmiC,gBAAiBniC,KAAKg3B,UAAWh3B,KAAKo/B,KAAMwE,GACjE,IAAQ/+C,EAAWu2C,EAAXv2C,OACR,GAAKA,EAAL,CAEKmb,KAAKi3B,kBACNj3B,KAAKi3B,gBAAkBhK,KACvBjtB,KAAK6kC,6BAA+B5X,MAExC,IAAM6X,EAAiB9kC,KAAKg3B,UAAUtoC,EAChCq2C,EAAiB/kC,KAAKg3B,UAAUroC,EAChCq2C,EAA0BhlC,KAAKilC,oBAUrChZ,GAAajsB,KAAKi3B,gBAAiBj3B,KAAKmiC,gBAAiBt9C,EAAQmb,KAAKvL,cACtEuL,KAAKilC,oBAAsB9I,GAAyBn8B,KAAKi3B,gBAAiBj3B,KAAKg3B,WAC3Eh3B,KAAKilC,sBAAwBD,GAC7BhlC,KAAKg3B,UAAUtoC,IAAMo2C,GACrB9kC,KAAKg3B,UAAUroC,IAAMo2C,IACrB/kC,KAAKg/B,cAAe,EACpBh/B,KAAKk7B,iBACLl7B,KAAKwhC,gBAAgB,mBAAoB38C,IAK7Cg4C,GAAoBG,wBA7BV,CAbA,CAbA,CAwDd,GAAC,CAAA73C,IAAA,OAAAuH,MACD,WACIsT,KAAKi/B,WAAY,CAErB,GAAC,CAAA95C,IAAA,OAAAuH,MACD,WACIsT,KAAKi/B,WAAY,CAErB,GAAC,CAAA95C,IAAA,iBAAAuH,MACD,WAAiC,IAAlBw4C,IAASngD,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,KAAAA,UAAA,GAEpB,GADAib,KAAKtL,QAAQwmC,gBAAkBl7B,KAAKtL,QAAQwmC,iBACxCgK,EAAW,CACX,IAAMxM,EAAQ14B,KAAK24B,WACnBD,GAASA,EAAMwC,gBACnB,CACIl7B,KAAKk8B,eAAiBl8B,KAAKk8B,aAAatvC,WACxCoT,KAAKk8B,kBAAel0C,EAE5B,GAAC,CAAA7C,IAAA,qBAAAuH,MACD,SAAmB0T,GAA6C,IAAAyyB,EAAA,KAAtC8N,EAA4B57C,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,IAAAA,UAAA,GAC5C62C,EAAW57B,KAAK47B,SAChBuJ,EAAuBvJ,EACvBA,EAASnnC,aACT,CAAC,EACD2wC,EAAW16C,EAAA,GAAQsV,KAAKvL,cACxB6uC,EAAcrW,KACfjtB,KAAKwjC,gBACLxjC,KAAKwjC,eAAe9uC,QAAQksC,aAC7B5gC,KAAKmgC,eAAiBngC,KAAKikC,0BAAuBj8C,GAEtDgY,KAAK6jC,gCAAkClD,EACvC,IAWI0E,EAXEC,EAAiBpY,KAGjBqY,GAFiB3J,EAAWA,EAAS32C,YAAS+C,MAC/BgY,KAAK/W,OAAS+W,KAAK/W,OAAOhE,YAAS+C,GAElD0wC,EAAQ14B,KAAK24B,WACb6M,GAAgB9M,GAASA,EAAME,QAAQ5zC,QAAU,EACjDygD,EAAyB/9C,QAAQ69C,IAClCC,IAC0B,IAA3BxlC,KAAKtL,QAAQsnC,YACZh8B,KAAKo/B,KAAK73C,KAAKm+C,KACpB1lC,KAAKk/B,kBAAoB,EAEzBl/B,KAAK2lC,eAAiB,SAACrtB,GACnB,IAggBA9H,EAAQ7B,EAAMC,EAAIlpB,EAhgBZmpB,EAAWyJ,EAAS,IAC1BstB,GAAatC,EAAY50C,EAAG0R,EAAM1R,EAAGmgB,GACrC+2B,GAAatC,EAAY30C,EAAGyR,EAAMzR,EAAGkgB,GACrCgkB,EAAKgT,eAAevC,GAChBzQ,EAAKsN,gBACLtN,EAAKoR,sBACLpR,EAAK5pC,QACL4pC,EAAK2Q,gBACL3Q,EAAK2Q,eAAev6C,SACpBojC,GAAqBiZ,EAAgBzS,EAAK5pC,OAAOknC,UAAW0C,EAAK2Q,eAAev6C,OAAOknC,WAuf3F3f,EAtfWqiB,EAAKsN,eAsfRxxB,EAtfwBkkB,EAAKoR,qBAsfvBr1B,EAtf6C02B,EAsfzC5/C,EAtfyDmpB,EAufvFi3B,GAAQt1B,EAAO9hB,EAAGigB,EAAKjgB,EAAGkgB,EAAGlgB,EAAGhJ,GAChCogD,GAAQt1B,EAAO7hB,EAAGggB,EAAKhgB,EAAGigB,EAAGjgB,EAAGjJ,GAnfZ2/C,GACAtK,GAAUlI,EAAKsN,eAAgBkF,KAC/BxS,EAAK8K,mBAAoB,GAExB0H,IACDA,EAAqBnY,MACzBmN,GAAYgL,EAAoBxS,EAAKsN,iBAErCoF,IACA1S,EAAKgJ,gBAAkBuJ,ER/5B3C,SAAmBvgD,EAAQkhD,EAAQ3K,EAAMvsB,EAAU42B,EAAwBD,GACnEC,GACA5gD,EAAOkP,QAAUiI,GAAI,OAEJhU,IAAjBozC,EAAKrnC,QAAwBqnC,EAAKrnC,QAAU,EAAGimC,GAAgBnrB,IAC/DhqB,EAAOmhD,YAAchqC,QAAuBhU,IAAnB+9C,EAAOhyC,QAAwBgyC,EAAOhyC,QAAU,EAAG,EAAGmmC,GAAiBrrB,KAE3F22B,IACL3gD,EAAOkP,QAAUiI,QAAuBhU,IAAnB+9C,EAAOhyC,QAAwBgyC,EAAOhyC,QAAU,OAAoB/L,IAAjBozC,EAAKrnC,QAAwBqnC,EAAKrnC,QAAU,EAAG8a,IAK3H,IAAK,IAAI/pB,EAAI,EAAGA,EAAI60C,GAAY70C,IAAK,CACjC,IAAMmhD,EAAc,SAAH9+C,OAAYuyC,GAAQ50C,GAAE,UACnCohD,EAAepM,GAAUiM,EAAQE,GACjCE,EAAarM,GAAUsB,EAAM6K,QACZj+C,IAAjBk+C,QAA6Cl+C,IAAfm+C,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACAtM,GAAKqM,KAAkBrM,GAAKsM,IAE5BthD,EAAOohD,GAAex2C,KAAKD,IAAIwM,GAAI49B,GAASsM,GAAetM,GAASuM,GAAat3B,GAAW,IACxFle,GAAQ3C,KAAKm4C,IAAex1C,GAAQ3C,KAAKk4C,MACzCrhD,EAAOohD,IAAgB,MAI3BphD,EAAOohD,GAAeE,EAE9B,EAIIJ,EAAO/yC,QAAUooC,EAAKpoC,UACtBnO,EAAOmO,OAASgJ,GAAI+pC,EAAO/yC,QAAU,EAAGooC,EAAKpoC,QAAU,EAAG6b,GAElE,CQw3BoBu3B,CAAUhB,EAAaD,EAAsBtS,EAAKp+B,aAAcoa,EAAU42B,EAAwBD,IAEtG3S,EAAKtsB,KAAKg9B,2BACV1Q,EAAKqI,iBACLrI,EAAKqM,kBAAoBrwB,CAC7B,EACA7O,KAAK2lC,eAAe3lC,KAAKtL,QAAQksC,WAAa,IAAO,EACzD,GAAC,CAAAz7C,IAAA,iBAAAuH,MACD,SAAegI,GAAS,IAAAs+B,EAAA,KACpBhzB,KAAKwhC,gBAAgB,kBACrBxhC,KAAK64B,kBAAoB74B,KAAK64B,iBAAiBlgB,OAC3C3Y,KAAKk8B,cAAgBl8B,KAAKk8B,aAAarD,kBACvC74B,KAAKk8B,aAAarD,iBAAiBlgB,OAEnC3Y,KAAKukC,mBACLriC,GAAWpW,OAAOkU,KAAKukC,kBACvBvkC,KAAKukC,sBAAmBv8C,GAO5BgY,KAAKukC,iBAAmBziC,GAAKhW,QAAO,WAChCrC,EAAsBC,wBAAyB,EAC/CspC,EAAK6F,iBI/7BrB,SAA4BnsC,EAAOqmB,EAAWre,GAC1C,IAAM2xC,EAAgB93C,EAAc7B,GAASA,EAAQg3B,GAAYh3B,GAEjE,OADA25C,EAAcr/C,MAAMo5B,GAAmB,GAAIimB,EAAetzB,EAAWre,IAC9D2xC,EAAc59C,SACzB,CJ27BwC69C,CAAmB,EAr6BnC,IAq6BqD57C,EAAAA,EAAA,GACtDgK,GAAO,IACVgmB,SAAU,SAACpC,GACP0a,EAAK2S,eAAertB,GACpB5jB,EAAQgmB,UAAYhmB,EAAQgmB,SAASpC,EACzC,EACAmC,WAAY,WACR/lB,EAAQ+lB,YAAc/lB,EAAQ+lB,aAC9BuY,EAAKuT,mBACT,KAEAvT,EAAKkJ,eACLlJ,EAAKkJ,aAAarD,iBAAmB7F,EAAK6F,kBAE9C7F,EAAKuR,sBAAmBv8C,CAC5B,GACJ,GAAC,CAAA7C,IAAA,oBAAAuH,MACD,WACQsT,KAAKk8B,eACLl8B,KAAKk8B,aAAarD,sBAAmB7wC,EACrCgY,KAAKk8B,aAAaP,qBAAkB3zC,GAExC,IAAM0wC,EAAQ14B,KAAK24B,WACnBD,GAASA,EAAM8N,wBACfxmC,KAAKk8B,aACDl8B,KAAK64B,iBACD74B,KAAK67B,qBACD7zC,EACZgY,KAAKwhC,gBAAgB,oBACzB,GAAC,CAAAr8C,IAAA,kBAAAuH,MACD,WACQsT,KAAK64B,mBACL74B,KAAK2lC,gBAAkB3lC,KAAK2lC,eAr8BpB,KAs8BR3lC,KAAK64B,iBAAiBlgB,QAE1B3Y,KAAKumC,mBACT,GAAC,CAAAphD,IAAA,0BAAAuH,MACD,WACI,IAAM0uC,EAAOp7B,KAAK2jC,UACZO,EAAuD9I,EAAvD8I,qBAAsBr/C,EAAiCu2C,EAAjCv2C,OAAQoE,EAAyBmyC,EAAzBnyC,OAAQwL,EAAiB2mC,EAAjB3mC,aAC5C,GAAKyvC,GAAyBr/C,GAAWoE,EAAzC,CAOA,GAAI+W,OAASo7B,GACTp7B,KAAK/W,QACLA,GACAw9C,GAA0BzmC,KAAKtL,QAAQgyC,cAAe1mC,KAAK/W,OAAOknC,UAAWlnC,EAAOknC,WAAY,CAChGtrC,EAASmb,KAAKnb,QAAUqoC,KACxB,IAAMyZ,EAAUjb,GAAW1rB,KAAK/W,OAAOknC,UAAUzhC,GACjD7J,EAAO6J,EAAEa,IAAM6rC,EAAKv2C,OAAO6J,EAAEa,IAC7B1K,EAAO6J,EAAEc,IAAM3K,EAAO6J,EAAEa,IAAMo3C,EAC9B,IAAMC,EAAUlb,GAAW1rB,KAAK/W,OAAOknC,UAAUxhC,GACjD9J,EAAO8J,EAAEY,IAAM6rC,EAAKv2C,OAAO8J,EAAEY,IAC7B1K,EAAO8J,EAAEa,IAAM3K,EAAO8J,EAAEY,IAAMq3C,CAClC,CACAvM,GAAY6J,EAAsBr/C,GAMlC6pC,GAAawV,EAAsBzvC,GAOnCw3B,GAAajsB,KAAK6kC,6BAA8B7kC,KAAKmiC,gBAAiB+B,EAAsBzvC,EA/BlF,CAgCd,GAAC,CAAAtP,IAAA,qBAAAuH,MACD,SAAmBzB,EAAU6U,GACpBE,KAAKm/B,YAAYzxC,IAAIzC,IACtB+U,KAAKm/B,YAAYxxC,IAAI1C,EAAU,IAAIgwC,IAEzBj7B,KAAKm/B,YAAY3xC,IAAIvC,GAC7BsW,IAAIzB,GACV,IAAMxD,EAASwD,EAAKpL,QAAQmyC,uBAC5B/mC,EAAK04B,QAAQ,CACTp7B,WAAYd,EAASA,EAAOc,gBAAapV,EACzCwzC,sBAAuBl/B,GAAUA,EAAOwqC,4BAClCxqC,EAAOwqC,4BAA4BhnC,QACnC9X,GAEd,GAAC,CAAA7C,IAAA,SAAAuH,MACD,WACI,IAAMgsC,EAAQ14B,KAAK24B,WACnB,OAAOD,GAAQA,EAAM0C,OAASp7B,IAClC,GAAC,CAAA7a,IAAA,UAAAuH,MACD,WACI,IAAI6K,EAEJ,OADqByI,KAAKtL,QAAlBzJ,WACsC,QAA1BsM,EAAKyI,KAAK24B,kBAA+B,IAAPphC,OAAgB,EAASA,EAAG6jC,OAAgBp7B,IACtG,GAAC,CAAA7a,IAAA,cAAAuH,MACD,WACI,IAAI6K,EAEJ,OADqByI,KAAKtL,QAAlBzJ,SACqC,QAA1BsM,EAAKyI,KAAK24B,kBAA+B,IAAPphC,OAAgB,EAASA,EAAG4jC,cAAWnzC,CAChG,GAAC,CAAA7C,IAAA,WAAAuH,MACD,WACI,IAAQzB,EAAa+U,KAAKtL,QAAlBzJ,SACR,GAAIA,EACA,OAAO+U,KAAKuG,KAAK44B,YAAY3xC,IAAIvC,EACzC,GAAC,CAAA9F,IAAA,UAAAuH,MACD,WAAiE,IAAA45B,EAAAvhC,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAApDk5C,EAAU3X,EAAV2X,WAAY7gC,EAAUkpB,EAAVlpB,WAAYo+B,EAAqBlV,EAArBkV,sBACxB9C,EAAQ14B,KAAK24B,WACfD,GACAA,EAAMF,QAAQx4B,KAAMw7B,GACpByC,IACAj+B,KAAKi3B,qBAAkBjvC,EACvBgY,KAAKi+B,YAAa,GAElB7gC,GACA4C,KAAKo4B,WAAW,CAAEh7B,WAAAA,GAC1B,GAAC,CAAAjY,IAAA,WAAAuH,MACD,WACI,IAAMgsC,EAAQ14B,KAAK24B,WACnB,QAAID,GACOA,EAAMD,SAASz4B,KAK9B,GAAC,CAAA7a,IAAA,gBAAAuH,MACD,WACI,IAAQrB,EAAkB2U,KAAKtL,QAAvBrJ,cACR,GAAKA,EAAL,CAGA,IAAI07C,GAAY,EAKRtyC,EAAiBpJ,EAAjBoJ,aAQR,IAPIA,EAAazB,QACbyB,EAAaxB,SACbwB,EAAavB,SACbuB,EAAatB,WACb4zC,GAAY,GAGXA,EAAL,CAIA,IAFA,IAAMC,EAAc,CAAC,EAEZliD,EAAI,EAAGA,EAAI83C,GAAc53C,OAAQF,IAAK,CAC3C,IAAMK,EAAM,SAAWy3C,GAAc93C,GAEjC2P,EAAatP,KACb6hD,EAAY7hD,GAAOsP,EAAatP,GAChCkG,EAAc47C,eAAe9hD,EAAK,GAE1C,CAKA,IAAK,IAAMA,KAFXkG,EAAcU,SAEIi7C,EACd37C,EAAc47C,eAAe9hD,EAAK6hD,EAAY7hD,IAIlDkG,EAAc6vC,gBApBJ,CAhBA,CAqCd,GAAC,CAAA/1C,IAAA,sBAAAuH,MACD,WAAoC,IAC5B6K,EAAIoZ,EADQ/V,EAAS7V,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGvBmiD,EAAS,CAAC,EAChB,IAAKlnC,KAAKpT,UAAYoT,KAAKg+B,MACvB,OAAOkJ,EACX,IAAKlnC,KAAKi/B,UACN,MAAO,CAAEkI,WAAY,UAGrBD,EAAOC,WAAa,GAExB,IAAMxyC,EAAoBqL,KAAKqhC,uBAC/B,GAAIrhC,KAAKi+B,WAQL,OAPAj+B,KAAKi+B,YAAa,EAClBiJ,EAAOnzC,QAAU,GACjBmzC,EAAOE,cACHjrC,GAAmBvB,EAAUwsC,gBAAkB,GACnDF,EAAO73C,UAAYsF,EACbA,EAAkBqL,KAAKvL,aAAc,IACrC,OACCyyC,EAEX,IAAM9L,EAAOp7B,KAAK2jC,UAClB,IAAK3jC,KAAKi3B,kBAAoBj3B,KAAK/W,SAAWmyC,EAAKv2C,OAAQ,CACvD,IAAMwiD,EAAc,CAAC,EAerB,OAdIrnC,KAAKtL,QAAQzJ,WACbo8C,EAAYtzC,aACsB/L,IAA9BgY,KAAKvL,aAAaV,QACZiM,KAAKvL,aAAaV,QAClB,EACVszC,EAAYD,cACRjrC,GAAmBvB,EAAUwsC,gBAAkB,IAEnDpnC,KAAKg/B,eAAiBjqC,GAAaiL,KAAKvL,gBACxC4yC,EAAYh4C,UAAYsF,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNqL,KAAKg/B,cAAe,GAEjBqI,CACX,CACA,IAAMC,EAAiBlM,EAAKS,iBAAmBT,EAAK3mC,aACpDuL,KAAKunC,0BACLL,EAAO73C,UAAY8sC,GAAyBn8B,KAAK6kC,6BAA8B7kC,KAAKg3B,UAAWsQ,GAC3F3yC,IACAuyC,EAAO73C,UAAYsF,EAAkB2yC,EAAgBJ,EAAO73C,YAEhE,IAAAm4C,EAAiBxnC,KAAKi3B,gBAAdvoC,EAAC84C,EAAD94C,EAAGC,EAAC64C,EAAD74C,EA+BX,IAAK,IAAMxJ,KA9BX+hD,EAAOpyC,gBAAkB,GAAH3N,OAAiB,IAAXuH,EAAEoJ,OAAY,MAAA3Q,OAAgB,IAAXwH,EAAEmJ,OAAY,OACzDsjC,EAAKS,gBAKLqL,EAAOnzC,QACHqnC,IAASp7B,KACiG,QAAnG2Q,EAAuC,QAAjCpZ,EAAK+vC,EAAevzC,eAA4B,IAAPwD,EAAgBA,EAAKyI,KAAKvL,aAAaV,eAA4B,IAAP4c,EAAgBA,EAAK,EACjI3Q,KAAK27B,gBACD37B,KAAKvL,aAAaV,QAClBuzC,EAAetB,YAO7BkB,EAAOnzC,QACHqnC,IAASp7B,UACwBhY,IAA3Bs/C,EAAevzC,QACXuzC,EAAevzC,QACf,QAC2B/L,IAA/Bs/C,EAAetB,YACXsB,EAAetB,YACf,EAKA/3C,EACd,QAA4BjG,IAAxBs/C,EAAeniD,GAAnB,CAEA,IAAAsiD,EAA6Bx5C,EAAgB9I,GAArC0wC,EAAO4R,EAAP5R,QAAS2D,EAAOiO,EAAPjO,QAOXkO,EAAiC,SAArBR,EAAO73C,UACnBi4C,EAAeniD,GACf0wC,EAAQyR,EAAeniD,GAAMi2C,GACnC,GAAI5B,EAEA,IADA,IAAMmO,EAAMnO,EAAQx0C,OACXF,EAAI,EAAGA,EAAI6iD,EAAK7iD,IACrBoiD,EAAO1N,EAAQ10C,IAAM4iD,OAIzBR,EAAO/hD,GAAOuiD,CAlBN,CAgChB,OANI1nC,KAAKtL,QAAQzJ,WACbi8C,EAAOE,cACHhM,IAASp7B,KACH7D,GAAmBvB,EAAUwsC,gBAAkB,GAC/C,QAEPF,CACX,GAAC,CAAA/hD,IAAA,gBAAAuH,MACD,WACIsT,KAAK07B,WAAa17B,KAAK47B,cAAW5zC,CACtC,GACA,CAAA7C,IAAA,YAAAuH,MACA,WACIsT,KAAKuG,KAAKk4B,MAAMv5C,SAAQ,SAAC4a,GAAW,IAAIvI,EAAI,OAAwC,QAAhCA,EAAKuI,EAAK+4B,wBAAqC,IAAPthC,OAAgB,EAASA,EAAGohB,MAAQ,IAChI3Y,KAAKuG,KAAKk4B,MAAMv5C,QAAQw8C,IACxB1hC,KAAKuG,KAAK44B,YAAYnc,OAC1B,KAACua,CAAA,CA3rCL,EA6rCJ,CACA,SAAS/J,GAAa1zB,GAClBA,EAAK0zB,cACT,CACA,SAASqO,GAAmB/hC,GACxB,IAAIvI,EACEqkC,GAAuC,QAA1BrkC,EAAKuI,EAAK47B,kBAA+B,IAAPnkC,OAAgB,EAASA,EAAGqkC,WAAa97B,EAAK87B,SACnG,GAAI97B,EAAKg5B,UACLh5B,EAAK7W,QACL2yC,GACA97B,EAAK8nC,aAAa,aAAc,CAChC,IAAAC,EAA2D/nC,EAAK7W,OAA7CA,EAAM4+C,EAAjB1X,UAAgC2X,EAAcD,EAA3B7E,YACnB0D,EAAkB5mC,EAAKpL,QAAvBgyC,cACF9C,EAAWhI,EAAS32C,SAAW6a,EAAK7W,OAAOhE,OAG3B,SAAlByhD,EACAvZ,IAAS,SAACxB,GACN,IAAMoc,EAAenE,EACfhI,EAASoH,YAAYrX,GACrBiQ,EAASzL,UAAUxE,GACnB3mC,EAAS0mC,GAAWqc,GAC1BA,EAAax4C,IAAMtG,EAAO0iC,GAAMp8B,IAChCw4C,EAAav4C,IAAMu4C,EAAax4C,IAAMvK,CAC1C,IAEKyhD,GAA0BC,EAAe9K,EAASzL,UAAWlnC,IAClEkkC,IAAS,SAACxB,GACN,IAAMoc,EAAenE,EACfhI,EAASoH,YAAYrX,GACrBiQ,EAASzL,UAAUxE,GACnB3mC,EAAS0mC,GAAWziC,EAAO0iC,IACjCoc,EAAav4C,IAAMu4C,EAAax4C,IAAMvK,EAIlC8a,EAAKqgC,iBAAmBrgC,EAAK+4B,mBAC7B/4B,EAAK69B,mBAAoB,EACzB79B,EAAKqgC,eAAexU,GAAMn8B,IACtBsQ,EAAKqgC,eAAexU,GAAMp8B,IAAMvK,EAE5C,IAEJ,IAAMgjD,EAAc/a,KACpBhB,GAAa+b,EAAa/+C,EAAQ2yC,EAASzL,WAC3C,IAAM8X,EAAchb,KAChB2W,EACA3X,GAAagc,EAAanoC,EAAKqkC,eAAe2D,GAAgB,GAAOlM,EAASoH,aAG9E/W,GAAagc,EAAah/C,EAAQ2yC,EAASzL,WAE/C,IAAMgE,GAAoB2G,GAAYkN,GAClChI,GAA2B,EAC/B,IAAKlgC,EAAK47B,WAAY,CAClB,IAAM8H,EAAiB1jC,EAAKikC,6BAK5B,GAAIP,IAAmBA,EAAe9H,WAAY,CAC9C,IAAkBwM,EAAyC1E,EAAnD5H,SAAkCuM,EAAiB3E,EAAzBv6C,OAClC,GAAIi/C,GAAkBC,EAAc,CAChC,IAAMC,EAAmBlb,KACzBb,GAAqB+b,EAAkBxM,EAASzL,UAAW+X,EAAe/X,WAC1E,IAAMmV,EAAiBpY,KACvBb,GAAqBiZ,EAAgBr8C,EAAQk/C,EAAahY,WACrD4K,GAAUqN,EAAkB9C,KAC7BtF,GAA2B,GAE3BwD,EAAe9uC,QAAQksC,aACvB9gC,EAAKqgC,eAAiBmF,EACtBxlC,EAAKmkC,qBAAuBmE,EAC5BtoC,EAAK0jC,eAAiBA,EAE9B,CACJ,CACJ,CACA1jC,EAAK0hC,gBAAgB,YAAa,CAC9Bv4C,OAAAA,EACA2yC,SAAAA,EACAx7B,MAAO6nC,EACPD,YAAAA,EACA7T,iBAAAA,EACA6L,yBAAAA,GAER,MACK,GAAIlgC,EAAKg5B,SAAU,CACpB,IAAQxP,EAAmBxpB,EAAKpL,QAAxB40B,eACRA,GAAkBA,GACtB,CAMAxpB,EAAKpL,QAAQ0I,gBAAapV,CAC9B,CACA,SAAS02C,GAAoB5+B,GAIzB+8B,GAAoBC,aACfh9B,EAAKxU,SAQLwU,EAAKskC,iBACNtkC,EAAK69B,kBAAoB79B,EAAKxU,OAAOqyC,mBAOzC79B,EAAK89B,0BAA4B99B,EAAK89B,wBAA0Bl2C,QAAQoY,EAAK69B,mBACzE79B,EAAKxU,OAAOqyC,mBACZ79B,EAAKxU,OAAOsyC,0BAChB99B,EAAK+9B,mBAAqB/9B,EAAK+9B,iBAAmB/9B,EAAKxU,OAAOuyC,kBAClE,CACA,SAASgB,GAAgB/+B,GACrBA,EAAK69B,kBACD79B,EAAK89B,wBACD99B,EAAK+9B,kBACD,CAChB,CACA,SAASiE,GAAchiC,GACnBA,EAAKgiC,eACT,CACA,SAASJ,GAAkB5hC,GACvBA,EAAK4hC,mBACT,CACA,SAASE,GAAoB9hC,GACzB,IAAQzU,EAAkByU,EAAKpL,QAAvBrJ,cACJA,GAAiBA,EAAcuX,WAAWylC,uBAC1Ch9C,EAAcg3B,OAAO,uBAEzBviB,EAAKw9B,gBACT,CACA,SAASwC,GAAgBhgC,GACrBA,EAAKggC,kBACLhgC,EAAKwjC,YAAcxjC,EAAKqgC,eAAiBrgC,EAAKjb,YAASmD,CAC3D,CACA,SAAS22C,GAAmB7+B,GACxBA,EAAK6+B,oBACT,CACA,SAASC,GAAe9+B,GACpBA,EAAK8+B,gBACT,CACA,SAASqC,GAAcnhC,GACnBA,EAAKmhC,eACT,CACA,SAASc,GAAoBrJ,GACzBA,EAAM4P,oBACV,CACA,SAAS1C,GAAap1B,EAAQpQ,EAAO1a,GACjC8qB,EAAOwb,UAAYhwB,GAAIoE,EAAM4rB,UAAW,EAAGtmC,GAC3C8qB,EAAO1gB,MAAQkM,GAAIoE,EAAMtQ,MAAO,EAAGpK,GACnC8qB,EAAO1Y,OAASsI,EAAMtI,OACtB0Y,EAAOub,YAAc3rB,EAAM2rB,WAC/B,CACA,SAAS+Z,GAAQt1B,EAAQ7B,EAAMC,EAAIlpB,GAC/B8qB,EAAOjhB,IAAMyM,GAAI2S,EAAKpf,IAAKqf,EAAGrf,IAAK7J,GACnC8qB,EAAOhhB,IAAMwM,GAAI2S,EAAKnf,IAAKof,EAAGpf,IAAK9J,EACvC,CAKA,SAASggD,GAAoB5lC,GACzB,OAAQA,EAAK+7B,sBAAwD7zC,IAArC8X,EAAK+7B,gBAAgBmK,WACzD,CACA,IAAM3F,GAA0B,CAC5BptB,SAAU,IACVhJ,KAAM,CAAC,GAAK,EAAG,GAAK,IAExB,SAAS03B,GAAe7hC,EAAM09B,GAM1B,IADA,IAAI+K,EAAazoC,EAAKyG,KACbzhB,EAAIgb,EAAKs/B,KAAKp6C,OAAS,EAAGF,GAAK,EAAGA,IACvC,GAAI4C,QAAQoY,EAAKs/B,KAAKt6C,GAAG8H,UAAW,CAChC27C,EAAazoC,EAAKs/B,KAAKt6C,GACvB,KACJ,CAEJ,IACM6V,GADgB4tC,GAAcA,IAAezoC,EAAKyG,KAAOgiC,EAAW37C,SAAW5G,UACvDwiD,cAAc,wBAADrhD,OAAyBq2C,EAAS,OACzE7iC,GACAmF,EAAKjT,MAAM8N,GAAS,EAC5B,CACA,SAASooC,GAAUpX,GACfA,EAAKp8B,IAAME,KAAKQ,MAAM07B,EAAKp8B,KAC3Bo8B,EAAKn8B,IAAMC,KAAKQ,MAAM07B,EAAKn8B,IAC/B,CAKA,SAASi3C,GAA0BC,EAAe9K,EAAU3yC,GACxD,MAA0B,aAAlBy9C,GACe,oBAAlBA,IACI9a,GAAOoP,GAAYY,GAAWZ,GAAY/xC,GAAS,GAChE,CKt7CA,IAAMw/C,GAAyBxL,GAAqB,CAChDC,qBAAsB,SAAC32C,EAAK87B,GAAM,OAAKzkB,GAAYrX,EAAK,SAAU87B,EAAO,EACzE+a,cAAe,iBAAO,CAClB1uC,EAAG1I,SAAS0iD,gBAAgBC,YAAc3iD,SAAS4iD,KAAKD,WACxDh6C,EAAG3I,SAAS0iD,gBAAgBG,WAAa7iD,SAAS4iD,KAAKC,UAC1D,EACDxL,kBAAmB,kBAAM,CAAI,ICN3BvL,GAAqB,CACvBtoC,aAASxB,GAEP8gD,GAAqB7L,GAAqB,CAC5CG,cAAe,SAACxwC,GAAQ,MAAM,CAC1B8B,EAAG9B,EAAS+7C,WACZh6C,EAAG/B,EAASi8C,UACf,EACD1L,cAAe,WACX,IAAKrL,GAAmBtoC,QAAS,CAC7B,IAAMu/C,EAAe,IAAIN,GAAuB,EAAG,CAAC,GACpDM,EAAal8C,MAAMZ,QACnB88C,EAAa3Q,WAAW,CAAEkK,cAAc,IACxCxQ,GAAmBtoC,QAAUu/C,CACjC,CACA,OAAOjX,GAAmBtoC,OAC9B,EACA8zC,eAAgB,SAAC1wC,EAAUF,GACvBE,EAASgI,MAAMvF,eAAsBrH,IAAV0E,EAAsBA,EAAQ,MAC7D,EACA2wC,kBAAmB,SAACzwC,GAAQ,OAAKlF,QAAuD,UAA/CuE,OAAOuqC,iBAAiB5pC,GAAUo8C,SAAqB,IClB9FrgD,GAAO,CACTI,IAAK,CACD8W,QAASk1B,IAEbpsC,KAAM,CACFkX,QAAS60B,GACT6I,eAAgBuL,GAChB/9C,cAAAA,KCJFk+C,GAAiB,IAAI76C,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,MAEE86C,GAAkB,SAAC/jD,GAAG,OAAK8jD,GAAev7C,IAAIvI,EAAI,EAIlDgkD,GAAgB,SAACviD,GAAC,OAAKA,IAAM8I,GAAU9I,IAAMgK,EAAE,EAC/Cw4C,GAAmB,SAACC,EAAQC,GAAG,OAAK15C,WAAWy5C,EAAO54C,MAAM,MAAM64C,GAAK,EACvEC,GAAyB,SAACC,EAAMC,GAAI,OAAK,SAACC,EAAKv/C,GAAoB,IAAhBkF,EAASlF,EAATkF,UACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,IAAMs6C,EAAWt6C,EAAUie,MAAM,sBACjC,GAAIq8B,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAGrC,IAAMJ,EAASh6C,EAAUie,MAAM,oBAC/B,OAAI+7B,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAGnB,CAAC,EACKI,GAAgB,IAAIx7C,IAAI,CAAC,IAAK,IAAK,MACnCy7C,GAAgC37C,EAAmB5J,QAAO,SAACa,GAAG,OAAMykD,GAAcl8C,IAAIvI,EAAI,IAehG,IAAM2kD,GAAmB,CAErBj4C,MAAO,SAAA7E,EAAAs5B,GAAA,IAAG53B,EAAC1B,EAAD0B,EAACq7C,EAAAzjB,EAAM5zB,YAAAA,OAAW,IAAAq3C,EAAG,IAAGA,EAAAC,EAAA1jB,EAAE9zB,aAAAA,OAAY,IAAAw3C,EAAG,IAAGA,EAAA,OAAOt7C,EAAEc,IAAMd,EAAEa,IAAMK,WAAW8C,GAAe9C,WAAW4C,EAAa,EAC/HT,OAAQ,SAAAk4C,EAAAC,GAAA,IAAGv7C,EAACs7C,EAADt7C,EAACw7C,EAAAD,EAAM33C,WAAAA,OAAU,IAAA43C,EAAG,IAAGA,EAAAC,EAAAF,EAAEz3C,cAAAA,OAAa,IAAA23C,EAAG,IAAGA,EAAA,OAAOz7C,EAAEa,IAAMb,EAAEY,IAAMK,WAAW2C,GAAc3C,WAAW6C,EAAc,EAChIP,IAAK,SAACw3C,EAAKW,GAAA,IAAIn4C,EAAGm4C,EAAHn4C,IAAG,OAAOtC,WAAWsC,EAAI,EACxCG,KAAM,SAACq3C,EAAKY,GAAA,IAAIj4C,EAAIi4C,EAAJj4C,KAAI,OAAOzC,WAAWyC,EAAK,EAC3CD,OAAQ,SAAAm4C,EAAAC,GAAA,IAAG77C,EAAC47C,EAAD57C,EAAOuD,EAAGs4C,EAAHt4C,IAAG,OAAOtC,WAAWsC,IAAQvD,EAAEa,IAAMb,EAAEY,IAAI,EAC7D4C,MAAO,SAAAs4C,EAAAC,GAAA,IAAGh8C,EAAC+7C,EAAD/7C,EAAO2D,EAAIq4C,EAAJr4C,KAAI,OAAOzC,WAAWyC,IAAS3D,EAAEc,IAAMd,EAAEa,IAAI,EAE9Db,EAAG66C,GAAuB,EAAG,IAC7B56C,EAAG46C,GAAuB,EAAG,KA+B3BoB,GAAmC,SAACt/C,EAAexG,GAA4C,IAApCiT,EAAM/S,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGoY,EAAapY,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3FF,EAAM6F,EAAA,GAAQ7F,GACdsY,EAAazS,EAAA,GAAQyS,GACrB,IAAMytC,EAAuBzmD,OAAOD,KAAKW,GAAQP,OAAO4kD,IAGpD2B,EAAyB,GACzBC,GAAsC,EACpCC,EAAuB,GAkF7B,GAjFAH,EAAqB1lD,SAAQ,SAACC,GAC1B,IAAMuH,EAAQrB,EAAc64B,SAAS/+B,GACrC,GAAKkG,EAAc44B,SAAS9+B,GAA5B,CAEA,IAGI6lD,EAHAr8B,EAAO7W,EAAO3S,GACd8lD,EAAWpnB,GAAuBlV,GAChCC,EAAK/pB,EAAOM,GAMlB,GAAI2W,GAAkB8S,GAAK,CACvB,IAAMs8B,EAAet8B,EAAG5pB,OAClBmmD,EAAsB,OAAVv8B,EAAG,GAAc,EAAI,EACvCD,EAAOC,EAAGu8B,GACVF,EAAWpnB,GAAuBlV,GAClC,IAAK,IAAI7pB,EAAIqmD,EAAWrmD,EAAIomD,GAKV,OAAVt8B,EAAG9pB,GAL+BA,IAOjCkmD,EAMD/hC,GAAU4a,GAAuBjV,EAAG9pB,MAAQkmD,EAAQ,2CALpDA,EAASnnB,GAAuBjV,EAAG9pB,IACnCmkB,GAAU+hC,IAAWC,GAChB9B,GAAc8B,IAAa9B,GAAc6B,GAAU,gEAMpE,MAEIA,EAASnnB,GAAuBjV,GAEpC,GAAIq8B,IAAaD,EAGb,GAAI7B,GAAc8B,IAAa9B,GAAc6B,GAAS,CAClD,IAAMxhD,EAAUkD,EAAMc,MACC,kBAAZhE,GACPkD,EAAMiB,IAAIiC,WAAWpG,IAEP,kBAAPolB,EACP/pB,EAAOM,GAAOyK,WAAWgf,GAEpB/nB,MAAMC,QAAQ8nB,IAAOo8B,IAAWp6C,KACrC/L,EAAOM,GAAOypB,EAAGlE,IAAI9a,YAE7B,MACuB,OAAbq7C,QAAkC,IAAbA,OAAsB,EAASA,EAAS57C,aACvD,OAAX27C,QAA8B,IAAXA,OAAoB,EAASA,EAAO37C,aAC9C,IAATsf,GAAqB,IAAPC,GAGF,IAATD,EACAjiB,EAAMiB,IAAIq9C,EAAO37C,UAAUsf,IAG3B9pB,EAAOM,GAAO8lD,EAAS57C,UAAUuf,IAMhCk8B,IACDD,EApIpB,SAAyCx/C,GACrC,IAAM+/C,EAAoB,GAW1B,OAVAvB,GAA8B3kD,SAAQ,SAACC,GACnC,IAAMuH,EAAQrB,EAAc64B,SAAS/+B,QACvB6C,IAAV0E,IACA0+C,EAAkB1mD,KAAK,CAACS,EAAKuH,EAAMc,QACnCd,EAAMiB,IAAIxI,EAAImJ,WAAW,SAAW,EAAI,GAEhD,IAEI88C,EAAkBpmD,QAClBqG,EAAcU,SACXq/C,CACX,CAwHwBC,CAAgChgD,GACpCy/C,GAAsC,GAE1CC,EAAqBrmD,KAAKS,GAC1BgY,EAAchY,QACa6C,IAAvBmV,EAAchY,GACRgY,EAAchY,GACdN,EAAOM,GACjBuH,EAAM4+C,KAAK18B,GA1ET,CA6Ed,IACIm8B,EAAqB/lD,OAAQ,CAC7B,IAAMumD,EAAUR,EAAqBh9C,QAAQ,WAAa,EACpD9B,OAAOu/C,YACP,KACAC,EA3HmB,SAAC5mD,EAAQwG,EAAeqgD,GACrD,IAAMC,EAAatgD,EAAcsjC,qBAC3Bh0B,EAAUtP,EAAc7B,QACxBoiD,EAAuBpV,iBAAiB77B,GACtCgqC,EAAYiH,EAAZjH,QACF7sC,EAAS,CAAC,EAGA,SAAZ6sC,GACAt5C,EAAc47C,eAAe,UAAWpiD,EAAO8/C,SAAW,SAK9D+G,EAAYxmD,SAAQ,SAACC,GACjB2S,EAAO3S,GAAO2kD,GAAiB3kD,GAAKwmD,EAAYC,EACpD,IAEAvgD,EAAcU,SACd,IAAM8/C,EAAaxgD,EAAcsjC,qBAQjC,OAPA+c,EAAYxmD,SAAQ,SAACC,GAGjB,IAAMuH,EAAQrB,EAAc64B,SAAS/+B,GACrCuH,GAASA,EAAM4+C,KAAKxzC,EAAO3S,IAC3BN,EAAOM,GAAO2kD,GAAiB3kD,GAAK0mD,EAAYD,EACpD,IACO/mD,CACX,CA+FgCinD,CAAyBjnD,EAAQwG,EAAe0/C,GAaxE,OAXIF,EAAuB7lD,QACvB6lD,EAAuB3lD,SAAQ,SAAA6mD,GAAkB,IAAAC,GAAAniC,EAAAA,GAAAA,GAAAkiC,EAAA,GAAhB5mD,EAAG6mD,EAAA,GAAEt/C,EAAKs/C,EAAA,GACvC3gD,EAAc64B,SAAS/+B,GAAKwI,IAAIjB,EACpC,IAGJrB,EAAcU,SAEVhG,GAAyB,OAAZwlD,GACbt/C,OAAOggD,SAAS,CAAE/5C,IAAKq5C,IAEpB,CAAE1mD,OAAQ4mD,EAAiBtuC,cAAAA,EACtC,CAEI,MAAO,CAAEtY,OAAAA,EAAQsY,cAAAA,EAEzB,EAQA,SAAS+uC,GAAe7gD,EAAexG,EAAQiT,EAAQqF,GACnD,OAxMqB,SAACtY,GACtB,OAAOV,OAAOD,KAAKW,GAAQ0C,KAAK2hD,GACpC,CAsMWiD,CAAiBtnD,GAClB8lD,GAAiCt/C,EAAexG,EAAQiT,EAAQqF,GAChE,CAAEtY,OAAAA,EAAQsY,cAAAA,EACpB,CCvNA,ICNMivC,GAAuB,CAAE5iD,QAAS,MAClC6iD,GAA2B,CAAE7iD,SAAS,GCF5C,IAAM8iD,GAAqB,IAAIvmC,Q,kCCoBzBwmC,GAAepoD,OAAOD,KAAKgF,GAC3BsjD,GAAcD,GAAavnD,OAC3BynD,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkBxlD,EAAalC,OAK/B2nD,GAAa,WACf,SAAAA,EAAAxiD,GAAiG,IAAAkZ,EAAA,KAAnF/X,EAAMnB,EAANmB,OAAQjE,EAAK8C,EAAL9C,MAAOmE,EAAerB,EAAfqB,gBAAiBC,EAAmBtB,EAAnBsB,oBAAqBL,EAAWjB,EAAXiB,YAAgBsJ,EAAO3P,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,GAAAA,UAAA,GAAG,CAAC,GAACgb,EAAAA,GAAAA,GAAA,KAAA4sC,GAK3F3sC,KAAKxW,QAAU,KAIfwW,KAAK5F,SAAW,IAAIhM,IAIpB4R,KAAKvY,eAAgB,EACrBuY,KAAK5Y,uBAAwB,EAQ7B4Y,KAAKslB,mBAAqB,KAM1BtlB,KAAK/F,OAAS,IAAI1M,IAIlByS,KAAKvV,SAAW,CAAC,EAKjBuV,KAAK4sC,mBAAqB,IAAIr/C,IAM9ByS,KAAK6sC,iBAAmB,CAAC,EAIzB7sC,KAAKgiB,OAAS,CAAC,EAMfhiB,KAAK8sC,uBAAyB,CAAC,EAC/B9sC,KAAK+sC,aAAe,kBAAM1pC,EAAKgf,OAAO,SAAUhf,EAAK5O,aAAa,EAClEuL,KAAKjU,OAAS,WACLsX,EAAK7Z,UAEV6Z,EAAK2pC,eACL3pC,EAAK4pC,eAAe5pC,EAAK7Z,QAAS6Z,EAAKnI,YAAamI,EAAKhc,MAAMuN,MAAOyO,EAAKxI,YAC/E,EACAmF,KAAKk7B,eAAiB,kBAAMp5B,GAAK/V,OAAOsX,EAAKtX,QAAQ,GAAO,EAAK,EACjE,IAAQ0I,EAA8BrJ,EAA9BqJ,aAAcyG,EAAgB9P,EAAhB8P,YACtB8E,KAAKvL,aAAeA,EACpBuL,KAAKktC,WAAUxiD,EAAA,GAAQ+J,GACvBuL,KAAKmtC,cAAgB9lD,EAAMU,QAAO2C,EAAA,GAAQ+J,GAAiB,CAAC,EAC5DuL,KAAK9E,YAAcA,EACnB8E,KAAK1U,OAASA,EACd0U,KAAK3Y,MAAQA,EACb2Y,KAAKxU,gBAAkBA,EACvBwU,KAAKi2B,MAAQ3qC,EAASA,EAAO2qC,MAAQ,EAAI,EACzCj2B,KAAKvU,oBAAsBA,EAC3BuU,KAAKtL,QAAUA,EACfsL,KAAK5Y,sBAAwBA,EAAsBC,GACnD2Y,KAAKvY,cAAgBA,EAAcJ,GAC/B2Y,KAAKvY,gBACLuY,KAAK6lB,gBAAkB,IAAIz3B,KAE/B4R,KAAK+nB,uBAAyBrgC,QAAQ4D,GAAUA,EAAO9B,SAWvD,IAAA4jD,EAA+CptC,KAAK3E,4BAA4BhU,EAAO,CAAC,GAAhFw9B,EAAUuoB,EAAVvoB,WAAewoB,EAAmB71C,GAAA41C,EAAAx0C,IAC1C,IAAK,IAAMzT,KAAOkoD,EAAqB,CACnC,IAAM3gD,EAAQ2gD,EAAoBloD,QACR6C,IAAtByM,EAAatP,IAAsBoJ,EAAc7B,KACjDA,EAAMiB,IAAI8G,EAAatP,IAAM,GACzBg8B,GAAwB0D,IACxBA,EAAWtjB,IAAIpc,GAG3B,CACJ,CA8WC,OA7WD+a,EAAAA,GAAAA,GAAAysC,EAAA,EAAAxnD,IAAA,8BAAAuH,MAOA,SAA4B4gD,EAAQC,GAChC,MAAO,CAAC,CACZ,GAAC,CAAApoD,IAAA,QAAAuH,MACD,SAAME,GAAU,IAAA4W,EAAA,KACZxD,KAAKxW,QAAUoD,EACf0/C,GAAmB3+C,IAAIf,EAAUoT,MAC7BA,KAAKnF,YACLmF,KAAKnF,WAAWhO,MAAMD,GAEtBoT,KAAK1U,QAAU0U,KAAKvY,gBAAkBuY,KAAK5Y,wBAC3C4Y,KAAKwtC,sBAAwBxtC,KAAK1U,OAAOmiD,gBAAgBztC,OAE7DA,KAAK/F,OAAO/U,SAAQ,SAACwH,EAAOvH,GAAG,OAAKqe,EAAKkqC,kBAAkBvoD,EAAKuH,EAAM,IACjE2/C,GAAyB7iD,SC1JtC,WAEI,GADA6iD,GAAyB7iD,SAAU,EAC9BzD,EAEL,GAAIkG,OAAO0hD,WAAY,CACnB,IAAMC,EAAmB3hD,OAAO0hD,WAAW,4BACrCE,EAA8B,WAAH,OAAUzB,GAAqB5iD,QAAUokD,EAAiBrqC,OAAO,EAClGqqC,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIzB,GAAqB5iD,SAAU,CAEvC,CD8IYukD,GAEJ/tC,KAAKslB,mBAC4B,UAA7BtlB,KAAKvU,sBAE8B,WAA7BuU,KAAKvU,qBAED2gD,GAAqB5iD,SAI/BwW,KAAK1U,QACL0U,KAAK1U,OAAO8O,SAASmH,IAAIvB,MAC7BA,KAAKlU,OAAOkU,KAAK3Y,MAAO2Y,KAAKxU,gBACjC,GAAC,CAAArG,IAAA,UAAAuH,MACD,WAQI,IAAK,IAAMvH,KAPXmnD,GAAAA,OAA0BtsC,KAAKxW,SAC/BwW,KAAKnF,YAAcmF,KAAKnF,WAAW/N,UACnCoV,GAAWpW,OAAOkU,KAAK+sC,cACvB7qC,GAAWnW,OAAOiU,KAAKjU,QACvBiU,KAAK4sC,mBAAmB1nD,SAAQ,SAACqgC,GAAM,OAAKA,GAAQ,IACpDvlB,KAAKwtC,uBAAyBxtC,KAAKwtC,wBACnCxtC,KAAK1U,QAAU0U,KAAK1U,OAAO8O,SAASuH,OAAO3B,MACzBA,KAAKgiB,OACnBhiB,KAAKgiB,OAAO78B,GAAK69B,QAErB,IAAK,IAAM79B,KAAO6a,KAAKvV,SACnBuV,KAAKvV,SAAStF,GAAK2H,UAEvBkT,KAAKxW,QAAU,IACnB,GAAC,CAAArE,IAAA,oBAAAuH,MACD,SAAkBvH,EAAKuH,GAAO,IAAA02B,EAAA,KACpB4qB,EAAmB7/C,EAAeT,IAAIvI,GACtC8oD,EAAiBvhD,EAAMi2B,GAAG,UAAU,SAACurB,GACvC9qB,EAAK3uB,aAAatP,GAAO+oD,EACzB9qB,EAAK/7B,MAAMqzB,UACP5Y,GAAKhW,OAAOs3B,EAAK2pB,cAAc,GAAO,GACtCiB,GAAoB5qB,EAAKvoB,aACzBuoB,EAAKvoB,WAAWgjC,kBAAmB,EAE3C,IACMsQ,EAAwBzhD,EAAMi2B,GAAG,gBAAiB3iB,KAAKk7B,gBAC7Dl7B,KAAK4sC,mBAAmBj/C,IAAIxI,GAAK,WAC7B8oD,IACAE,GACJ,GACJ,GAAC,CAAAhpD,IAAA,mBAAAuH,MACD,SAAiB0hD,GAIb,OAAKpuC,KAAKxW,SACLwW,KAAKquC,0BACNruC,KAAK5Q,OAASg/C,EAAMh/C,KAGjB4Q,KAAKquC,yBAAyBruC,KAAKxW,QAAS4kD,EAAM5kD,SAF9C,CAGf,GAAC,CAAArE,IAAA,eAAAuH,MACD,SAAAM,EAA6CT,EAAUnC,EAAmBe,EAAcmB,GAepF,IAf8G,IAC1GgiD,EACAvjD,EAF0G8nC,EAAA,KAAtF0b,GAALvhD,EAARoN,SAA0B5C,GAAAxK,EAAAwhD,KAe5B1pD,EAAI,EAAGA,EAAI0nD,GAAa1nD,IAAK,CAClC,IAAM0C,EAAO+kD,GAAaznD,GAC1B2pD,EAA2GvlD,EAAmB1B,GAAtH4B,EAASqlD,EAATrlD,UAAoBslD,EAAkBD,EAA3B5uC,QAA6B09B,EAAckR,EAAdlR,eAA+BoR,EAAsBF,EAArC1jD,cAC5DwyC,IACA+Q,EAA4B/Q,GAC5Bn0C,EAAUmlD,MACLvuC,KAAKvV,SAASjD,IAASknD,IACxB1uC,KAAKvV,SAASjD,GAAQ,IAAIknD,EAAmB1uC,OAE7C2uC,IACA5jD,EAAgB4jD,GAG5B,CACA,IAAK3uC,KAAKnF,YAAcyzC,EAA2B,CAC/CtuC,KAAKnF,WAAa,IAAIyzC,EAA0BnjD,EAAc6U,KAAKvL,aAAcuL,KAAK1U,QAAU0U,KAAK1U,OAAOuP,YAC5G,IAAQ5P,EAAuEsjD,EAAvEtjD,SAAUhC,EAA6DslD,EAA7DtlD,OAAQN,EAAqD4lD,EAArD5lD,KAAMwoC,EAA+Cod,EAA/Cpd,gBAAiBmR,EAA8BiM,EAA9BjM,aAAc1B,EAAgB2N,EAAhB3N,WAC/D5gC,KAAKnF,WAAWu9B,WAAW,CACvBntC,SAAAA,EACAhC,OAAAA,EACAg5C,oBAAqBv6C,QAAQiB,IACxBwoC,GAAmB7qC,EAAY6qC,GACpC9lC,cAAe2U,KACfk7B,eAAgB,kBAAMrI,EAAKqI,gBAAgB,EAQ3CwL,cAAiC,kBAAXz9C,EAAsBA,EAAS,OACrD49C,uBAAwBv6C,EACxBg2C,aAAAA,EACA1B,WAAAA,GAER,CACA,OAAO71C,CACX,GAAC,CAAA5F,IAAA,iBAAAuH,MACD,WACI,IAAK,IAAMvH,KAAO6a,KAAKvV,SAAU,CAC7B,IAAMmkD,EAAU5uC,KAAKvV,SAAStF,GAC1BypD,EAAQ3uC,UACR2uC,EAAQ9iD,OAAOkU,KAAK3Y,MAAO2Y,KAAK1E,YAGhCszC,EAAQ/hD,QACR+hD,EAAQ3uC,WAAY,EAE5B,CACJ,GAAC,CAAA9a,IAAA,eAAAuH,MACD,WACIsT,KAAK6uC,MAAM7uC,KAAK9E,YAAa8E,KAAKvL,aAAcuL,KAAKtL,QAASsL,KAAK3Y,MACvE,GACA,CAAAlC,IAAA,qBAAAuH,MAKA,WACI,OAAOsT,KAAKxW,QACNwW,KAAK8uC,2BAA2B9uC,KAAKxW,QAASwW,KAAK3Y,OACnD6lC,IACV,GAAC,CAAA/nC,IAAA,iBAAAuH,MACD,SAAevH,GACX,OAAO6a,KAAKvL,aAAatP,EAC7B,GAAC,CAAAA,IAAA,iBAAAuH,MACD,SAAevH,EAAKuH,GAChBsT,KAAKvL,aAAatP,GAAOuH,CAC7B,GACA,CAAAvH,IAAA,uBAAAuH,MAOA,SAAqB7H,GAA0B,IAAlBkqD,IAAShqD,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,KAAAA,UAAA,GAClC,OAAOib,KAAKgvC,iCAAiCnqD,EAAQmb,KAAK3Y,MAAO0nD,EACrE,GACA,CAAA5pD,IAAA,SAAAuH,MAIA,SAAOrF,EAAOmE,IACNnE,EAAMsN,mBAAqBqL,KAAK3Y,MAAMsN,oBACtCqL,KAAKk7B,iBAETl7B,KAAK1E,UAAY0E,KAAK3Y,MACtB2Y,KAAK3Y,MAAQA,EACb2Y,KAAKwpB,oBAAsBxpB,KAAKxU,gBAChCwU,KAAKxU,gBAAkBA,EAIvB,IAAK,IAAI1G,EAAI,EAAGA,EAAI2nD,GAAkBznD,OAAQF,IAAK,CAC/C,IAAMK,EAAMsnD,GAAkB3nD,GAC1Bkb,KAAK8sC,uBAAuB3nD,KAC5B6a,KAAK8sC,uBAAuB3nD,YACrB6a,KAAK8sC,uBAAuB3nD,IAEvC,IAAM8pD,EAAW5nD,EAAM,KAAOlC,GAC1B8pD,IACAjvC,KAAK8sC,uBAAuB3nD,GAAO6a,KAAK2iB,GAAGx9B,EAAK8pD,GAExD,CACAjvC,KAAK6sC,iBE5Ub,SAAqClyC,EAAS8N,EAAMC,GAChD,IAAQmc,EAAepc,EAAfoc,WACR,IAAK,IAAM1/B,KAAOsjB,EAAM,CACpB,IAAMymC,EAAYzmC,EAAKtjB,GACjBgqD,EAAYzmC,EAAKvjB,GACvB,GAAIoJ,EAAc2gD,GAKdv0C,EAAQwpB,SAASh/B,EAAK+pD,GAClB/tB,GAAwB0D,IACxBA,EAAWtjB,IAAIpc,QAUlB,GAAIoJ,EAAc4gD,GAKnBx0C,EAAQwpB,SAASh/B,EAAKu+B,GAAYwrB,EAAW,CAAEtxB,MAAOjjB,KAClDwmB,GAAwB0D,IACxBA,EAAWU,OAAOpgC,QAGrB,GAAIgqD,IAAcD,EAMnB,GAAIv0C,EAAQspB,SAAS9+B,GAAM,CACvB,IAAMiqD,EAAgBz0C,EAAQupB,SAAS/+B,IAEtCiqD,EAAc3sB,aAAe2sB,EAAczhD,IAAIuhD,EACpD,KACK,CACD,IAAMhB,EAAcvzC,EAAQ00C,eAAelqD,GAC3CwV,EAAQwpB,SAASh/B,EAAKu+B,QAA4B17B,IAAhBkmD,EAA4BA,EAAcgB,EAAW,CAAEtxB,MAAOjjB,IACpG,CAER,CAEA,IAAK,IAAMxV,KAAOujB,OACI1gB,IAAdygB,EAAKtjB,IACLwV,EAAQ20C,YAAYnqD,GAE5B,OAAOsjB,CACX,CFqRgC8mC,CAA4BvvC,KAAMA,KAAK3E,4BAA4BhU,EAAO2Y,KAAK1E,WAAY0E,KAAK6sC,kBACpH7sC,KAAKwvC,wBACLxvC,KAAKwvC,wBAEb,GAAC,CAAArqD,IAAA,WAAAuH,MACD,WACI,OAAOsT,KAAK3Y,KAChB,GACA,CAAAlC,IAAA,aAAAuH,MAGA,SAAWlF,GACP,OAAOwY,KAAK3Y,MAAMM,SAAWqY,KAAK3Y,MAAMM,SAASH,QAAQQ,CAC7D,GACA,CAAA7C,IAAA,uBAAAuH,MAGA,WACI,OAAOsT,KAAK3Y,MAAM+V,UACtB,GAAC,CAAAjY,IAAA,wBAAAuH,MACD,WACI,OAAOsT,KAAK3Y,MAAM5B,kBACtB,GAAC,CAAAN,IAAA,wBAAAuH,MACD,WACI,OAAOsT,KAAKvY,cACNuY,KACAA,KAAK1U,OACD0U,KAAK1U,OAAOmkD,6BACZznD,CACd,GAAC,CAAA7C,IAAA,oBAAAuH,MACD,WACI,GAD2B3H,UAAAC,OAAA,QAAAgD,IAAAjD,UAAA,IAAAA,UAAA,GAEvB,OAAOib,KAAK1U,OAAS0U,KAAK1U,OAAOi8B,yBAAsBv/B,EAE3D,IAAKgY,KAAK5Y,sBAAuB,CAC7B,IAAMU,EAAUkY,KAAK1U,QACf0U,KAAK1U,OAAOi8B,qBACZ,CAAC,EAIP,YAH2Bv/B,IAAvBgY,KAAK3Y,MAAMU,UACXD,EAAQC,QAAUiY,KAAK3Y,MAAMU,SAE1BD,CACX,CAEA,IADA,IAAMA,EAAU,CAAC,EACRhD,EAAI,EAAGA,EAAI4nD,GAAiB5nD,IAAK,CACtC,IAAM0C,EAAON,EAAapC,GACpBwD,EAAO0X,KAAK3Y,MAAMG,IACpBb,EAAe2B,KAAkB,IAATA,KACxBR,EAAQN,GAAQc,EAExB,CACA,OAAOR,CACX,GACA,CAAA3C,IAAA,kBAAAuH,MAGA,SAAgBkX,GACZ,IAAM8rC,EAAqB1vC,KAAKyvC,wBAChC,GAAIC,EAGA,OAFAA,EAAmB7pB,iBACf6pB,EAAmB7pB,gBAAgBtkB,IAAIqC,GACpC,kBAAM8rC,EAAmB7pB,gBAAgBlkB,OAAOiC,EAAM,CAErE,GACA,CAAAze,IAAA,WAAAuH,MAGA,SAASvH,EAAKuH,GAENA,IAAUsT,KAAK/F,OAAOzM,IAAIrI,KAC1B6a,KAAKsvC,YAAYnqD,GACjB6a,KAAK0tC,kBAAkBvoD,EAAKuH,IAEhCsT,KAAK/F,OAAOtM,IAAIxI,EAAKuH,GACrBsT,KAAKvL,aAAatP,GAAOuH,EAAMc,KACnC,GACA,CAAArI,IAAA,cAAAuH,MAGA,SAAYvH,GACR6a,KAAK/F,OAAO0H,OAAOxc,GACnB,IAAMy9B,EAAc5iB,KAAK4sC,mBAAmBp/C,IAAIrI,GAC5Cy9B,IACAA,IACA5iB,KAAK4sC,mBAAmBjrC,OAAOxc,WAE5B6a,KAAKvL,aAAatP,GACzB6a,KAAK2vC,2BAA2BxqD,EAAK6a,KAAK9E,YAC9C,GACA,CAAA/V,IAAA,WAAAuH,MAGA,SAASvH,GACL,OAAO6a,KAAK/F,OAAOvM,IAAIvI,EAC3B,GAAC,CAAAA,IAAA,WAAAuH,MACD,SAASvH,EAAK05B,GACV,GAAI7e,KAAK3Y,MAAM4S,QAAU+F,KAAK3Y,MAAM4S,OAAO9U,GACvC,OAAO6a,KAAK3Y,MAAM4S,OAAO9U,GAE7B,IAAIuH,EAAQsT,KAAK/F,OAAOzM,IAAIrI,GAK5B,YAJc6C,IAAV0E,QAAwC1E,IAAjB62B,IACvBnyB,EAAQg3B,GAAY7E,EAAc,CAAEjB,MAAO5d,OAC3CA,KAAKmkB,SAASh/B,EAAKuH,IAEhBA,CACX,GACA,CAAAvH,IAAA,YAAAuH,MAKA,SAAUvH,GACN,YAAkC6C,IAA3BgY,KAAKvL,aAAatP,IAAuB6a,KAAKxW,QAE/CwW,KAAK4vC,sBAAsB5vC,KAAKxW,QAASrE,EAAK6a,KAAKtL,SADnDsL,KAAKvL,aAAatP,EAE5B,GACA,CAAAA,IAAA,gBAAAuH,MAIA,SAAcvH,EAAKuH,GACfsT,KAAKktC,WAAW/nD,GAAOuH,CAC3B,GACA,CAAAvH,IAAA,gBAAAuH,MAIA,SAAcvH,GACV,IAAIoS,EACIxP,EAAYiY,KAAK3Y,MAAjBU,QACF8nD,EAAsC,kBAAZ9nD,GAA2C,kBAAZA,EACD,QAAvDwP,EAAKmE,GAAwBsE,KAAK3Y,MAAOU,UAA6B,IAAPwP,OAAgB,EAASA,EAAGpS,QAC5F6C,EAIN,GAAID,QAAgCC,IAArB6nD,EACX,OAAOA,EAMX,IAAMhrD,EAASmb,KAAK8vC,uBAAuB9vC,KAAK3Y,MAAOlC,GACvD,YAAe6C,IAAXnD,GAAyB0J,EAAc1J,QAMRmD,IAA5BgY,KAAKmtC,cAAchoD,SACD6C,IAArB6nD,OACE7nD,EACAgY,KAAKktC,WAAW/nD,GARXN,CASf,GAAC,CAAAM,IAAA,KAAAuH,MACD,SAAGmR,EAAWuD,GAIV,OAHKpB,KAAKgiB,OAAOnkB,KACbmC,KAAKgiB,OAAOnkB,GAAa,IAAI2jB,IAE1BxhB,KAAKgiB,OAAOnkB,GAAW0D,IAAIH,EACtC,GAAC,CAAAjc,IAAA,SAAAuH,MACD,SAAOmR,GACH,GAAImC,KAAKgiB,OAAOnkB,GAAY,SAAAkyC,EAAA/wC,EAAAja,UAAAC,OADXu6C,EAAI,IAAA14C,MAAAmY,EAAA,EAAAA,EAAA,KAAAgxC,EAAA,EAAAA,EAAAhxC,EAAAgxC,IAAJzQ,EAAIyQ,EAAA,GAAAjrD,UAAAirD,IAEjBD,EAAA/vC,KAAKgiB,OAAOnkB,IAAWwkB,OAAM19B,MAAAorD,EAAIxQ,EACrC,CACJ,KAACoN,CAAA,CAldc,G,kCGhCbsD,GAAgB,SAAAC,IAAAjtC,EAAAA,GAAAA,GAAAgtC,EAAAC,GAAA,IAAAhtC,GAAAC,EAAAA,GAAAA,GAAA8sC,GAAA,SAAAA,IAAA,OAAAlwC,EAAAA,GAAAA,GAAA,KAAAkwC,GAAA/sC,EAAAve,MAAA,KAAAI,UAAA,CAwCjB,OAxCiBmb,EAAAA,GAAAA,GAAA+vC,EAAA,EAAA9qD,IAAA,2BAAAuH,MAClB,SAAyBmS,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEsxC,wBAAwBrxC,GAAS,GAAK,CACnD,GAAC,CAAA3Z,IAAA,yBAAAuH,MACD,SAAuBrF,EAAOlC,GAC1B,OAAOkC,EAAMuN,MAAQvN,EAAMuN,MAAMzP,QAAO6C,CAC5C,GAAC,CAAA7C,IAAA,6BAAAuH,MACD,SAA2BvH,EAAGgF,GAAmB,IAAf0K,EAAI1K,EAAJ0K,KAAMD,EAAKzK,EAALyK,aAC7BC,EAAK1P,UACLyP,EAAMzP,EACjB,GAAC,CAAAA,IAAA,mCAAAuH,MACD,SAAAM,EAAAs5B,EAAgGrmB,GAAW,IAAxE7C,EAAUpQ,EAAVoQ,WAAYD,EAAanQ,EAAbmQ,cAAkBtY,EAAM2S,GAAAxK,EAAA4L,IAAMvC,EAAeiwB,EAAfjwB,gBACrEyB,ElDqFZ,SAAmBjT,EAAQuY,EAAY/R,GACnC,IAAMyM,EAAS,CAAC,EAChB,IAAK,IAAM3S,KAAON,EAAQ,CACtB,IAAMurD,EAAmB7rB,GAAwBp/B,EAAKiY,GACtD,QAAyBpV,IAArBooD,EACAt4C,EAAO3S,GAAOirD,MAEb,CACD,IAAM1jD,EAAQrB,EAAc64B,SAAS/+B,GACjCuH,IACAoL,EAAO3S,GAAOuH,EAAMc,MAE5B,CACJ,CACA,OAAOsK,CACX,CkDpGqBu4C,CAAUxrD,EAAQuY,GAAc,CAAC,EAAG4C,MAYjD,GARI3J,IACI8G,IACAA,EAAgB9G,EAAgB8G,IAChCtY,IACAA,EAASwR,EAAgBxR,IACzBiT,IACAA,EAASzB,EAAgByB,KAE7BmI,EAAW,ElDoBvB,SAAiC5U,EAAexG,EAAQiT,GACpD,IAAIP,EAAIoZ,EACF2/B,EAAensD,OAAOD,KAAKW,GAAQP,QAAO,SAACa,GAAG,OAAMkG,EAAc44B,SAAS9+B,EAAI,IAC/EorD,EAAeD,EAAatrD,OAClC,GAAKurD,EAEL,IAAK,IAAIzrD,EAAI,EAAGA,EAAIyrD,EAAczrD,IAAK,CACnC,IAAMK,EAAMmrD,EAAaxrD,GACnB0rD,EAAc3rD,EAAOM,GACvBuH,EAAQ,KAKR7F,MAAMC,QAAQ0pD,KACd9jD,EAAQ8jD,EAAY,IAOV,OAAV9jD,IACAA,EAAoG,QAA3FikB,EAA4B,QAAtBpZ,EAAKO,EAAO3S,UAAyB,IAAPoS,EAAgBA,EAAKlM,EAAcolD,UAAUtrD,UAAyB,IAAPwrB,EAAgBA,EAAK9rB,EAAOM,SAM9H6C,IAAV0E,GAAiC,OAAVA,IAEN,kBAAVA,ITjFc,iBAAiBsB,KSkFnBtB,IAAU00B,GAAkB10B,IAE/CA,EAAQkD,WAAWlD,IAEbq3B,GAAcr3B,IAAUgkB,GAAQ1iB,KAAKwiD,KAC3C9jD,EAAQmkB,GAAkB1rB,EAAKqrD,IAEnCnlD,EAAc84B,SAASh/B,EAAKu+B,GAAYh3B,EAAO,CAAEkxB,MAAOvyB,UACpCrD,IAAhB8P,EAAO3S,KACP2S,EAAO3S,GAAOuH,GAEJ,OAAVA,GACArB,EAAcqlD,cAAcvrD,EAAKuH,GACzC,CACJ,CkDjEYikD,CAAwB3wC,KAAMnb,EAAQiT,GACtC,IAAMgZ,EN5BM,SAACzlB,EAAexG,EAAQiT,EAAQqF,GACpD,IAAMD,EAAWw5B,GAAoBrrC,EAAexG,EAAQsY,GAG5D,OAAO+uC,GAAe7gD,EAFtBxG,EAASqY,EAASrY,OAE2BiT,EAD7CqF,EAAgBD,EAASC,cAE7B,CMuB2ByzC,CAAgB5wC,KAAMnb,EAAQiT,EAAQqF,GACrDA,EAAgB2T,EAAO3T,cACvBtY,EAASisB,EAAOjsB,MACpB,CACA,OAAA6F,EAAA,CACI0S,WAAAA,EACAD,cAAAA,GACGtY,EAEX,KAACorD,CAAA,CAxCiB,CAAStD,ICQ9B,IACKkE,GAAiB,SAAAC,IAAA7tC,EAAAA,GAAAA,GAAA4tC,EAAAC,GAAA,IAAA5tC,GAAAC,EAAAA,GAAAA,GAAA0tC,GAAA,SAAAA,IAAA,OAAA9wC,EAAAA,GAAAA,GAAA,KAAA8wC,GAAA3tC,EAAAve,MAAA,KAAAI,UAAA,CAsClB,OAtCkBmb,EAAAA,GAAAA,GAAA2wC,EAAA,EAAA1rD,IAAA,wBAAAuH,MACnB,SAAsBE,EAAUzH,GAC5B,GAAIgJ,EAAeT,IAAIvI,GAAM,CACzB,IAAM4rD,EAAcrxB,GAAoBv6B,GACxC,OAAO4rD,GAAcA,EAAYhhD,SAAe,CACpD,CAEI,IAVc4K,EAURq2C,GAVQr2C,EAUyB/N,EATxCX,OAAOuqC,iBAAiB77B,IAUjBjO,GAASuC,EAAkB9J,GAC3B6rD,EAAcva,iBAAiBtxC,GAC/B6rD,EAAc7rD,KAAS,EAC7B,MAAwB,kBAAVuH,EAAqBA,EAAMiJ,OAASjJ,CAE1D,GAAC,CAAAvH,IAAA,6BAAAuH,MACD,SAA2BE,EAAQzC,GAC/B,OAAOwkC,GAAmB/hC,EAD2BzC,EAAlB1E,mBAEvC,GAAC,CAAAN,IAAA,QAAAuH,MACD,SAAMwO,EAAazG,EAAcC,EAASrN,GACtCkN,GAAgB2G,EAAazG,EAAcC,EAASrN,EAAMsN,kBAC9D,GAAC,CAAAxP,IAAA,8BAAAuH,MACD,SAA4BrF,EAAOiU,GAC/B,OAAOD,GAA4BhU,EAAOiU,EAC9C,GAAC,CAAAnW,IAAA,yBAAAuH,MACD,WAAyB,IAAA2W,EAAA,KACjBrD,KAAKixC,oBACLjxC,KAAKixC,2BACEjxC,KAAKixC,mBAEhB,IAAQ72C,EAAa4F,KAAK3Y,MAAlB+S,SACJ7L,EAAc6L,KACd4F,KAAKixC,kBAAoB72C,EAASuoB,GAAG,UAAU,SAACrK,GACxCjV,EAAK7Z,UACL6Z,EAAK7Z,QAAQ0nD,YAAc,GAAH/pD,OAAMmxB,GACtC,IAER,GAAC,CAAAnzB,IAAA,iBAAAuH,MACD,SAAeE,EAAUsO,EAAaN,EAAWC,GAC7CH,GAAW9N,EAAUsO,EAAaN,EAAWC,EACjD,KAACg2C,CAAA,CAtCkB,CAASZ,I,WCZjB,SAASkB,KActB,OAZEA,GADqB,qBAAZC,SAA2BA,QAAQ5jD,IACrC4jD,QAAQ5jD,IAAI6jD,OAEZ,SAAcxsD,EAAQysD,EAAUC,GACrC,IAAIC,ECLK,SAAwBxtD,EAAQstD,GAC7C,MAAQntD,OAAOqC,UAAUC,eAAeC,KAAK1C,EAAQstD,IAEpC,QADfttD,GAAS,EAAAytD,GAAA,GAAeztD,MAG1B,OAAOA,CACT,CDDiB,CAAca,EAAQysD,GACjC,GAAKE,EAAL,CACA,IAAIE,EAAOvtD,OAAOK,yBAAyBgtD,EAAMF,GACjD,OAAII,EAAKlkD,IACAkkD,EAAKlkD,IAAI9G,KAAK3B,UAAUC,OAAS,EAAIH,EAAS0sD,GAEhDG,EAAKhlD,KALK,CAMnB,EAEKykD,GAAKxsD,MAAMqb,KAAMjb,UAC1B,CEPkD,IAE5C4sD,GAAgB,SAAAb,IAAA7tC,EAAAA,GAAAA,GAAA0uC,EAAAb,GAAA,IAAA5tC,GAAAC,EAAAA,GAAAA,GAAAwuC,GAClB,SAAAA,IAAc,IAAAtuC,EAEY,OAFZtD,EAAAA,GAAAA,GAAA,KAAA4xC,IACVtuC,EAAAH,EAAAve,MAAA,KAASI,YACJqT,UAAW,EAAMiL,CAC1B,CA2BC,OA3BAnD,EAAAA,GAAAA,GAAAyxC,EAAA,EAAAxsD,IAAA,yBAAAuH,MACD,SAAuBrF,EAAOlC,GAC1B,OAAOkC,EAAMlC,EACjB,GAAC,CAAAA,IAAA,wBAAAuH,MACD,SAAsBE,EAAUzH,GAC5B,GAAIgJ,EAAeT,IAAIvI,GAAM,CACzB,IAAM4rD,EAAcrxB,GAAoBv6B,GACxC,OAAO4rD,GAAcA,EAAYhhD,SAAe,CACpD,CAEA,OADA5K,EAAO6V,GAAoBtN,IAAIvI,GAA0BA,EAAnBoV,GAAYpV,GAC3CyH,EAASglD,aAAazsD,EACjC,GAAC,CAAAA,IAAA,6BAAAuH,MACD,WACI,OAAOwgC,IACX,GAAC,CAAA/nC,IAAA,8BAAAuH,MACD,SAA4BrF,EAAOiU,GAC/B,OAAOD,GAA4BhU,EAAOiU,EAC9C,GAAC,CAAAnW,IAAA,QAAAuH,MACD,SAAMwO,EAAazG,EAAcC,EAASrN,GACtC8Q,GAAc+C,EAAazG,EAAcC,EAASsL,KAAK5H,SAAU/Q,EAAMsN,kBAC3E,GAAC,CAAAxP,IAAA,iBAAAuH,MACD,SAAeE,EAAUsO,EAAaN,EAAWC,GAC7CI,GAAUrO,EAAUsO,EAAaN,EAAWC,EAChD,GAAC,CAAA1V,IAAA,QAAAuH,MACD,SAAME,GACFoT,KAAK5H,SAAWA,GAASxL,EAAS8Q,SAClCyzC,IAAAU,EAAAA,GAAAA,GAAAF,EAAAnrD,WAAA,cAAAE,KAAA,KAAYkG,EAChB,KAAC+kD,CAAA,CA/BiB,CAAS1B,ICPzB6B,GAAyB,SAACtnD,EAAWkK,GACvC,OAAO7G,EAAerD,GAChB,IAAImnD,GAAiBj9C,EAAS,CAAEY,4BAA4B,IAC5D,IAAIu7C,GAAkBn8C,EAAS,CAAEY,4BAA4B,GACvE,ECLMrM,GAAS,CACXA,OAAQ,CACJs0C,eAAgBuL,GAChB/9C,cAAAA,KCGFX,GAAiBM,EAAAA,EAAAA,EAAAA,EAAA,GAChBo6B,IACAvc,IACA5f,IACAM,IAQD8oD,GAAuB7kD,GAAkB,SAAC1C,EAAW8R,GAAM,OChBjE,SAA+B9R,EAASL,EAAkCC,EAAmBC,GAAqB,IAAA2nD,EAAA7nD,EAAtE2P,mBAAAA,OAAkB,IAAAk4C,GAAQA,EAIlE,OAAAtnD,EAAAA,EAAA,GAHmBmD,EAAerD,GAC5B8S,GACAK,IAEW,IACbvT,kBAAAA,EACAE,UAAWuP,GAAgBC,GAC3BzP,oBAAAA,EACAG,UAAAA,GAER,CDKsEynD,CAAsBznD,EAAW8R,EAAQlS,GAAmB0nD,GAAuB,G","sources":["../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/wildcards.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelSync, sync } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        sync.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelSync.update(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\nimport { fillWildcardKeyframes } from './wildcards.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        return fillWildcardKeyframes(origin, target);\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","function fillWildcardKeyframes(origin, [...keyframes]) {\n    /**\n     * Ensure an wildcard keyframes are hydrated by the origin.\n     */\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? origin : keyframes[i - 1];\n        }\n    }\n    return keyframes;\n}\n\nexport { fillWildcardKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.11.6\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.11.6\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.11.6 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","defineProperty","getOwnPropertyDescriptors","defineProperties","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","useConstant","init","useRef","current","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","this","isMounted","_createClass","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","cancel","index","splice","delete","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","requestAnimationFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","_toConsumableArray","numbers","tokenised","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","_toArray","fillWildcardKeyframes","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isZeroValueString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","read","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","bind","property","receiver","base","getPrototypeOf","desc","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","createDomMotionConfig"],"sourceRoot":""}